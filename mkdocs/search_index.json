{
    "docs": [
        {
            "location": "/", 
            "text": "Welcome to the \nOrganiCity\n GitHub account. This web page will give you a comprehensive view of all the tools and APIs made available within the facility.\n\n\nExperimentation as a Service Facility\n\n\nOrganiCity project has built an Experimentation-as-a-Service (EaaS) framework that supports the co-creation and validation of a large set of smart city services and applications under real conditions in a powerful innovation ecosystem. It provides functionality to both advanced users/developers, as well as more \"casual\" end-users like citizens or even activists, decision makers or politicians (Organicitizens). The idea behind this objective is that any Organicitizen, might develop and deploy its own services (e.g., a website, a web service, a desktop application or a smartphone application) that interact with the platform through the different APIs exposed by Organicity facility.\n\n\nHigh level architecture of the facility\n\n\nAs it can be seen in the following figure, three different tiers can be distinguished within the OC facility architecture:\n\n\n\n\nFigure 1.\n OrganiCity facility high level architecture\n\n\n\n\nOC Experimentation tier.\nThe OrganiCity Experimentation tier consists of various components (deployed services and applications, template applications or libraries) that facilitate the building of applications and services for experimentation with them. At this level, any Organicitizen with the experimenter role might develop and deploy its own services (e.g., a website, a web service, a desktop application or a smartphone application) that interact with the platform through the different APIs.\n\n\nOC Platform tier.\n It is represented by the OC platform and its components that permits platform managers to adminstrate and control it. It exposed different services that can be used by the experimenters to interact with the platform exploring data assets, annotating them or even creating new ones within the scope of their experiment.\n\n\nOC Site tier.\n It consists of infrastructures belonging to different \nOC City sites\n, the infrastructures and resources of experimenters \n(OC experimenters site)\n and the infrastructure supporting the generation of crowdsourcing data into the platform \n(OC Provider Site).\n\n    It is important to note that experimenters aiming to feed data into the platform should rely on the OC experimenters site. It exposes several methods trough the Federation API that can create, delete or update assets within the facility under the scope of the experiment \n(More info)\n.\n\n\n\n\nUsers Accounts and registration\n\n\nTo ensure that all interactions with the facility are authenticated with valid user credentials and access rights, Authentication, Authorization and Accounting (AAA) mechanisms have been implemented. Users will be enforced to use their own credentials to interact with the different APIs and tools. To start experimenting on top of the OC facility, the experimenters are encouraged to register themselves in the platform. Click \nhere\n to register yourself.\n\nOnce experimenters get registered within the platform, they will be assigned with the OC user role. The OC facility managers will assign the experimenters the OC experimenter role upon the acceptation of the corresponding request. To this end, you should send an email to \nhelpdesk@organicity.eu\n, indicating the mail that you have been registered with and the experiment that you belong to.\n\n\nTools and enablers for experimentation in Organicity\n\n\nOnce the experimenters are registered in the facility, they will have access to a set of tools that will facilitate the experimentation and co-creation activities that they have planned within their experiment. Attending to their functionalities, they can be classified in three different types:\n\n\n\n\n\n\nTools to Manage the experiment life-cycle.\n To create, configure and run experiments within the OrganiCity facility, experimenters must use the Experimenter Portal, and other complementary components which will allow them to manage different experiments concurrently.\n\n\n\n\nExperimenter Portal\n. It is the user interface to be used by the experimenters in order to define the scope of the experiments and manage them during their entire life cycle. From this portal, the experimenters will get access to the set of co-creation tools offered that they can use to build their experiments, the documentation and support channels. (\nSee further details about how to manage the experiment life cycle\n)\n\n\nSmartphone experimentation framework\n. It is a complementary framework that facilitates experimenter to gather and process data from the sensors and communication interfaces of the smartphones of volunteers and use them to run experiments. \n(More)\n\n\nCommunity Management\n. Basic functionality for interacting with the different communities of \nOrganicitizens\n participating in each experiment, which has been integrated within the Experimenter Portal.\n\n\n\n\n\n\n\n\nTools for discovering, exploring and annotating data assets.\n\n\n\n\n\n\nUrban Data Observatory UI\n. The UDO provides a UI that allows experimeters to develop a deeper understanding of the federated city data sources that can be used in your experiments. It is based on an Asset Directory that maintains entries for the federated urban assets registered at the facility from the city sites and also from the experiments. \nMore info\n\n\n\n\n\n\nData Annotation services\n. These services simplify the process of creating meaningful knowledge from urban data streams. The first phase of this tool will allow experimenters and citizens to use pre-defined tag sets for annotating existing data assets. (\nMore details\n )\n\n\n\n\n\n\nCo-creation tools.\n A set of innovative tools and enablers for the co-creation of urban infrastructure, knowledge and services has been developed and integrated within the EaaS facility infrastructure, extending it and facilitating experimental research for new services and innovative applications.\n\n\n\n\n\n\nSensiNact\n aims at helping coders working with data streams from deployed data assets without the need to learn about the Organicity APIs. By using \nit, experimenters can interact with information of different data assets available in\n the different clusters, as well as within the scope of their experiments, and understand the data streams that they provide. The SensiNact IDE allows the creation of applications using a scripting tool (with Code Assist functionality). \nSee more...\n\n\n\n\nTSmarT\n. It is a modular wireless communications platform designed to facilitate the development and implementation of M2M, monitoring and remote control applications in different markets. TSmarT devices are integrated with OrganiCity facility and therefore able to feed data to the OC platform, connecting them to the OC experimenters site. \nSee more...\n\n\nTinkerSpace\n.Toolkit for creating mobile services - Apps - without the need for extensive software training or experience. Tinkerspace builds on the idea of Component-based software engineering and Visual programming, with LEGO\u2122 as an inspiration \u2013 it should be as easy to build a mobile app as to build a LEGO\u2122 model. \nSee more...\n\n\nWeb socket processing library\n.This library enables experimenters who have skills in the Processing programming language to easily connect to data streams from IoT devices in the OrganiCity facility. They may then actuate events in real-time as part of their Processing sketches. \nSee more...\n\n\nDUL Radio and Event Bus\n.The DUL-Radio allows OrganiCity experimenters to make wirelessly connected sensors, starting with very little technical knowledge. The board features a built-in accelerometer, but also has analog and digital inputs which can be used to connect other sensors.\n\n    The DUL-radio transmits data back to the provided \u201cEventBus\u201d software which enables users with a limited knowledge of computer programming to easily create applications and data collection services. \nSee more...\n\n\n\n\nOrganicity APIs\n\n\n\n\nAsset Discovery\nIt facilitates exploration and inspection of available assets. \nMore info...\n\n\nAsset Federation\n.It provides access to asset creation and update services of Organicity. \nMore info...\n\n\nAsset Annotation\n. It provides access to asset annotation servives of Organicity. \nMore info...\n\n\nPermissions\n. It provides inspection, editing and updating of access permissions. \nMore info...\n\n\n\n\nAssets\n\n\nUrban resources are modeled inside Organicity as Assets. These assets it's possible to model IoT devices, observations like temperature, information like social events etc. The description of the assets is following the NGSI9/10 information modelling specification ( \nMore details\n)\n\nCurrently in the Organicity platform, there are federated assets from the city sites: Aarhus (Denmark), London (UK) and Santander (Spain) ( \nMore details\n)\n\n\nSupport\n\n\nFor resolving technical questions, reporting specific issues/bugs and discussion possible extensions in the services and tools of Organicity, Slack and GitHub issue tracking is recommended for use.\n\n\n\n\nGeneric questions\n. Use the tech channel on slack to ask for generic questions. We will try to guide you and solve your doubts at \nhttps://organicityexperiments.slack.com\n\n\nGeneric issues\n. If you find a generic issue, you can report it and keep track at \nhttps://github.com/OrganicityEu/organicityeu.github.io/issues\n\n\nSpecific issues related to a particular tool\n. Browse the various repositories at \nhttps://github.com/OrganicityEu/\n and then report the issue in the proper one.", 
            "title": "home"
        }, 
        {
            "location": "/#experimentation-as-a-service-facility", 
            "text": "OrganiCity project has built an Experimentation-as-a-Service (EaaS) framework that supports the co-creation and validation of a large set of smart city services and applications under real conditions in a powerful innovation ecosystem. It provides functionality to both advanced users/developers, as well as more \"casual\" end-users like citizens or even activists, decision makers or politicians (Organicitizens). The idea behind this objective is that any Organicitizen, might develop and deploy its own services (e.g., a website, a web service, a desktop application or a smartphone application) that interact with the platform through the different APIs exposed by Organicity facility.", 
            "title": "Experimentation as a Service Facility"
        }, 
        {
            "location": "/#high-level-architecture-of-the-facility", 
            "text": "As it can be seen in the following figure, three different tiers can be distinguished within the OC facility architecture:   Figure 1.  OrganiCity facility high level architecture   OC Experimentation tier. The OrganiCity Experimentation tier consists of various components (deployed services and applications, template applications or libraries) that facilitate the building of applications and services for experimentation with them. At this level, any Organicitizen with the experimenter role might develop and deploy its own services (e.g., a website, a web service, a desktop application or a smartphone application) that interact with the platform through the different APIs.  OC Platform tier.  It is represented by the OC platform and its components that permits platform managers to adminstrate and control it. It exposed different services that can be used by the experimenters to interact with the platform exploring data assets, annotating them or even creating new ones within the scope of their experiment.  OC Site tier.  It consists of infrastructures belonging to different  OC City sites , the infrastructures and resources of experimenters  (OC experimenters site)  and the infrastructure supporting the generation of crowdsourcing data into the platform  (OC Provider Site). \n    It is important to note that experimenters aiming to feed data into the platform should rely on the OC experimenters site. It exposes several methods trough the Federation API that can create, delete or update assets within the facility under the scope of the experiment  (More info) .", 
            "title": "High level architecture of the facility"
        }, 
        {
            "location": "/#users-accounts-and-registration", 
            "text": "To ensure that all interactions with the facility are authenticated with valid user credentials and access rights, Authentication, Authorization and Accounting (AAA) mechanisms have been implemented. Users will be enforced to use their own credentials to interact with the different APIs and tools. To start experimenting on top of the OC facility, the experimenters are encouraged to register themselves in the platform. Click  here  to register yourself. \nOnce experimenters get registered within the platform, they will be assigned with the OC user role. The OC facility managers will assign the experimenters the OC experimenter role upon the acceptation of the corresponding request. To this end, you should send an email to  helpdesk@organicity.eu , indicating the mail that you have been registered with and the experiment that you belong to.", 
            "title": "Users Accounts and registration"
        }, 
        {
            "location": "/#tools-and-enablers-for-experimentation-in-organicity", 
            "text": "Once the experimenters are registered in the facility, they will have access to a set of tools that will facilitate the experimentation and co-creation activities that they have planned within their experiment. Attending to their functionalities, they can be classified in three different types:    Tools to Manage the experiment life-cycle.  To create, configure and run experiments within the OrganiCity facility, experimenters must use the Experimenter Portal, and other complementary components which will allow them to manage different experiments concurrently.   Experimenter Portal . It is the user interface to be used by the experimenters in order to define the scope of the experiments and manage them during their entire life cycle. From this portal, the experimenters will get access to the set of co-creation tools offered that they can use to build their experiments, the documentation and support channels. ( See further details about how to manage the experiment life cycle )  Smartphone experimentation framework . It is a complementary framework that facilitates experimenter to gather and process data from the sensors and communication interfaces of the smartphones of volunteers and use them to run experiments.  (More)  Community Management . Basic functionality for interacting with the different communities of  Organicitizens  participating in each experiment, which has been integrated within the Experimenter Portal.     Tools for discovering, exploring and annotating data assets.    Urban Data Observatory UI . The UDO provides a UI that allows experimeters to develop a deeper understanding of the federated city data sources that can be used in your experiments. It is based on an Asset Directory that maintains entries for the federated urban assets registered at the facility from the city sites and also from the experiments.  More info    Data Annotation services . These services simplify the process of creating meaningful knowledge from urban data streams. The first phase of this tool will allow experimenters and citizens to use pre-defined tag sets for annotating existing data assets. ( More details  )    Co-creation tools.  A set of innovative tools and enablers for the co-creation of urban infrastructure, knowledge and services has been developed and integrated within the EaaS facility infrastructure, extending it and facilitating experimental research for new services and innovative applications.    SensiNact  aims at helping coders working with data streams from deployed data assets without the need to learn about the Organicity APIs. By using  it, experimenters can interact with information of different data assets available in  the different clusters, as well as within the scope of their experiments, and understand the data streams that they provide. The SensiNact IDE allows the creation of applications using a scripting tool (with Code Assist functionality).  See more...   TSmarT . It is a modular wireless communications platform designed to facilitate the development and implementation of M2M, monitoring and remote control applications in different markets. TSmarT devices are integrated with OrganiCity facility and therefore able to feed data to the OC platform, connecting them to the OC experimenters site.  See more...  TinkerSpace .Toolkit for creating mobile services - Apps - without the need for extensive software training or experience. Tinkerspace builds on the idea of Component-based software engineering and Visual programming, with LEGO\u2122 as an inspiration \u2013 it should be as easy to build a mobile app as to build a LEGO\u2122 model.  See more...  Web socket processing library .This library enables experimenters who have skills in the Processing programming language to easily connect to data streams from IoT devices in the OrganiCity facility. They may then actuate events in real-time as part of their Processing sketches.  See more...  DUL Radio and Event Bus .The DUL-Radio allows OrganiCity experimenters to make wirelessly connected sensors, starting with very little technical knowledge. The board features a built-in accelerometer, but also has analog and digital inputs which can be used to connect other sensors. \n    The DUL-radio transmits data back to the provided \u201cEventBus\u201d software which enables users with a limited knowledge of computer programming to easily create applications and data collection services.  See more...", 
            "title": "Tools and enablers for experimentation in Organicity"
        }, 
        {
            "location": "/#organicity-apis", 
            "text": "Asset Discovery It facilitates exploration and inspection of available assets.  More info...  Asset Federation .It provides access to asset creation and update services of Organicity.  More info...  Asset Annotation . It provides access to asset annotation servives of Organicity.  More info...  Permissions . It provides inspection, editing and updating of access permissions.  More info...", 
            "title": "Organicity APIs"
        }, 
        {
            "location": "/#assets", 
            "text": "Urban resources are modeled inside Organicity as Assets. These assets it's possible to model IoT devices, observations like temperature, information like social events etc. The description of the assets is following the NGSI9/10 information modelling specification (  More details ) \nCurrently in the Organicity platform, there are federated assets from the city sites: Aarhus (Denmark), London (UK) and Santander (Spain) (  More details )", 
            "title": "Assets"
        }, 
        {
            "location": "/#support", 
            "text": "For resolving technical questions, reporting specific issues/bugs and discussion possible extensions in the services and tools of Organicity, Slack and GitHub issue tracking is recommended for use.   Generic questions . Use the tech channel on slack to ask for generic questions. We will try to guide you and solve your doubts at  https://organicityexperiments.slack.com  Generic issues . If you find a generic issue, you can report it and keep track at  https://github.com/OrganicityEu/organicityeu.github.io/issues  Specific issues related to a particular tool . Browse the various repositories at  https://github.com/OrganicityEu/  and then report the issue in the proper one.", 
            "title": "Support"
        }, 
        {
            "location": "/AssetCRUD/", 
            "text": "CRUD of Assets\n\n\nThis is just an overview of how to CRUD assets.\n\n\nCREATE (HTTP POST)\n\n\nTo \ncreate an asset\n, you must do an HTTP \nPOST\n to the OC-Exp. Site:\n\n\nPOST https://exp.orion.organicity.eu/v2/entities\n\nAuthorization: Bearer \nAccessToken\n\nContent-Type: application/json\nAccept: application/json\nX-Organicity-Application: \nApplicationId\n\nX-Organicity-Experiment: \nExperimentId\n\n\n{\n  \nid\n: \nurn:oc:entity:experimenters:\nMainExperimenterId\n:\nExperimentId\n:\nAssetId\n,\n  \ntype\n: \nurn:oc:entityType:demo\n,\n  \nTimeInstant\n: {\n    \ntype\n: \nurn:oc:attributeType:ISO8601\n,\n    \nvalue\n: \n2016-10-04T13:45:00.000Z\n\n  }\n}\n\n\n\n\nThe response is a \n201 Created\n, which includes a \nlocation\n header:\n\n\nStatus Code: 201 Created\n...\nContent-Length: 0\nContent-Type: text/html; charset=utf-8\nDate: Tue, 20 Sep 2016 12:37:07 GMT\n...\nLocation: http://discovery.organicity.eu/v0/assets/urn:oc:entity:experimenters:\nMainExperimenterId\n:\nExperimentId\n:\nAssetId\n\n...\n\n\n\n\nREAD (HTTP GET)\n\n\nTo read an asset, you must use the \nAsset Discovery Service\n.\nYou can simply do an HTTP GET on the \nlocation\n header returnd by the creation:\n\n\nGET http://discovery.organicity.eu/v0/assets/urn:oc:entity:experimenters:\nMainExperimenterId\n:\nExperimentId\n:\nAssetId\n\n\n\n\n\nUPDATE (HTTP UPDATE)\n\n\nTo \nupdate an asset\n, you must do an HTTP \nPOST\n to the OC-Exp. Site.\nJSON attributes \nid\n and \ntype\n are not allowed! Be aware of the \n/attrs\n in the URL:\n\n\nPOST https://exp.orion.organicity.eu/v2/entities/urn:oc:entity:experimenters:\nMainExperimenterId\n:\nExperimentId\n:\nAssetId\n/attrs\n\nAuthorization: Bearer \nAccessToken\n\nContent-Type: application/json\nAccept: application/json\nX-Organicity-Application: \nApplicationId\n\nX-Organicity-Experiment: \nExperimentId\n\n\n{\n  \nTimeInstant\n: {\n    \ntype\n: \nurn:oc:attributeType:ISO8601\n,\n    \nvalue\n: \n2016-10-04T13:45:00.000Z\n\n  }\n}\n\n\n\n\nThe response is a \n204 No Content\n:\n\n\nStatus Code: 204 No Content\n...\nContent-Length: 0\nContent-Type: text/html; charset=utf-8\nDate: Tue, 20 Sep 2016 12:37:07 GMT\n\n\n\n\nDELETE (HTTP DELETE)\n\n\nTo \ndelete an asset\n, you must do an HTTP \nDELETE\n to the OC-Exp. Site:\n\n\nDELETE  https://exp.orion.organicity.eu/v2/entities/urn:oc:entity:experimenters:\nMainExperimenterId\n:\nExperimentId\n:\nAssetId\n\n\nAuthorization: Bearer \nAccessToken\n\nAccept: application/json\nX-Organicity-Application: \nApplicationId\n\nX-Organicity-Experiment: \nExperimentId\n\n\n\n\n\nThe response is a \n204 No Content\n, which tells you that assed was deleted.", 
            "title": "Asset CRUD"
        }, 
        {
            "location": "/AssetCRUD/#crud-of-assets", 
            "text": "This is just an overview of how to CRUD assets.", 
            "title": "CRUD of Assets"
        }, 
        {
            "location": "/AssetCRUD/#create-http-post", 
            "text": "To  create an asset , you must do an HTTP  POST  to the OC-Exp. Site:  POST https://exp.orion.organicity.eu/v2/entities\n\nAuthorization: Bearer  AccessToken \nContent-Type: application/json\nAccept: application/json\nX-Organicity-Application:  ApplicationId \nX-Organicity-Experiment:  ExperimentId \n\n{\n   id :  urn:oc:entity:experimenters: MainExperimenterId : ExperimentId : AssetId ,\n   type :  urn:oc:entityType:demo ,\n   TimeInstant : {\n     type :  urn:oc:attributeType:ISO8601 ,\n     value :  2016-10-04T13:45:00.000Z \n  }\n}  The response is a  201 Created , which includes a  location  header:  Status Code: 201 Created\n...\nContent-Length: 0\nContent-Type: text/html; charset=utf-8\nDate: Tue, 20 Sep 2016 12:37:07 GMT\n...\nLocation: http://discovery.organicity.eu/v0/assets/urn:oc:entity:experimenters: MainExperimenterId : ExperimentId : AssetId \n...", 
            "title": "CREATE (HTTP POST)"
        }, 
        {
            "location": "/AssetCRUD/#read-http-get", 
            "text": "To read an asset, you must use the  Asset Discovery Service .\nYou can simply do an HTTP GET on the  location  header returnd by the creation:  GET http://discovery.organicity.eu/v0/assets/urn:oc:entity:experimenters: MainExperimenterId : ExperimentId : AssetId", 
            "title": "READ (HTTP GET)"
        }, 
        {
            "location": "/AssetCRUD/#update-http-update", 
            "text": "To  update an asset , you must do an HTTP  POST  to the OC-Exp. Site.\nJSON attributes  id  and  type  are not allowed! Be aware of the  /attrs  in the URL:  POST https://exp.orion.organicity.eu/v2/entities/urn:oc:entity:experimenters: MainExperimenterId : ExperimentId : AssetId /attrs\n\nAuthorization: Bearer  AccessToken \nContent-Type: application/json\nAccept: application/json\nX-Organicity-Application:  ApplicationId \nX-Organicity-Experiment:  ExperimentId \n\n{\n   TimeInstant : {\n     type :  urn:oc:attributeType:ISO8601 ,\n     value :  2016-10-04T13:45:00.000Z \n  }\n}  The response is a  204 No Content :  Status Code: 204 No Content\n...\nContent-Length: 0\nContent-Type: text/html; charset=utf-8\nDate: Tue, 20 Sep 2016 12:37:07 GMT", 
            "title": "UPDATE (HTTP UPDATE)"
        }, 
        {
            "location": "/AssetCRUD/#delete-http-delete", 
            "text": "To  delete an asset , you must do an HTTP  DELETE  to the OC-Exp. Site:  DELETE  https://exp.orion.organicity.eu/v2/entities/urn:oc:entity:experimenters: MainExperimenterId : ExperimentId : AssetId \n\nAuthorization: Bearer  AccessToken \nAccept: application/json\nX-Organicity-Application:  ApplicationId \nX-Organicity-Experiment:  ExperimentId   The response is a  204 No Content , which tells you that assed was deleted.", 
            "title": "DELETE (HTTP DELETE)"
        }, 
        {
            "location": "/AssetDataModel/", 
            "text": "Asset Data Model\n\n\nFor the organization and discovery of data sources, Organicity platform is relying on the \nNGSI9/10\n information model. As depicted in the following diagram, the underlying data model of NGSI\n9/10 consists of Asset Element, Asset Attributes and Attribute Metadata\n\n\n\n\nAn asset is associated with multiple attributes and each attribute can be associated with various\nmetadata. Each one of the Organicity Sites and probably Organicity Experiments are contributing assets into\nthe facility. Assets can represent various types of urban resources from\nIoT/sensor devices with sensors attached, smartphones, services, data sources stored as data\nfiles (csv, xml, pdf) shared online or references to data\u00adendpoints online (third party APIs and\ndata services). For purposes of clarity of how the data of the various assets can be accessed the\nOrganicity indexed assets can be organized in three major categories:\n\n\n\n\nOC raw assets\n: for this type of assets clients of OC platform can retrieve either their last\nvalue or historic values. In general it is possible to post various queries for retrieving data\nof the assets. The execution of the queries is managed by the OC facility and the OC\nSite where this asset belongs to.\n\n\nOC dataset assets\n: \u200b these assets are representing data sources encoded in datafiles\nthat are shared online (e.g., CKAN instances where the data sources are exposed as\nfiles csv, xml, xls, pdf etc.). Organicity clients can discover these assets by posting discovery\nqueries on the OC platform based on their various metadata. The  platform just\ndelivers description of the assets. Organicity clients have to access the online urls to fetch the\nfiles and then further process the dataset files to consume the data.\n\n\nOC online data\u00adendpoint assets\n: \u200b these assets are representing  online\ndata\u00adendpoints/APIs for which the actual data access is not managed by the OC facility.\nOC clients can discover these assets by posting discovery queries on OC platform based\non their various metadata. The Organicity platform just delivers description of the assets. OC\nclients have to access the online endpoints in order to post queries and consume the\ndata.\n\n\n\n\nIn order to avoid conflicts with the identification of the assets and facilitating interaction with the\nentity information to the experimenters, there are specific conventions that should be followed on\nAsset, Attribute and Metadata definition.\n\n\nAsset Attributes and Metadata:\n\n\nEach Asset Element has to be associated with a set of of attributes. Each Asset Attribute\nmight represent various parameters of the asset. In the case of an IoT device or a\nsmartphone it might represent a sensing or actuation capability of the device or a device\ncharacteristic (static or not) like the human readable name of the device, its description,\nits location and so on. In the case of more abstract assets attributes might represent\ntypes of observations not produced by physical sensors (e.g., a bus reporting the number\nof available seats or the number of the route). Each attribute consists of a type shared\namongst all Organicity sites, the actual value of the attribute and a list of metadata that describe\nthe value.\n\n\nBy utilizing the proper attributes for the description of Assets various visualization and\nbrowsing options are made available through the Urban Data Observatory and the rest of the Organicity tools\nincluding:\n- GeoJson data browsing for attributes of assets referring to specific territories\n- Time\u00adseries data browsing for attributes of assets with historical data\n- combinations of the above cases\n\n\nEach Metadata entry represents more characteristics of an attribute, like units of\nmeasurement and data types of the attribute value etc.\n\n\nCommon attribute types (e.g., observation types) should be described with same format\nby the Organicity sites and values should be represented at the same set of units (e.g., distance\nin meters and temperature in degrees Centigrade).\n\n\nDuring the federation of various assets from the Organicity City Sites (Aarhus, London, Santader) a list\nof common urn names for Asset Types, Attribute Types and Metadata has been created (Get \nXLS\n file).\nIt is recommended to use the available names when you are creating your assets.\n\n\nTypes and Identification of Assets\n\n\nEach entity should have an unique identifier in the form of \n\nurn:oc:entity:[site]:[service]:[provider]:[group]:[entityName]\n \nwhere:\n\n\n\n\n\n\nurn:oc:entity:[site]:[service]:[provider]:[group]:[entityName]\n \u200b should be\nunique across the whole Organicity facility.\n\n\n\n\n\n\n[site]\n is representing the federated Organicity site (e.g., London, Santader, Aarhus, Experimenters etc.). During the creation of your experiment you are going\n to aquire the proper prefixes for your assets.\n\n\n\n\n\n\n[service]\n \u200b is representing a smart city service/application domain for example\nparking, garbage, environmental etc.\n\n\n\n\n\n\n[provider]\n is the logic separator for which service the asset belongs to. For\nexample, in a city, the bus company and waste management company can use\ncommon names for different assets, as they use to work in separate silos. In\norder to avoid that, the [\u200b provider] name allows us to avoid the duplication of\nentityNames\u200b within the OC infrastructure for a particular site.\n\n\n\n\n\n\n[group]\n: This could be optional. \u200b The group part can be used for grouping\nassets under the same service and provider. It is responsibility of OS sites to\nmaintain proper group keys.\n\n\n\n\n\n\n[entityName]\n: \u200b The Entity\u200b /\u200b Device identifier which should be unique at the\ncorresponding Organicity Site, service and provider. The same applies at the scope of an experiment.\n\n\n\n\n\n\nAssets could represent devices, places, buildings, and many other entities (including virtual\nobjects). In Organicity, we define a set of OC Entity Types that can be extended in the future to\ninclude more complex installations. Each entity has a specific resource type in the form\nof \u200b \nurn:oc:entityType:[Type]:[Name]\u200b\n where:\n\n\n\n\n\n\n[Type]\n \u200b could express the context type of the context representation of the asset\nfor example IoT device, smartphone, bicycle\u00adstation, weather\u00adstation etc.\n\n\n\n\n\n\n[Name]\n \u200b is optional and can express some specialization of the used type. E.g. ...:iotdevice:noise\n\n\n\n\n\n\nSee \nXLS\n for a recommendation list of asset types.\n\n\nExamples of assets ids and types:\n\n\ncontextElement\n: {\n  \nid\n: \n\u200burn:oc:entity:london:environmental:hydePark:weatherstation123\u200b\n,\n  \ntype\n: \n\u200burn:oc:entityType:weatherstation\n,\n  \nattributes\n: [ \u2026 ]\n} \n\n\n\n\n\ncontextElement\n: {\n  \nid\n: \n\u200burn:oc:entity:experimenters:86d7edce-5092-44c0-bed8-da4beaa3fbc6:57eab2c2ad0302ad0b5c92c6:asset1243\u200b\n,\n  \ntype\n: \n\u200burn:oc:entityType:smartphone\u200b\n,\n  \nisPattern\n: \nfalse\n,\n  \nattributes\n: [ \u2026 ]\n}\n\n\n\n\nAsset Attributes\n\n\nAsset attributes can represent either various urban observations or other things like properties of the asset creating the observations.\nAttributes can  have a name, a type and a value (\n\u200b \n). Each attribute might represent:\n - in the case of an IoT device or a smartphone:\n    - a \u200b capability \u200b of the device (sensing or actuation)\n    - a \u200b device attribute\u200b like:\n        - description of device\n        - location of the device\n    - Management info:\n        - hardware/software characteristics\n        - communication interfaces,\n        - latest activity\n        - etc.\n -  in the case of more abstract resources like a bicycle docking station or bus station and\n so on, attributes might represent another type of observation like\n    - number of available bicycles or\n    - delay of the next bus\n    - etc.\n - in the case of of a CKAN resource shared online as a file the attributes encode metadata\n like:\n    - the creator of the file\n    - last update\n    - the file type: csv,xml, xls, pdf.\n    - the url to download the file\n    - etc.\n- in the case of of an online web service sharing data attributes might represent\n    - the url to query the web service\n    - the url to retrieve documentation\n    - the type of the web service (REST, SOAP)\n    - etc.\n\n\nAttribute names\n\u200b \u200b might be a human readable strings.\n\n\nAttribute types\n should follow the format: \u200b\n\n\nurn:oc:attributeType:[type]\u200b\n\n\n\n\nThe type should encode the type of observation shared in Organicity. Its quite important to describe only the type of observation that is\nrepresented and not other details  (like the period of observation, the method of observation etc.) in order to facilitate the discovery process and the joining of\ninformation. For example is the attribute expressed the speed of vehicles its recommended to use urn:oc:attributeType:speed and then express in metadata level if the speed is per hour or per minute etc.\n\n\nAttribute MetaData:\n Some of the aforementioned attribute types might require a specific set of\nmetadata like: Attribute types for sensor measurements require a datatype metadata or Attribute\ntypes for sensor measurements require an unit of measurement metadata. Each Metadata\nrepresents various characteristics of the associated attribute of the asset. Some examples might\nbe:\n- device\u200b description \u200b metadata e.g., other languages\n- device\u200b location \u200b metadata other representation of location like geohashing\n- sensing \u200b metadata: timestamp of the latest value, url of endpoint to retrieve historical\ndata of this device/sensor, description of sensor type, units of measurement and so on.\n- actuation \u200b metadata: url of endpoint to trigger actuation, description of actuation, tbd\u2026\n- other type of metadata\n\n\nExamples of Attributes and Metadata\n\n\ncarbonEmission: {\n    type: \nurn:oc:attributeType:carbonEmission\n,\n    value: \n971.336623467994\n,\n    metadata: {\n        unit: {\n            type: \nurn:oc:uom:kilotonne\n,\n            value: \nkilotonne\n\n        },\n    TimeInstant: {\n        type: \nurn:oc:attributeType:ISO8601\n,\n        value: \n2013-12-31T23:59:59\n\n    }\n    }\n}\n\n\n\n\nSee \nXLS\n for a recommendation list of asset types.\n\n\nGeospatial Asset Attributes\n\n\n:exclamation: :wrench: :earth_asia: \nPlease, notice the Assets Spatial model changed on the past days!\n :earth_asia: :wrench: :exclamation:\n\n\nFor any questions you can contact us at https://support.zoho.com/portal/organicity/\n \n\n\nAsset can have spatial-information attached. It is recommended each assets to have a spatial attribute. For assets that are having a location the asset location format\nshould be used, while other assets with more complex geometries (e.g. polygons for boroughs in the city) the complex geometry format can be used.\n\n\nAsset Location Format\n\n\nThis is the basic model for adding a simple single point location to an asset.\n\n\n:exclamation: \nNotice this changed. Latitude and Longitude pairs work now following the \nWGS84 Lat Long\n,\n  \nEPSG::4326\n standard as described below:\n\n\nPoints are always always a string containing a valid latitude-longitude pair, separated by comma.\ufeff\u2060\u2060\n\n\n:wrench: \nIf you used this before you simply need to reverse the \nlongitude and latitude\n pairs to \nlatitude and logitude\n as on the example:\n\n\n{\n  \nlocation\n: {\n    \nvalue\n: \nlatitude, longitude\n,\n    \ntype\n: \ngeo:point\n\n  }\n}\n\n\n\n\nExample:\n\n\n{\n  \nlocation\n: {\n    \nvalue\n: \n-0.2379, 51.5875\n,\n    \ntype\n: \ngeo:point\n\n  }\n}\n\n\n\n\nAsset Complex Geometry Format\n\n\nThis model supports complex assets geometries representations by supporting standard \nGeoJSON\n geometry objects.\n\n\n:exclamation: \nNotice this changed: The attribute name should be \nlocation\n instead of \ngeometry\n and the type should be \ngeo:json\n instead of \noc:geo:json\n.\n\n\nAttribute should be named location and type should be geo:json. Coordinates need to follow the longitude, latitude pairs in order to follow the \nGeoJSON\n standard\n\n\n:wrench: \nIf you used this before you simply need to check you are using the \nlocation\n attribute and the  \ngeo:json\n type as on the example below:\n\n\n{\n    \nlocation\n: {\n        \nvalue\n: {\n            \ntype\n: \nPolygon\n,\n            \ncoordinates\n: [\n                [\n                    [longitude, latitude],\n                    [longitude, latitude]\n                ]\n            ]\n        },\n        \ntype\n: \ngeo:json\n\n    }\n}\n\n\n\n\nExample:\n\n\n{\n    \nlocation\n: {\n        \nvalue\n: {\n            \ntype\n: \nPolygon\n,\n            \ncoordinates\n: [\n                [\n                    [100.0, 0.0],\n                    [101.0, 0.0],\n                    [101.0, 1.0],\n                    [100.0, 1.0],\n                    [100.0, 0.0]\n                ],\n                [\n                    [100.2, 0.2],\n                    [100.8, 0.2],\n                    [100.8, 0.8],\n                    [100.2, 0.8],\n                    [100.2, 0.2]\n                ]\n            ]\n        },\n        \ntype\n: \ngeo:json\n\n    }\n}\n\n\n\n\nMore GeoJSON examples can be found in \nGeoJSON IETF Spec\n.\nAdditionally, the following\n\nGeoJSON Tutorial\n\nmight be useful in understanding the format. \n\n\nOther designated Asset Attributes\n\n\nThere is a number of attributes that can be used for an asset that encode several aspects and facilitate several methods of Urban Data Observatory like the discovery process\n\n\nLast Update\n\n\nThis attribute encoded the time that an update to the assed has been performed\n\nThis attribute is set by Organicity platform\n\n\nTimeInstant: {\n    type: \nurn:oc:attributeType:ISO8601\n,\n    value: \n2016-08-24T11:56:42+01:00\n\n}\n\n\n\n\nComments and general asset description\n\n\n{\n  \ndescription\n: {\n    \nvalue\n: \nThis is a general description of the asset\n,\n    \ntype\n: \nurn:oc:attributeType:description\n\n  }\n}\n\n\n\n\nRanking\n\n\n\n\nThis attribute is set by Organicity platform only. Posting an asset with this attribute will be rejected *\n\n\n\n\n{\n  \nranking\n: {\n    \nvalue\n: 0.7 ,\n    \ntype\n: \nurn:oc:attributeType:reputation\n\n  }\n}\n\n\n\n\nOrigin\n\n\nThis attribute encodes the origin of information described in the asset.\n\n\norigin: {\n    type: \nurn:oc:attributeType:origin\n,\n    value: \nTrain station performance indicators from the TransportAPI\n,\n    metadata: {\n        unit: {\n            type: \nNOT_APPLIED\n,\n            value: \nNOT_APPLIED\n\n        },\n        url1: {\n            type: \nurl\n,\n            value: \nhttp://fcc.transportapi.com/\n\n        }\n    }\n}\n\n\n\n\norigin\n: {\n    \ntype\n: \nurn:oc:attributeType:origin\n\n    \nvalue\n: \nhttp://www.londonair.org.uk/LondonAir/API/\n\n}\n\n\n\n\nOrganicity datasource endpoint\n\n\nThis attribute should describe if an Organicity client could retrieve historic   data through the OC\n platform of by consuming an external API service or  accessing an online file\n\n\ndatasource\n: {\n    \ntype\n: \nurn:oc:attributeType:datasource\n\n    \nvalue\n: \nhttp://london.site.organicity.eu:8081/api/v1/entities/\n\n    \nmetadata\n: {\n        \ndatasourceInternal\n: {\n            \ntype\n: \nurn:oc:datatype:boolean\n\n            \nvalue\n: \ntrue\n\n        }\n    }\n}\n\n\n\n\nRelated Material\n\n\nOrganicity Java Entities\n A project for creating and parsing Organicity Asset with Java.", 
            "title": "Asset Data Model"
        }, 
        {
            "location": "/AssetDataModel/#asset-data-model", 
            "text": "For the organization and discovery of data sources, Organicity platform is relying on the  NGSI9/10  information model. As depicted in the following diagram, the underlying data model of NGSI\n9/10 consists of Asset Element, Asset Attributes and Attribute Metadata   An asset is associated with multiple attributes and each attribute can be associated with various\nmetadata. Each one of the Organicity Sites and probably Organicity Experiments are contributing assets into\nthe facility. Assets can represent various types of urban resources from\nIoT/sensor devices with sensors attached, smartphones, services, data sources stored as data\nfiles (csv, xml, pdf) shared online or references to data\u00adendpoints online (third party APIs and\ndata services). For purposes of clarity of how the data of the various assets can be accessed the\nOrganicity indexed assets can be organized in three major categories:   OC raw assets : for this type of assets clients of OC platform can retrieve either their last\nvalue or historic values. In general it is possible to post various queries for retrieving data\nof the assets. The execution of the queries is managed by the OC facility and the OC\nSite where this asset belongs to.  OC dataset assets : \u200b these assets are representing data sources encoded in datafiles\nthat are shared online (e.g., CKAN instances where the data sources are exposed as\nfiles csv, xml, xls, pdf etc.). Organicity clients can discover these assets by posting discovery\nqueries on the OC platform based on their various metadata. The  platform just\ndelivers description of the assets. Organicity clients have to access the online urls to fetch the\nfiles and then further process the dataset files to consume the data.  OC online data\u00adendpoint assets : \u200b these assets are representing  online\ndata\u00adendpoints/APIs for which the actual data access is not managed by the OC facility.\nOC clients can discover these assets by posting discovery queries on OC platform based\non their various metadata. The Organicity platform just delivers description of the assets. OC\nclients have to access the online endpoints in order to post queries and consume the\ndata.   In order to avoid conflicts with the identification of the assets and facilitating interaction with the\nentity information to the experimenters, there are specific conventions that should be followed on\nAsset, Attribute and Metadata definition.", 
            "title": "Asset Data Model"
        }, 
        {
            "location": "/AssetDataModel/#asset-attributes-and-metadata", 
            "text": "Each Asset Element has to be associated with a set of of attributes. Each Asset Attribute\nmight represent various parameters of the asset. In the case of an IoT device or a\nsmartphone it might represent a sensing or actuation capability of the device or a device\ncharacteristic (static or not) like the human readable name of the device, its description,\nits location and so on. In the case of more abstract assets attributes might represent\ntypes of observations not produced by physical sensors (e.g., a bus reporting the number\nof available seats or the number of the route). Each attribute consists of a type shared\namongst all Organicity sites, the actual value of the attribute and a list of metadata that describe\nthe value.  By utilizing the proper attributes for the description of Assets various visualization and\nbrowsing options are made available through the Urban Data Observatory and the rest of the Organicity tools\nincluding:\n- GeoJson data browsing for attributes of assets referring to specific territories\n- Time\u00adseries data browsing for attributes of assets with historical data\n- combinations of the above cases  Each Metadata entry represents more characteristics of an attribute, like units of\nmeasurement and data types of the attribute value etc.  Common attribute types (e.g., observation types) should be described with same format\nby the Organicity sites and values should be represented at the same set of units (e.g., distance\nin meters and temperature in degrees Centigrade).  During the federation of various assets from the Organicity City Sites (Aarhus, London, Santader) a list\nof common urn names for Asset Types, Attribute Types and Metadata has been created (Get  XLS  file).\nIt is recommended to use the available names when you are creating your assets.", 
            "title": "Asset Attributes and Metadata:"
        }, 
        {
            "location": "/AssetDataModel/#types-and-identification-of-assets", 
            "text": "Each entity should have an unique identifier in the form of  urn:oc:entity:[site]:[service]:[provider]:[group]:[entityName]  \nwhere:    urn:oc:entity:[site]:[service]:[provider]:[group]:[entityName]  \u200b should be\nunique across the whole Organicity facility.    [site]  is representing the federated Organicity site (e.g., London, Santader, Aarhus, Experimenters etc.). During the creation of your experiment you are going\n to aquire the proper prefixes for your assets.    [service]  \u200b is representing a smart city service/application domain for example\nparking, garbage, environmental etc.    [provider]  is the logic separator for which service the asset belongs to. For\nexample, in a city, the bus company and waste management company can use\ncommon names for different assets, as they use to work in separate silos. In\norder to avoid that, the [\u200b provider] name allows us to avoid the duplication of\nentityNames\u200b within the OC infrastructure for a particular site.    [group] : This could be optional. \u200b The group part can be used for grouping\nassets under the same service and provider. It is responsibility of OS sites to\nmaintain proper group keys.    [entityName] : \u200b The Entity\u200b /\u200b Device identifier which should be unique at the\ncorresponding Organicity Site, service and provider. The same applies at the scope of an experiment.    Assets could represent devices, places, buildings, and many other entities (including virtual\nobjects). In Organicity, we define a set of OC Entity Types that can be extended in the future to\ninclude more complex installations. Each entity has a specific resource type in the form\nof \u200b  urn:oc:entityType:[Type]:[Name]\u200b  where:    [Type]  \u200b could express the context type of the context representation of the asset\nfor example IoT device, smartphone, bicycle\u00adstation, weather\u00adstation etc.    [Name]  \u200b is optional and can express some specialization of the used type. E.g. ...:iotdevice:noise    See  XLS  for a recommendation list of asset types.  Examples of assets ids and types:  contextElement : {\n   id :  \u200burn:oc:entity:london:environmental:hydePark:weatherstation123\u200b ,\n   type :  \u200burn:oc:entityType:weatherstation ,\n   attributes : [ \u2026 ]\n}    contextElement : {\n   id :  \u200burn:oc:entity:experimenters:86d7edce-5092-44c0-bed8-da4beaa3fbc6:57eab2c2ad0302ad0b5c92c6:asset1243\u200b ,\n   type :  \u200burn:oc:entityType:smartphone\u200b ,\n   isPattern :  false ,\n   attributes : [ \u2026 ]\n}", 
            "title": "Types and Identification of Assets"
        }, 
        {
            "location": "/AssetDataModel/#asset-attributes", 
            "text": "Asset attributes can represent either various urban observations or other things like properties of the asset creating the observations.\nAttributes can  have a name, a type and a value ( \u200b  ). Each attribute might represent:\n - in the case of an IoT device or a smartphone:\n    - a \u200b capability \u200b of the device (sensing or actuation)\n    - a \u200b device attribute\u200b like:\n        - description of device\n        - location of the device\n    - Management info:\n        - hardware/software characteristics\n        - communication interfaces,\n        - latest activity\n        - etc.\n -  in the case of more abstract resources like a bicycle docking station or bus station and\n so on, attributes might represent another type of observation like\n    - number of available bicycles or\n    - delay of the next bus\n    - etc.\n - in the case of of a CKAN resource shared online as a file the attributes encode metadata\n like:\n    - the creator of the file\n    - last update\n    - the file type: csv,xml, xls, pdf.\n    - the url to download the file\n    - etc.\n- in the case of of an online web service sharing data attributes might represent\n    - the url to query the web service\n    - the url to retrieve documentation\n    - the type of the web service (REST, SOAP)\n    - etc.  Attribute names \u200b \u200b might be a human readable strings.  Attribute types  should follow the format: \u200b  urn:oc:attributeType:[type]\u200b  The type should encode the type of observation shared in Organicity. Its quite important to describe only the type of observation that is\nrepresented and not other details  (like the period of observation, the method of observation etc.) in order to facilitate the discovery process and the joining of\ninformation. For example is the attribute expressed the speed of vehicles its recommended to use urn:oc:attributeType:speed and then express in metadata level if the speed is per hour or per minute etc.  Attribute MetaData:  Some of the aforementioned attribute types might require a specific set of\nmetadata like: Attribute types for sensor measurements require a datatype metadata or Attribute\ntypes for sensor measurements require an unit of measurement metadata. Each Metadata\nrepresents various characteristics of the associated attribute of the asset. Some examples might\nbe:\n- device\u200b description \u200b metadata e.g., other languages\n- device\u200b location \u200b metadata other representation of location like geohashing\n- sensing \u200b metadata: timestamp of the latest value, url of endpoint to retrieve historical\ndata of this device/sensor, description of sensor type, units of measurement and so on.\n- actuation \u200b metadata: url of endpoint to trigger actuation, description of actuation, tbd\u2026\n- other type of metadata  Examples of Attributes and Metadata  carbonEmission: {\n    type:  urn:oc:attributeType:carbonEmission ,\n    value:  971.336623467994 ,\n    metadata: {\n        unit: {\n            type:  urn:oc:uom:kilotonne ,\n            value:  kilotonne \n        },\n    TimeInstant: {\n        type:  urn:oc:attributeType:ISO8601 ,\n        value:  2013-12-31T23:59:59 \n    }\n    }\n}  See  XLS  for a recommendation list of asset types.", 
            "title": "Asset Attributes"
        }, 
        {
            "location": "/AssetDataModel/#geospatial-asset-attributes", 
            "text": ":exclamation: :wrench: :earth_asia:  Please, notice the Assets Spatial model changed on the past days!  :earth_asia: :wrench: :exclamation:  For any questions you can contact us at https://support.zoho.com/portal/organicity/    Asset can have spatial-information attached. It is recommended each assets to have a spatial attribute. For assets that are having a location the asset location format\nshould be used, while other assets with more complex geometries (e.g. polygons for boroughs in the city) the complex geometry format can be used.", 
            "title": "Geospatial Asset Attributes"
        }, 
        {
            "location": "/AssetDataModel/#asset-location-format", 
            "text": "This is the basic model for adding a simple single point location to an asset.  :exclamation:  Notice this changed. Latitude and Longitude pairs work now following the  WGS84 Lat Long ,\n   EPSG::4326  standard as described below:  Points are always always a string containing a valid latitude-longitude pair, separated by comma.\ufeff\u2060\u2060  :wrench:  If you used this before you simply need to reverse the  longitude and latitude  pairs to  latitude and logitude  as on the example:  {\n   location : {\n     value :  latitude, longitude ,\n     type :  geo:point \n  }\n}  Example:  {\n   location : {\n     value :  -0.2379, 51.5875 ,\n     type :  geo:point \n  }\n}", 
            "title": "Asset Location Format"
        }, 
        {
            "location": "/AssetDataModel/#asset-complex-geometry-format", 
            "text": "This model supports complex assets geometries representations by supporting standard  GeoJSON  geometry objects.  :exclamation:  Notice this changed: The attribute name should be  location  instead of  geometry  and the type should be  geo:json  instead of  oc:geo:json .  Attribute should be named location and type should be geo:json. Coordinates need to follow the longitude, latitude pairs in order to follow the  GeoJSON  standard  :wrench:  If you used this before you simply need to check you are using the  location  attribute and the   geo:json  type as on the example below:  {\n     location : {\n         value : {\n             type :  Polygon ,\n             coordinates : [\n                [\n                    [longitude, latitude],\n                    [longitude, latitude]\n                ]\n            ]\n        },\n         type :  geo:json \n    }\n}  Example:  {\n     location : {\n         value : {\n             type :  Polygon ,\n             coordinates : [\n                [\n                    [100.0, 0.0],\n                    [101.0, 0.0],\n                    [101.0, 1.0],\n                    [100.0, 1.0],\n                    [100.0, 0.0]\n                ],\n                [\n                    [100.2, 0.2],\n                    [100.8, 0.2],\n                    [100.8, 0.8],\n                    [100.2, 0.8],\n                    [100.2, 0.2]\n                ]\n            ]\n        },\n         type :  geo:json \n    }\n}  More GeoJSON examples can be found in  GeoJSON IETF Spec .\nAdditionally, the following GeoJSON Tutorial \nmight be useful in understanding the format.", 
            "title": "Asset Complex Geometry Format"
        }, 
        {
            "location": "/AssetDataModel/#other-designated-asset-attributes", 
            "text": "There is a number of attributes that can be used for an asset that encode several aspects and facilitate several methods of Urban Data Observatory like the discovery process", 
            "title": "Other designated Asset Attributes"
        }, 
        {
            "location": "/AssetDataModel/#last-update", 
            "text": "This attribute encoded the time that an update to the assed has been performed This attribute is set by Organicity platform  TimeInstant: {\n    type:  urn:oc:attributeType:ISO8601 ,\n    value:  2016-08-24T11:56:42+01:00 \n}", 
            "title": "Last Update"
        }, 
        {
            "location": "/AssetDataModel/#comments-and-general-asset-description", 
            "text": "{\n   description : {\n     value :  This is a general description of the asset ,\n     type :  urn:oc:attributeType:description \n  }\n}", 
            "title": "Comments and general asset description"
        }, 
        {
            "location": "/AssetDataModel/#ranking", 
            "text": "This attribute is set by Organicity platform only. Posting an asset with this attribute will be rejected *   {\n   ranking : {\n     value : 0.7 ,\n     type :  urn:oc:attributeType:reputation \n  }\n}", 
            "title": "Ranking"
        }, 
        {
            "location": "/AssetDataModel/#origin", 
            "text": "This attribute encodes the origin of information described in the asset.  origin: {\n    type:  urn:oc:attributeType:origin ,\n    value:  Train station performance indicators from the TransportAPI ,\n    metadata: {\n        unit: {\n            type:  NOT_APPLIED ,\n            value:  NOT_APPLIED \n        },\n        url1: {\n            type:  url ,\n            value:  http://fcc.transportapi.com/ \n        }\n    }\n}  origin : {\n     type :  urn:oc:attributeType:origin \n     value :  http://www.londonair.org.uk/LondonAir/API/ \n}", 
            "title": "Origin"
        }, 
        {
            "location": "/AssetDataModel/#organicity-datasource-endpoint", 
            "text": "This attribute should describe if an Organicity client could retrieve historic   data through the OC\n platform of by consuming an external API service or  accessing an online file  datasource : {\n     type :  urn:oc:attributeType:datasource \n     value :  http://london.site.organicity.eu:8081/api/v1/entities/ \n     metadata : {\n         datasourceInternal : {\n             type :  urn:oc:datatype:boolean \n             value :  true \n        }\n    }\n}", 
            "title": "Organicity datasource endpoint"
        }, 
        {
            "location": "/AssetDataModel/#related-material", 
            "text": "Organicity Java Entities  A project for creating and parsing Organicity Asset with Java.", 
            "title": "Related Material"
        }, 
        {
            "location": "/AssetDiscoveryService/", 
            "text": "Assets Discovery Service\n\n\nThe Asset Discovery API facilitates exploration and inspection of available assets.\n\n\nGeneral Information\n\n\nThis API aims to create the foundations for a novel urban data observatory in the form of a service that allow various stakeholders (data scientists, city decision makers, organisations and citizens) to explore, with the intent to act, mixed static and real-time urban and social data streams and their exploitation in experimentation.\n\n\nIt comprises the following functionalities:\n\n\n\n\nSearching and filtering assets using multiple options\n\n\nRetrieving information about: services, sites and providers\n\n\nRetrieving assets data\n\n\nRetrieving experiments and the associated assets\n\n\nSupport for \nGeoJSON\n\n\n\n\nThis API is the core engine of the \nOrganicity Urban Data Observatory\n and it is designed following the \nOASC\n principles, as an extension of the \nNGSI 9/10\n standard, specially following the new \nFIWARE-NGSI v2 Specification\n\n\nDocumentation\n\n\n\n\nAPI Documentation\n\n\nAPI Swagger Blueprint\n\n\n\n\nExamples\n\n\nHere you will find some examples showcasing the API possibilities using popular Javascript libraries. All the examples are available in \nCodepen collection\n\n\nSpatial queries: GeoJson and Leaflet\n\n\nBy using the \nAsset Discovery Spatial Search\n method we can quickly get assets data on \nGeoJSON\n format. This allows to quickly develop map vizualizations by using libraries as \nLeaflet\n\n\nThe API method\n\n\nGET http://discovery.organicity.eu/v0/assets/geo/search?city=london\n\n\n\n\nThe code example\n\n\nLook at the complete example in \nCodepen.io\n\n\nvar myMap = L.map('map');\nvar assetsLayer = new L.geoJson();\nassetsLayer.addTo(myMap);\n\nL.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token={accessToken}', {\n  id: 'mapbox.streets-basic',\n  accessToken: 'pk.eyJ1IjoidG9tYXNkaWV6IiwiYSI6ImRTd01HSGsifQ.loQdtLNQ8GJkJl2LUzzxVg'\n}).addTo(myMap);\n\n$.getJSON(\nhttp://discovery.organicity.eu/v0/assets/geo/search?city=london\n, function(layers) {\n\n  $(layers).each(function(key, data) {\n    $(layers[key].features).each(function(key, data) {\n      console.log(data);\n      assetsLayer.addData(data);\n    });\n  });\n\n   myMap.fitBounds(assetsLayer.getBounds());\n\n});\n\n\n\n\nIncremental search: AngularJS and Material\n\n\nBy using the \nAsset Discovery Incremental Search\n method we can quickly search an asset by providing key words incrementally. This allows to quickly build search and filter functionalities with tools as \nAngular Material\n\n\nThe API method\n\n\nGET http://discovery.organicity.eu/v0/assets/metadata/search?query=some+text\n\n\n\n\nThe code example\n\n\nLook at the complete example in \nCodepen.io\n\n\n(function() {\n  'use strict';\n  angular\n    .module('MyApp')\n    .controller('IncrementalSearch', IncrementalSearch);\n\n  function IncrementalSearch($q, $log, $filter, $http) {\n    var vm = this;\n\n    vm.simulateQuery = true;\n    vm.querySearch = querySearch;\n    vm.selectedItemChange = selectedItemChange;\n    vm.assetsSelectedRemove = assetsSelectedRemove;\n    vm.assetsSelected = [];\n    vm.assetsLoaded = [];\n    vm.deferred = null;\n\n    function querySearch(query) {\n      vm.deferred = $q.defer();\n      var jsonquery = \n;\n      if (query !== null \n query !== \n)\n        jsonquery = \nquery=\n + query.replace(/\\s/g,\n+\n);\n      $http({\n        method: 'GET',\n        url: 'http://discovery.organicity.eu/v0/assets/metadata/search?' + jsonquery\n      }).then(\n        function successCallback(response) {\n          vm.deferred.resolve(vm.assetsLoaded = response.data);\n        },\n        function errorCallback(response) {});\n      return vm.deferred.promise;\n    }\n\n    function selectedItemChange(item) {\n      if (item) {\n        //check if item is already selected\n        if ($filter('filter')(vm.assetsSelected, function(d) {\n            return d.id === item.id;\n          })[0]) {} else {\n          //add id to object\n          vm.assetsSelected.push(item);\n        }\n        // clear search field\n        vm.searchText = '';\n        vm.selectedItem = undefined;\n\n        //somehow blur the autocomplete focus\n        $mdAutocompleteCtrl.blur();\n      }\n    }\n\n    function assetsSelectedRemove(item) {\n      var index = vm.assetsSelected.indexOf(item);\n      vm.assetsSelected.splice(index, 1);\n    }\n  }\n})();\n\n\n\n\n\ndiv ng-controller=\nIncrementalSearch as searchAssets\n layout=\ncolumn\n ng-cloak=\n ng-app=\nMyApp\n\n  \nmd-content class=\nmd-padding\n\n    \np ng-repeat=\nasset in searchAssets.assetsSelected\n{{asset.id}}\n      \nmd-button class=\nmd-raised md-warn\n ng-click=\nsearchAssets.assetsSelectedRemove(asset)\nRemove\n/md-button\n\n    \n/p\n\n    \nform ng-submit=\n$event.preventDefault()\n\n      \nmd-autocomplete md-min-length=\n3\n md-selected-item=\nsearchAssets.selectedItem\n md-search-text=\nsearchAssets.searchText\n md-selected-item-change=\nsearchAssets.selectedItemChange(item)\n md-items=\nitem in searchAssets.querySearch(searchAssets.searchText)\n md-item-text=\nitem.id\n md-min-length=\n0\n\n        md-no-cache=\ntrue\n placeholder=\nSearch assets...\n\n        \nmd-item-template\n\n          \nstrong md-highlight-text=\nsearchAssets.searchText\n md-highlight-flags=\n^i\n{{item.id}}\n          \n/strong\n\n        \n/md-item-template\n\n        \nmd-not-found\n\n          No asset matching \n{{searchAssets.searchText}}\n was found.\n        \n/md-not-found\n\n      \n/md-autocomplete\n\n    \n/form\n\n  \n/md-content\n\n\n/div\n\n\n\n\n\nSites and assets: D3.js treeview\n\n\nBy using the \nAsset Discovery Site Filter\n method we can quickly retrieve assets from an specific site. This allows to quickly build exploration tools for an specific site using tools as \nD3.js\n\n\nThe API method\n\n\nGET https://discovery.organicity.eu/v0/assets/sites/london?per=10000\n\n\n\n\nThe code example\n\n\nLook at the complete example in \nCodepen.io\n\n\nvar margin = {\n    top: 40,\n    right: 10,\n    bottom: 10,\n    left: 10\n  },\n  width = 960 - margin.left - margin.right,\n  height = 500 - margin.top - margin.bottom;\n\nvar color = d3.scale.category20c();\n\nvar treemap = d3.layout.treemap()\n  .size([width, height])\n  .sticky(true)\n  .value(function(d) {\n    return d.size;\n  });\n\nvar div = d3.select(\nbody\n).append(\ndiv\n)\n  .style(\nposition\n, \nrelative\n)\n  .style(\nwidth\n, (width + margin.left + margin.right) + \npx\n)\n  .style(\nheight\n, (height + margin.top + margin.bottom) + \npx\n)\n  .style(\nleft\n, margin.left + \npx\n)\n  .style(\ntop\n, margin.top + \npx\n);\n\nd3.json(\nhttps://discovery.organicity.eu/v0/assets/sites/london?per=100\n, function(error, data) {\n  if (error) throw error;\n  var assetTypes = [];\n  data.forEach(function(asset) {\n    assetTypes.push(asset.type);\n  })\n  assetTypes = new Set(assetTypes);\n  var newAssets = {\n    name: \nlondon\n,\n    children: []\n  };\n  assetTypes.forEach(function(type) {\n    var typeChilds = {\n      name: type,\n      children: []\n    }\n    data.forEach(function(asset) {\n      if (asset.type == type)\n        typeChilds.children.push({\n          name: asset.id,\n          size: asset.context.last_updated_at\n        });\n    })\n    newAssets.children.push(typeChilds);\n  })\n  console.log(newAssets);\n  var node = div.datum(newAssets).selectAll(\n.node\n)\n    .data(treemap.nodes)\n    .enter().append(\ndiv\n)\n    .attr(\nclass\n, \nnode\n)\n    .call(position)\n    .style(\nbackground\n, function(d) {\n      return d.children ? color(d.name) : null;\n    })\n    .html(function(d) {\n      return d.children ? null : '\na target=\n_blank\n href=\nhttps://discovery.organicity.eu/v0/assets/' + d.name + '\n/\n' + d.name + '\n/a\n';\n    })\n    .on(\nmouseover\n, function(d) {\n      d3.selectAll(\n.name\n).html(d.name)\n    })\n    .on(\nmouseout\n, function(d) {\n      d3.selectAll(\n.name\n).html('No asset selected...')\n    });;\n\n  d3.selectAll(\ninput\n).on(\nchange\n, function change() {\n    var value = this.value === \ncount\n ?\n\n      function() {\n        return 1;\n      } :\n      function(d) {\n        return d.size;\n      };\n\n    node\n      .data(treemap.value(value).nodes)\n      .transition()\n      .duration(1500)\n      .call(position);\n  });\n});\n\nfunction position() {\n  this.style(\nleft\n, function(d) {\n      return d.x + \npx\n;\n    })\n    .style(\ntop\n, function(d) {\n      return d.y + \npx\n;\n    })\n    .style(\nwidth\n, function(d) {\n      return Math.max(0, d.dx - 1) + \npx\n;\n    })\n    .style(\nheight\n, function(d) {\n      return Math.max(0, d.dy - 1) + \npx\n;\n    });\n}\n\n\n\n\ndiv class=\nname\n/div\n\n\nform\n\n  \nlabel\ninput type=\nradio\n name=\nmode\n value=\nsize\n checked\n Last updated\n/label\n\n  \nlabel\ninput type=\nradio\n name=\nmode\n value=\ncount\n Count\n/label\n\n\n/form\n\n\n\n\n\nStatus", 
            "title": "Asset Discovery Service"
        }, 
        {
            "location": "/AssetDiscoveryService/#assets-discovery-service", 
            "text": "The Asset Discovery API facilitates exploration and inspection of available assets.", 
            "title": "Assets Discovery Service"
        }, 
        {
            "location": "/AssetDiscoveryService/#general-information", 
            "text": "This API aims to create the foundations for a novel urban data observatory in the form of a service that allow various stakeholders (data scientists, city decision makers, organisations and citizens) to explore, with the intent to act, mixed static and real-time urban and social data streams and their exploitation in experimentation.  It comprises the following functionalities:   Searching and filtering assets using multiple options  Retrieving information about: services, sites and providers  Retrieving assets data  Retrieving experiments and the associated assets  Support for  GeoJSON   This API is the core engine of the  Organicity Urban Data Observatory  and it is designed following the  OASC  principles, as an extension of the  NGSI 9/10  standard, specially following the new  FIWARE-NGSI v2 Specification", 
            "title": "General Information"
        }, 
        {
            "location": "/AssetDiscoveryService/#documentation", 
            "text": "API Documentation  API Swagger Blueprint", 
            "title": "Documentation"
        }, 
        {
            "location": "/AssetDiscoveryService/#examples", 
            "text": "Here you will find some examples showcasing the API possibilities using popular Javascript libraries. All the examples are available in  Codepen collection", 
            "title": "Examples"
        }, 
        {
            "location": "/AssetDiscoveryService/#spatial-queries-geojson-and-leaflet", 
            "text": "By using the  Asset Discovery Spatial Search  method we can quickly get assets data on  GeoJSON  format. This allows to quickly develop map vizualizations by using libraries as  Leaflet  The API method  GET http://discovery.organicity.eu/v0/assets/geo/search?city=london  The code example  Look at the complete example in  Codepen.io  var myMap = L.map('map');\nvar assetsLayer = new L.geoJson();\nassetsLayer.addTo(myMap);\n\nL.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token={accessToken}', {\n  id: 'mapbox.streets-basic',\n  accessToken: 'pk.eyJ1IjoidG9tYXNkaWV6IiwiYSI6ImRTd01HSGsifQ.loQdtLNQ8GJkJl2LUzzxVg'\n}).addTo(myMap);\n\n$.getJSON( http://discovery.organicity.eu/v0/assets/geo/search?city=london , function(layers) {\n\n  $(layers).each(function(key, data) {\n    $(layers[key].features).each(function(key, data) {\n      console.log(data);\n      assetsLayer.addData(data);\n    });\n  });\n\n   myMap.fitBounds(assetsLayer.getBounds());\n\n});", 
            "title": "Spatial queries: GeoJson and Leaflet"
        }, 
        {
            "location": "/AssetDiscoveryService/#incremental-search-angularjs-and-material", 
            "text": "By using the  Asset Discovery Incremental Search  method we can quickly search an asset by providing key words incrementally. This allows to quickly build search and filter functionalities with tools as  Angular Material  The API method  GET http://discovery.organicity.eu/v0/assets/metadata/search?query=some+text  The code example  Look at the complete example in  Codepen.io  (function() {\n  'use strict';\n  angular\n    .module('MyApp')\n    .controller('IncrementalSearch', IncrementalSearch);\n\n  function IncrementalSearch($q, $log, $filter, $http) {\n    var vm = this;\n\n    vm.simulateQuery = true;\n    vm.querySearch = querySearch;\n    vm.selectedItemChange = selectedItemChange;\n    vm.assetsSelectedRemove = assetsSelectedRemove;\n    vm.assetsSelected = [];\n    vm.assetsLoaded = [];\n    vm.deferred = null;\n\n    function querySearch(query) {\n      vm.deferred = $q.defer();\n      var jsonquery =  ;\n      if (query !== null   query !==  )\n        jsonquery =  query=  + query.replace(/\\s/g, + );\n      $http({\n        method: 'GET',\n        url: 'http://discovery.organicity.eu/v0/assets/metadata/search?' + jsonquery\n      }).then(\n        function successCallback(response) {\n          vm.deferred.resolve(vm.assetsLoaded = response.data);\n        },\n        function errorCallback(response) {});\n      return vm.deferred.promise;\n    }\n\n    function selectedItemChange(item) {\n      if (item) {\n        //check if item is already selected\n        if ($filter('filter')(vm.assetsSelected, function(d) {\n            return d.id === item.id;\n          })[0]) {} else {\n          //add id to object\n          vm.assetsSelected.push(item);\n        }\n        // clear search field\n        vm.searchText = '';\n        vm.selectedItem = undefined;\n\n        //somehow blur the autocomplete focus\n        $mdAutocompleteCtrl.blur();\n      }\n    }\n\n    function assetsSelectedRemove(item) {\n      var index = vm.assetsSelected.indexOf(item);\n      vm.assetsSelected.splice(index, 1);\n    }\n  }\n})();  div ng-controller= IncrementalSearch as searchAssets  layout= column  ng-cloak=  ng-app= MyApp \n   md-content class= md-padding \n     p ng-repeat= asset in searchAssets.assetsSelected {{asset.id}}\n       md-button class= md-raised md-warn  ng-click= searchAssets.assetsSelectedRemove(asset) Remove /md-button \n     /p \n     form ng-submit= $event.preventDefault() \n       md-autocomplete md-min-length= 3  md-selected-item= searchAssets.selectedItem  md-search-text= searchAssets.searchText  md-selected-item-change= searchAssets.selectedItemChange(item)  md-items= item in searchAssets.querySearch(searchAssets.searchText)  md-item-text= item.id  md-min-length= 0 \n        md-no-cache= true  placeholder= Search assets... \n         md-item-template \n           strong md-highlight-text= searchAssets.searchText  md-highlight-flags= ^i {{item.id}}\n           /strong \n         /md-item-template \n         md-not-found \n          No asset matching  {{searchAssets.searchText}}  was found.\n         /md-not-found \n       /md-autocomplete \n     /form \n   /md-content  /div", 
            "title": "Incremental search: AngularJS and Material"
        }, 
        {
            "location": "/AssetDiscoveryService/#sites-and-assets-d3js-treeview", 
            "text": "By using the  Asset Discovery Site Filter  method we can quickly retrieve assets from an specific site. This allows to quickly build exploration tools for an specific site using tools as  D3.js  The API method  GET https://discovery.organicity.eu/v0/assets/sites/london?per=10000  The code example  Look at the complete example in  Codepen.io  var margin = {\n    top: 40,\n    right: 10,\n    bottom: 10,\n    left: 10\n  },\n  width = 960 - margin.left - margin.right,\n  height = 500 - margin.top - margin.bottom;\n\nvar color = d3.scale.category20c();\n\nvar treemap = d3.layout.treemap()\n  .size([width, height])\n  .sticky(true)\n  .value(function(d) {\n    return d.size;\n  });\n\nvar div = d3.select( body ).append( div )\n  .style( position ,  relative )\n  .style( width , (width + margin.left + margin.right) +  px )\n  .style( height , (height + margin.top + margin.bottom) +  px )\n  .style( left , margin.left +  px )\n  .style( top , margin.top +  px );\n\nd3.json( https://discovery.organicity.eu/v0/assets/sites/london?per=100 , function(error, data) {\n  if (error) throw error;\n  var assetTypes = [];\n  data.forEach(function(asset) {\n    assetTypes.push(asset.type);\n  })\n  assetTypes = new Set(assetTypes);\n  var newAssets = {\n    name:  london ,\n    children: []\n  };\n  assetTypes.forEach(function(type) {\n    var typeChilds = {\n      name: type,\n      children: []\n    }\n    data.forEach(function(asset) {\n      if (asset.type == type)\n        typeChilds.children.push({\n          name: asset.id,\n          size: asset.context.last_updated_at\n        });\n    })\n    newAssets.children.push(typeChilds);\n  })\n  console.log(newAssets);\n  var node = div.datum(newAssets).selectAll( .node )\n    .data(treemap.nodes)\n    .enter().append( div )\n    .attr( class ,  node )\n    .call(position)\n    .style( background , function(d) {\n      return d.children ? color(d.name) : null;\n    })\n    .html(function(d) {\n      return d.children ? null : ' a target= _blank  href= https://discovery.organicity.eu/v0/assets/' + d.name + ' / ' + d.name + ' /a ';\n    })\n    .on( mouseover , function(d) {\n      d3.selectAll( .name ).html(d.name)\n    })\n    .on( mouseout , function(d) {\n      d3.selectAll( .name ).html('No asset selected...')\n    });;\n\n  d3.selectAll( input ).on( change , function change() {\n    var value = this.value ===  count  ?\n\n      function() {\n        return 1;\n      } :\n      function(d) {\n        return d.size;\n      };\n\n    node\n      .data(treemap.value(value).nodes)\n      .transition()\n      .duration(1500)\n      .call(position);\n  });\n});\n\nfunction position() {\n  this.style( left , function(d) {\n      return d.x +  px ;\n    })\n    .style( top , function(d) {\n      return d.y +  px ;\n    })\n    .style( width , function(d) {\n      return Math.max(0, d.dx - 1) +  px ;\n    })\n    .style( height , function(d) {\n      return Math.max(0, d.dy - 1) +  px ;\n    });\n}  div class= name /div  form \n   label input type= radio  name= mode  value= size  checked  Last updated /label \n   label input type= radio  name= mode  value= count  Count /label  /form", 
            "title": "Sites and assets: D3.js treeview"
        }, 
        {
            "location": "/AssetDiscoveryService/#status", 
            "text": "", 
            "title": "Status"
        }, 
        {
            "location": "/AssetAnnotationService/", 
            "text": "Asset Annotation Service\n\n\nData Annotation Service manages the data annotation process on assets of all Organicity sites.\nThe primary goal of this service is to provide to the programmable clients an available set of\ntag domains and then receive and store tags (tag attachment on an asset by a user). The Organicity\nplatform will expose the data annotation service through the Annotation API.\n\n\nSince the UDO is creating a new type of urban data repository and provides a starting point for exploration of\nurban data across different city environments, it is crucial to stimulate extraction and generation of knowledge from the\nraw data streams. Aiming at enhancing the urban data sources with useful information, OrganiCity has developed this service for\nenabling collaborative data annotation. The utilized data model and annotation services are flexible enough to enable various types\nof labels from online resources on the Web, social media and references to rich multimedia content online (images, video, etc.)\n to free-text labels or numeric values. A set of methods has been created for maintaining dynamic label\n categories, labels and labelling of data.\n\n\n\n\nAcquiring labels for a specific set of data sources can be parameterized under the scope of an experiment. Experimenters can define a set\nof label categories to be used by the applications associated with their experiment. Moreover, experimenters, or other end-users,\ncan retrieve the various labels and the corresponding data under the scope of an experiment.  Finally, they can create customized applications\nto acquire annotations from participants, or applications to visualize them.\n\n\nAlong with the crowdsourcing annotation process, experimenters can utilize machine learning algorithms that enable more autonomous\nlearning, semi-supervised learning or reinforcement learning techniques, exploiting the acquired annotations as training sets.\nIt is possible in this way to use the created models as classifiers for automatic labelling of urban resources, events or anomaly detection.\nFurthermore, as users are constantly contributing with annotations, experimenters are possible to perform verification, cross-validation\non the extracted models and create adaptive models using reinforcement learning methodologies.\n\n\nReferences to the specification of the Asset Annotation Service\n- Annotation Service Endpoint: http://annotations.organicity.eu/\n- Annotation Service Swagger UI: http://annotations.organicity.eu/swagger-ui.html\n\n\nData Model\n\n\nThe underlying data model of the annotation service is depicted in the following figure.\n\n\n\n\n\nService Entities\n represent utility/urban services or in general urban processes. An example of a service might be Garbage Collection, Noise Monitoring etc. The basic usage of\nservice entities is the organization and discovery of tag collections (e.g. what tags are usually used for characterizing the noise level sensors etc.)\n\n\nTagDomains Entities\n represent collections of tags. Usually a tag domain is associated with a service and experiment/application specify which tag domains they will use.\n\n\nTag Entities\n represent the actual labels to be used by end-user using an annotation client (application or experiment)\n\n\nApplication Entities\n (a.k.a. experiments) represent the client applications used by end-users during the annotation process.\n\n\nAsset Entities\n are the assets of Urban data observatory that are annotated (associated by user with an existing tag/label)\n\n\n\n\nThere are some underlying restriction and rules to Organicity users on accessing and using the annotation service. For the following Organicity roles:\nUser Roles:\n- OC Admin (OC-A):\n    - can create, read, update and delete (CRUD) Service, TagDomain, Tag, Application and Annotatation entities\n- OC Experimenter (OC-E):\n    - can only Read Service, TagDomain, Tag entities that are public\n    - CRUD the ones involved in their experiment\n    - OC-E can CRUD all annotations of his applications\n- OC Participant (OC-P):\n    - can only Read Service, TagDomain, Tag entities that are public\n    - OC-P can CRUD only his annotations\n- OC Anonymous (OC-AN)\n    - OC-AN can R only COUNT aggregations of annotations\n\n\nEntity Description\n\n\nThe objects of the entities are comply with the following schema:\n\n\nTag\n\n\n{\n    \nid\n: 0,\n    \nname\n: \nstring\n,\n    \nurn\n: \nstring\n\n}\n\n\n\n\nExample:\n\n\n{\n    id: 106,\n    urn: \nurn:tag:faulty\n,\n    name: \nfaulty reading\n\n}\n\n\n\n\nTagDomain\n\n\n{\n\ndescription\n: \nstring\n,\n\nid\n: 0,\n\nurn\n: \nstring\n,\n\nservices\n: [\n    {\n        \ndescription\n: \nstring\n,\n        \nid\n: 0,\n        \nurn\n: \nstring\n,\n              \nuser\n:\nstring\n\n    }\n ],\n \ntags\n: [\n    {\n    \nid\n: 0,\n       \nname\n: \nstring\n,\n       \nurn\n: \nstring\n\n    }\n ]\n}\n\n\n\n\nExample:\n\n\n  {\n  id: 104,\n  urn: \nurn:tagDomain:faultyReadings\n,\n  description: \nThis is tag domain to classify readings into faulty or normal\n,\n  tags: [\n      {\n          id: 106,\n          urn: \nurn:tag:faulty\n,\n          name: faulty reading\n      },\n      {\n          id: 105,\n          urn: \nurn:tag:normal\n,\n          name: \nnormal reading\n\n      }\n   ],\n  services: [\n      {\n          id: 107,\n          urn: \nurn:service:environmentalMonitoring\n,\n          description: \nenvironmental monitoring\n,\n          user:\n372f3a46-0596-41cf-a038-a2845f06eb24\n\n      }\n   ]\n  }\n\n\n\n\nService\n\n\n{\n    \ndescription\n: \nstring\n,\n    \nid\n: 0,\n    \nurn\n: \nstring\n,\n    \nuser\n:\nstring\n\n}\n\n\n\n\nExample:\n\n\n{\n    id: 107,\n    urn: \nurn:service:environmentalMonitoring\n,\n    description: \nenvironmental monitoring\n,\n    user:\n372f3a46-0596-41cf-a038-a2845f06eb24\n\n}\n\n\n\n\nExperiment\n\n\n{\n    \ndescription\n: \nstring\n,\n    \nid\n: 0,\n    \ntagDomains\n: [\n        {\n          \ndescription\n: \nstring\n,\n          \nid\n: 0,\n          \nservices\n: [\n            {\n              \ndescription\n: \nstring\n,\n              \nid\n: 0,\n              \nurn\n: \nstring\n,\n              \nuser\n: \nstring\n\n            }\n          ],\n          \ntags\n: [\n            {\n              \nid\n: 0,\n              \nname\n: \nstring\n,\n              \nurn\n: \nstring\n,\n              \nuser\n: \nstring\n\n            }\n          ],\n          \nurn\n: \nstring\n,\n          \nuser\n: \nstring\n\n        }\n      ],\n    \nurn\n: \nstring\n,\n    \nuser\n: \nstring\n\n}\n\n\n\n\nAsset\n\n\n{\n    \nid\n: 0,\n    \nurn\n: \nstring\n\n}\n\n\n\n\nExample:\n\n\n{\n    \nid\n: 12 ,\n    \nurn\n: \nurn:oc:entity:london:enableiot:fixed:98-4F-EE-00-0F-76\n\n}\n\n\n\n\nAnnotation\n\n\n{\n    \nannotationId\n: 0,\n    \napplication\n: \nstring\n,\n    \nassetUrn\n: \nstring\n,\n    \ndatetime\n: \nstring\n,\n    \nnumericValue\n: 0,\n    \ntagUrn\n: \nstring\n,\n    \ntextValue\n: \nstring\n,\n    \nuser\n: \nstring\n\n}\n\n\n\n\nExample:\n\n\n{\n    \nannotationId\n: 0,\n    \napplication\n: \n57eab2c2ad0302ad0b5c92c6\n,\n    \nassetUrn\n: \nurn:oc:entity:london:enableiot:fixed:98-4F-EE-00-0F-76\n,\n    \ndatetime\n: \n2016-10-21 09:01:12:123\n,\n    \nnumericValue\n: 0,\n    \ntagUrn\n: \nurn:tag:faulty\n,\n    \ntextValue\n: \nstring\n,\n    \nuser\n: \n86d7edce-5092-44c0-bed8-da4beaa3fbc6\n\n}\n\n\n\n\nAnnotation Service API Overview\n\n\n\n\nAnnotation Service Swagger UI: http://annotations.organicity.eu/swagger-ui.html\n\n\n\n\nAnnotation API is organized in three major parts \n\n\n\n\nTag and Tag Domain browsing\n: for reading Application,Service, TagDomain, Tag entities\n\n\nAnnotation Parameters Management\n: creating, deleting, updating Application,Service, TagDomain, Tag entities\n\n\nAnnotation Management\n: Getting/setting annotations on Organicity Assets\n\n\n\n\nExperiment, Tag Domain and Tag browsing\n\n\n\n\n\n\n\n\nMethod\n\n\nPath\n\n\nOperation\n\n\n\n\n\n\n\n\n\n\nGET\n\n\n/tagDomains\n\n\nGet Tag Domains\n\n\n\n\n\n\nGET\n\n\n/tagDomains/{tagDomainUrn}\n\n\nGet a Tag Domain\n\n\n\n\n\n\nGET\n\n\n/tagDomains/{tagDomainUrn}/tags\n\n\nGet Tags of a Tag Domain\n\n\n\n\n\n\nGET\n\n\n/tags/{tagUrn}\n\n\nGet a Tag\n\n\n\n\n\n\n\n\nAnnotation Parameters Management\n\n\n\n\n\n\n\n\nMethod\n\n\nPath\n\n\nOperation\n\n\n\n\n\n\n\n\n\n\nPOST\n\n\n/admin/experiments\n\n\nCreate an Experiment\n\n\n\n\n\n\nDELETE\n\n\n/admin/experiments/{experimentUrn}\n\n\nDelete an Experiment\n\n\n\n\n\n\nDELETE\n\n\n/admin/experiments/{experimentUrn}/tagDomains\n\n\nDisassociate a TagDomain of an Experiment\n\n\n\n\n\n\nGET\n\n\n/admin/experiments/{experimentUrn}/tagDomains\n\n\nGet TagDomains of an Experiment\n\n\n\n\n\n\nPOST\n\n\n/admin/experiments/{experimentUrn}/tagDomains\n\n\nAssociate a TagDomain with an Experiment\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPOST\n\n\n/admin/services\n\n\nCreate a Service\n\n\n\n\n\n\nDELETE\n\n\n/admin/services/{serviceUrn}\n\n\nDelete a Service\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPOST\n\n\n/admin/tagDomains\n\n\nGet TagDomains\n\n\n\n\n\n\nDELETE\n\n\n/admin/tagDomains/{tagDomainUrn}\n\n\nDelete a TagDomains\n\n\n\n\n\n\nPOST\n\n\n/admin/tagDomains/{tagDomainUrn}\n\n\nUpdate a TagDomains\n\n\n\n\n\n\nDELETE\n\n\n/admin/tagDomains/{tagDomainUrn}/services\n\n\nDisassociate a TagDomain with a Service\n\n\n\n\n\n\nGET\n\n\n/admin/tagDomains/{tagDomainUrn}/services\n\n\nGet associated services with a Tag Domain\n\n\n\n\n\n\nPOST\n\n\n/admin/tagDomains/{tagDomainUrn}/services\n\n\nAssociate a TagDomain with a Service\n\n\n\n\n\n\nDELETE\n\n\n/admin/tagDomains/{tagDomainUrn}/tags\n\n\nDelete a Tag from a Tag Domain\n\n\n\n\n\n\nPOST\n\n\n/admin/tagDomains/{tagDomainUrn}/tags\n\n\nAdd a Tag in a Tag Domain\n\n\n\n\n\n\nPOST\n\n\n/admin/tagDomains/{tagDomainUrn}/tag\n\n\nCreate Tag to TagDomain\n\n\n\n\n\n\n\n\nAnnotation Management\n\n\n\n\n\n\n\n\nMethod\n\n\nPath\n\n\nOperation\n\n\n\n\n\n\n\n\n\n\nGET\n\n\n/admin/annotations/delete/{assetUrn}\n\n\nDelete Annotation of an Asset\n\n\n\n\n\n\nGET\n\n\n/annotations/\n\n\nGet Annotation for Application, User and Tag\n\n\n\n\n\n\nDELETE\n\n\n/annotations/{assetUrn}\n\n\ndeleteAnnotation\n\n\n\n\n\n\nPOST\n\n\n/annotations/{assetUrn}\n\n\nCreate Annotation\n\n\n\n\n\n\nGET\n\n\n/annotations/{assetUrn}/all\n\n\nGet Annotations of an Asset\n\n\n\n\n\n\nGET\n\n\n/annotations/{tagDomain}\n\n\nGet Annotation of a TagDomain\n\n\n\n\n\n\n\n\nExample\n\n\nLet userId=86d7edce-5092-44c0-bed8-da4beaa3fbc6 and experimentId=57eab2c2ad0302ad0b5c92c6\n\n\nCreation of a Tag Domain\n\n\ncurl -X POST --header 'Content-Type: application/json' --header 'Accept: application/json' -d '{\n  \ndescription\n: \na tag domain for faulty noise level\n,\n  \nservices\n:  null,\n  \ntags\n: [\n    {\n      \nid\n: 123,\n      \nname\n: \nfaulty\n,\n      \nurn\n: \nurn:tag:faulty\n\n    },\n    {\n          \nid\n: 132,\n          \nname\n: \nnormal\n,\n          \nurn\n: \nurn:tag:normal\n\n    }\n  ],\n  \nurn\n: \nurn:tagDomain:86d7edce-5092-44c0-bed8-da4beaa3fbc6:malfunctioning\n\n}' 'https://annotations.organicity.eu/admin/tagDomains'\n\n\n\n\nGet of Tag Domain\n\n\ncurl -X GET --header 'Accept: application/json' 'https://annotations.organicity.eu/tagDomains/urn%3AtagDomain%3A86d7edce-5092-44c0-bed8-da4beaa3fbc6%3Amalfunctioning'\n\n\n\n\nGet Tags of TagDomain\n\n\ncurl -X GET --header 'Accept: application/json' 'https://annotations.organicity.eu/tagDomains/urn%3AtagDomain%3A86d7edce-5092-44c0-bed8-da4beaa3fbc6%3Amalfunctioning/tags'\n\n\n\n\nCreate Experiment\n\n\ncurl -X POST --header 'Content-Type: application/json' --header 'Accept: application/json' -d '\n{\n  \ndescription\n: \nExperiment 86d7edce-5092-44c0-bed8-da4beaa3fbc6\n,\n  \nurn\n: \nurn:application:86d7edce-5092-44c0-bed8-da4beaa3fbc6\n\n}' 'https://annotations.organicity.eu/admin/applications'\n\n\n\n\nAssociate Experiment with an Tag Domain\n\n\ncurl -X POST --header 'Content-Type: application/json' --header 'Accept: application/json' 'https://annotations.organicity.eu/admin/applications/urn%3Aapplication%3A86d7edce-5092-44c0-bed8-da4beaa3fbc6/tagDomains?tagDomainUrn=urn%3AtagDomain%3A86d7edce-5092-44c0-bed8-da4beaa3fbc6%3Amalfunctioning'\n\n\n\n\nPost an Annotation\n\n\nLet an experimenter who has developed an application to his smartphone in order to collect data concerning \nthe wind speed. Assuming that the application contains a TagDomain that describes the wind speed levels, \nthe creation of an annotation can be implemented as follows:\n\n\nuserId = 86d7edce-5092-44c0-bed8-da4beaa3fbc6\nexperimentId = 57eab2c2ad0302ad0b5c92c6\nassetUrn = urn:oc:entity:experimenters:62afc265-af9a-47e7-afb5-caab21ed09b4:57f210e59324fdd11103d93c:14\ntagUrn = urn:oc:tagDomain:WindSpeedLevel:calm\n\nfunction createAnnotation(){\n        var annotationJson = {\n                \nannotationId\n: null,\n                \napplication\n: experimentId,\n                \nassetUrn\n: assetUrn,\n                \ndatetime\n: null,\n                \nnumericValue\n: 0,\n                \ntagUrn\n: tagUrn,\n                \ntextValue\n: \ntextValue\n,\n                \nuser\n: userId,\n        };\n\n          $.ajax({\n             url: \nhttps://annotations.organicity.eu/annotations/\n+ assetUrn.name,\n             data: JSON.stringify(annotationJson),\n             type: \nPOST\n,\n             beforeSend: function(xhr){\n                 xhr.setRequestHeader('Accept', 'application/json');\n                 xhr.setRequestHeader('Accept', 'application/json');\n                 xhr.setRequestHeader('Content-Type', 'application/json');\n\n\n             },\n             success: function() {\n                $.ajax({\n                    url: \nhttps://annotations.organicity.eu/annotations/\n + assetUrn +\n/all\n,\n\n                    type: \nGET\n,\n                    beforeSend: function(xhr){\n                        xhr.setRequestHeader('Accept', 'application/json');\n                        xhr.setRequestHeader('Accept', 'application/json');\n                        xhr.setRequestHeader('Content-Type', 'application/json');\n\n                    },\n                    success: function(response) {\n                        alert(response);\n                    }\n                 });\n             },\n             error: function(){\n                alert('an error occurred.');\n              }\n          });\n    } \n\n\n\n\nGet All Annotations\n\n\ncurl -X GET --header 'Accept: application/json' 'https://annotations.organicity.eu/annotations/urn%3Aoc%3Aentity%3Alondon%3Aweatherstation1/all'", 
            "title": "Asset Annotation Service"
        }, 
        {
            "location": "/AssetAnnotationService/#asset-annotation-service", 
            "text": "Data Annotation Service manages the data annotation process on assets of all Organicity sites.\nThe primary goal of this service is to provide to the programmable clients an available set of\ntag domains and then receive and store tags (tag attachment on an asset by a user). The Organicity\nplatform will expose the data annotation service through the Annotation API.  Since the UDO is creating a new type of urban data repository and provides a starting point for exploration of\nurban data across different city environments, it is crucial to stimulate extraction and generation of knowledge from the\nraw data streams. Aiming at enhancing the urban data sources with useful information, OrganiCity has developed this service for\nenabling collaborative data annotation. The utilized data model and annotation services are flexible enough to enable various types\nof labels from online resources on the Web, social media and references to rich multimedia content online (images, video, etc.)\n to free-text labels or numeric values. A set of methods has been created for maintaining dynamic label\n categories, labels and labelling of data.   Acquiring labels for a specific set of data sources can be parameterized under the scope of an experiment. Experimenters can define a set\nof label categories to be used by the applications associated with their experiment. Moreover, experimenters, or other end-users,\ncan retrieve the various labels and the corresponding data under the scope of an experiment.  Finally, they can create customized applications\nto acquire annotations from participants, or applications to visualize them.  Along with the crowdsourcing annotation process, experimenters can utilize machine learning algorithms that enable more autonomous\nlearning, semi-supervised learning or reinforcement learning techniques, exploiting the acquired annotations as training sets.\nIt is possible in this way to use the created models as classifiers for automatic labelling of urban resources, events or anomaly detection.\nFurthermore, as users are constantly contributing with annotations, experimenters are possible to perform verification, cross-validation\non the extracted models and create adaptive models using reinforcement learning methodologies.  References to the specification of the Asset Annotation Service\n- Annotation Service Endpoint: http://annotations.organicity.eu/\n- Annotation Service Swagger UI: http://annotations.organicity.eu/swagger-ui.html", 
            "title": "Asset Annotation Service"
        }, 
        {
            "location": "/AssetAnnotationService/#data-model", 
            "text": "The underlying data model of the annotation service is depicted in the following figure.   Service Entities  represent utility/urban services or in general urban processes. An example of a service might be Garbage Collection, Noise Monitoring etc. The basic usage of\nservice entities is the organization and discovery of tag collections (e.g. what tags are usually used for characterizing the noise level sensors etc.)  TagDomains Entities  represent collections of tags. Usually a tag domain is associated with a service and experiment/application specify which tag domains they will use.  Tag Entities  represent the actual labels to be used by end-user using an annotation client (application or experiment)  Application Entities  (a.k.a. experiments) represent the client applications used by end-users during the annotation process.  Asset Entities  are the assets of Urban data observatory that are annotated (associated by user with an existing tag/label)   There are some underlying restriction and rules to Organicity users on accessing and using the annotation service. For the following Organicity roles:\nUser Roles:\n- OC Admin (OC-A):\n    - can create, read, update and delete (CRUD) Service, TagDomain, Tag, Application and Annotatation entities\n- OC Experimenter (OC-E):\n    - can only Read Service, TagDomain, Tag entities that are public\n    - CRUD the ones involved in their experiment\n    - OC-E can CRUD all annotations of his applications\n- OC Participant (OC-P):\n    - can only Read Service, TagDomain, Tag entities that are public\n    - OC-P can CRUD only his annotations\n- OC Anonymous (OC-AN)\n    - OC-AN can R only COUNT aggregations of annotations", 
            "title": "Data Model"
        }, 
        {
            "location": "/AssetAnnotationService/#entity-description", 
            "text": "The objects of the entities are comply with the following schema:", 
            "title": "Entity Description"
        }, 
        {
            "location": "/AssetAnnotationService/#tag", 
            "text": "{\n     id : 0,\n     name :  string ,\n     urn :  string \n}  Example:  {\n    id: 106,\n    urn:  urn:tag:faulty ,\n    name:  faulty reading \n}", 
            "title": "Tag"
        }, 
        {
            "location": "/AssetAnnotationService/#tagdomain", 
            "text": "{ description :  string , id : 0, urn :  string , services : [\n    {\n         description :  string ,\n         id : 0,\n         urn :  string ,\n               user : string \n    }\n ],\n  tags : [\n    {\n     id : 0,\n        name :  string ,\n        urn :  string \n    }\n ]\n}  Example:    {\n  id: 104,\n  urn:  urn:tagDomain:faultyReadings ,\n  description:  This is tag domain to classify readings into faulty or normal ,\n  tags: [\n      {\n          id: 106,\n          urn:  urn:tag:faulty ,\n          name: faulty reading\n      },\n      {\n          id: 105,\n          urn:  urn:tag:normal ,\n          name:  normal reading \n      }\n   ],\n  services: [\n      {\n          id: 107,\n          urn:  urn:service:environmentalMonitoring ,\n          description:  environmental monitoring ,\n          user: 372f3a46-0596-41cf-a038-a2845f06eb24 \n      }\n   ]\n  }", 
            "title": "TagDomain"
        }, 
        {
            "location": "/AssetAnnotationService/#service", 
            "text": "{\n     description :  string ,\n     id : 0,\n     urn :  string ,\n     user : string \n}  Example:  {\n    id: 107,\n    urn:  urn:service:environmentalMonitoring ,\n    description:  environmental monitoring ,\n    user: 372f3a46-0596-41cf-a038-a2845f06eb24 \n}", 
            "title": "Service"
        }, 
        {
            "location": "/AssetAnnotationService/#experiment", 
            "text": "{\n     description :  string ,\n     id : 0,\n     tagDomains : [\n        {\n           description :  string ,\n           id : 0,\n           services : [\n            {\n               description :  string ,\n               id : 0,\n               urn :  string ,\n               user :  string \n            }\n          ],\n           tags : [\n            {\n               id : 0,\n               name :  string ,\n               urn :  string ,\n               user :  string \n            }\n          ],\n           urn :  string ,\n           user :  string \n        }\n      ],\n     urn :  string ,\n     user :  string \n}", 
            "title": "Experiment"
        }, 
        {
            "location": "/AssetAnnotationService/#asset", 
            "text": "{\n     id : 0,\n     urn :  string \n}  Example:  {\n     id : 12 ,\n     urn :  urn:oc:entity:london:enableiot:fixed:98-4F-EE-00-0F-76 \n}", 
            "title": "Asset"
        }, 
        {
            "location": "/AssetAnnotationService/#annotation", 
            "text": "{\n     annotationId : 0,\n     application :  string ,\n     assetUrn :  string ,\n     datetime :  string ,\n     numericValue : 0,\n     tagUrn :  string ,\n     textValue :  string ,\n     user :  string \n}  Example:  {\n     annotationId : 0,\n     application :  57eab2c2ad0302ad0b5c92c6 ,\n     assetUrn :  urn:oc:entity:london:enableiot:fixed:98-4F-EE-00-0F-76 ,\n     datetime :  2016-10-21 09:01:12:123 ,\n     numericValue : 0,\n     tagUrn :  urn:tag:faulty ,\n     textValue :  string ,\n     user :  86d7edce-5092-44c0-bed8-da4beaa3fbc6 \n}", 
            "title": "Annotation"
        }, 
        {
            "location": "/AssetAnnotationService/#annotation-service-api-overview", 
            "text": "Annotation Service Swagger UI: http://annotations.organicity.eu/swagger-ui.html   Annotation API is organized in three major parts    Tag and Tag Domain browsing : for reading Application,Service, TagDomain, Tag entities  Annotation Parameters Management : creating, deleting, updating Application,Service, TagDomain, Tag entities  Annotation Management : Getting/setting annotations on Organicity Assets", 
            "title": "Annotation Service API Overview"
        }, 
        {
            "location": "/AssetAnnotationService/#experiment-tag-domain-and-tag-browsing", 
            "text": "Method  Path  Operation      GET  /tagDomains  Get Tag Domains    GET  /tagDomains/{tagDomainUrn}  Get a Tag Domain    GET  /tagDomains/{tagDomainUrn}/tags  Get Tags of a Tag Domain    GET  /tags/{tagUrn}  Get a Tag", 
            "title": "Experiment, Tag Domain and Tag browsing"
        }, 
        {
            "location": "/AssetAnnotationService/#annotation-parameters-management", 
            "text": "Method  Path  Operation      POST  /admin/experiments  Create an Experiment    DELETE  /admin/experiments/{experimentUrn}  Delete an Experiment    DELETE  /admin/experiments/{experimentUrn}/tagDomains  Disassociate a TagDomain of an Experiment    GET  /admin/experiments/{experimentUrn}/tagDomains  Get TagDomains of an Experiment    POST  /admin/experiments/{experimentUrn}/tagDomains  Associate a TagDomain with an Experiment         POST  /admin/services  Create a Service    DELETE  /admin/services/{serviceUrn}  Delete a Service         POST  /admin/tagDomains  Get TagDomains    DELETE  /admin/tagDomains/{tagDomainUrn}  Delete a TagDomains    POST  /admin/tagDomains/{tagDomainUrn}  Update a TagDomains    DELETE  /admin/tagDomains/{tagDomainUrn}/services  Disassociate a TagDomain with a Service    GET  /admin/tagDomains/{tagDomainUrn}/services  Get associated services with a Tag Domain    POST  /admin/tagDomains/{tagDomainUrn}/services  Associate a TagDomain with a Service    DELETE  /admin/tagDomains/{tagDomainUrn}/tags  Delete a Tag from a Tag Domain    POST  /admin/tagDomains/{tagDomainUrn}/tags  Add a Tag in a Tag Domain    POST  /admin/tagDomains/{tagDomainUrn}/tag  Create Tag to TagDomain", 
            "title": "Annotation Parameters Management"
        }, 
        {
            "location": "/AssetAnnotationService/#annotation-management", 
            "text": "Method  Path  Operation      GET  /admin/annotations/delete/{assetUrn}  Delete Annotation of an Asset    GET  /annotations/  Get Annotation for Application, User and Tag    DELETE  /annotations/{assetUrn}  deleteAnnotation    POST  /annotations/{assetUrn}  Create Annotation    GET  /annotations/{assetUrn}/all  Get Annotations of an Asset    GET  /annotations/{tagDomain}  Get Annotation of a TagDomain", 
            "title": "Annotation Management"
        }, 
        {
            "location": "/AssetAnnotationService/#example", 
            "text": "Let userId=86d7edce-5092-44c0-bed8-da4beaa3fbc6 and experimentId=57eab2c2ad0302ad0b5c92c6  Creation of a Tag Domain  curl -X POST --header 'Content-Type: application/json' --header 'Accept: application/json' -d '{\n   description :  a tag domain for faulty noise level ,\n   services :  null,\n   tags : [\n    {\n       id : 123,\n       name :  faulty ,\n       urn :  urn:tag:faulty \n    },\n    {\n           id : 132,\n           name :  normal ,\n           urn :  urn:tag:normal \n    }\n  ],\n   urn :  urn:tagDomain:86d7edce-5092-44c0-bed8-da4beaa3fbc6:malfunctioning \n}' 'https://annotations.organicity.eu/admin/tagDomains'  Get of Tag Domain  curl -X GET --header 'Accept: application/json' 'https://annotations.organicity.eu/tagDomains/urn%3AtagDomain%3A86d7edce-5092-44c0-bed8-da4beaa3fbc6%3Amalfunctioning'  Get Tags of TagDomain  curl -X GET --header 'Accept: application/json' 'https://annotations.organicity.eu/tagDomains/urn%3AtagDomain%3A86d7edce-5092-44c0-bed8-da4beaa3fbc6%3Amalfunctioning/tags'  Create Experiment  curl -X POST --header 'Content-Type: application/json' --header 'Accept: application/json' -d '\n{\n   description :  Experiment 86d7edce-5092-44c0-bed8-da4beaa3fbc6 ,\n   urn :  urn:application:86d7edce-5092-44c0-bed8-da4beaa3fbc6 \n}' 'https://annotations.organicity.eu/admin/applications'  Associate Experiment with an Tag Domain  curl -X POST --header 'Content-Type: application/json' --header 'Accept: application/json' 'https://annotations.organicity.eu/admin/applications/urn%3Aapplication%3A86d7edce-5092-44c0-bed8-da4beaa3fbc6/tagDomains?tagDomainUrn=urn%3AtagDomain%3A86d7edce-5092-44c0-bed8-da4beaa3fbc6%3Amalfunctioning'  Post an Annotation  Let an experimenter who has developed an application to his smartphone in order to collect data concerning \nthe wind speed. Assuming that the application contains a TagDomain that describes the wind speed levels, \nthe creation of an annotation can be implemented as follows:  userId = 86d7edce-5092-44c0-bed8-da4beaa3fbc6\nexperimentId = 57eab2c2ad0302ad0b5c92c6\nassetUrn = urn:oc:entity:experimenters:62afc265-af9a-47e7-afb5-caab21ed09b4:57f210e59324fdd11103d93c:14\ntagUrn = urn:oc:tagDomain:WindSpeedLevel:calm\n\nfunction createAnnotation(){\n        var annotationJson = {\n                 annotationId : null,\n                 application : experimentId,\n                 assetUrn : assetUrn,\n                 datetime : null,\n                 numericValue : 0,\n                 tagUrn : tagUrn,\n                 textValue :  textValue ,\n                 user : userId,\n        };\n\n          $.ajax({\n             url:  https://annotations.organicity.eu/annotations/ + assetUrn.name,\n             data: JSON.stringify(annotationJson),\n             type:  POST ,\n             beforeSend: function(xhr){\n                 xhr.setRequestHeader('Accept', 'application/json');\n                 xhr.setRequestHeader('Accept', 'application/json');\n                 xhr.setRequestHeader('Content-Type', 'application/json');\n\n\n             },\n             success: function() {\n                $.ajax({\n                    url:  https://annotations.organicity.eu/annotations/  + assetUrn + /all ,\n\n                    type:  GET ,\n                    beforeSend: function(xhr){\n                        xhr.setRequestHeader('Accept', 'application/json');\n                        xhr.setRequestHeader('Accept', 'application/json');\n                        xhr.setRequestHeader('Content-Type', 'application/json');\n\n                    },\n                    success: function(response) {\n                        alert(response);\n                    }\n                 });\n             },\n             error: function(){\n                alert('an error occurred.');\n              }\n          });\n    }   Get All Annotations  curl -X GET --header 'Accept: application/json' 'https://annotations.organicity.eu/annotations/urn%3Aoc%3Aentity%3Alondon%3Aweatherstation1/all'", 
            "title": "Example"
        }, 
        {
            "location": "/ExperimenterPortal/", 
            "text": "Experimenter Portal\n\n\nThe Experimenter Portal (EP) provides a common interface for the experimenters to carry out several management task such as creation and modification of experiments, control of developments (i.e. applications, tools) carried out under such experiments, and monitoring the results obtained from them. In this sense, the EP enables to manage the whole lifecycle of the experiments and facilitates the interaction with other related OrganiCity functionalities. In the following we will thoroughly describe the EP by showcasing the interactions of the experimenter with the tool.\n\n\nEntering the portal\n\n\nEP can be accessed through the URL http://experimenters.organicity.eu . After a successful login, the experimenter is redirected to the main page of the EP, shown in Figure 1. As can be observed, the portal provides rapid access to the different development alternatives facilitated by OrganiCity in the sidebar: links to co-creation tools, to develop new services and applications; access to documentation of tools and APIs, necessary for the experiment development; and finally, provide links to support tools, such as OrganiCity FAQ system, GitHub repository and dedicated google groups channel, devoted to provide timely support to the experimenters.\n\n\n\n\nFigure 1:\n\n\n\n\n\n\nIn the main view, it is also shown the list of current experiments indicating whether or not they are ongoing, so that the experimenter can see, at a glance, its experimentation state. As can be seen, the portal provides the option to remove experiments as well as to create new ones. When you remove an experiment, all the information related to the experiment will be lost. This will also disable the applications developed under the experiment.\n\n\nCreating new experiment\n\n\nIn order to create a new experiment, the portal will request general information about the experiment such as its name and description (Figure 2). It is recommended to use a catchy name and a detailed description in order to encourage people to take part on it. The experimenter also defines the time during which the experiment will be available. After that period of time the experiment cannot be used by participants, but still exist in the EP. Besides, for each experiment, it is defined the assets, or information sources, it can handle. Such assets could be public, this means that assets created by this experiment will be visible for everyone, otherwise only this experiment, and their applications, will be allowed to use them.\n\n\nFigure 2:\n\n\n\n\nAfter providing basic information about the new experiment, the portal will request define the experiment area (Figure 3), which consisting of a set of regions where the experiment will take place. This area will be used as a first filter to select, by using some UDO functionalities, the assets used along the experiment. If you do not define an area, the experiment will be considered worldwide.\n\n\nFigure 3\n\n\n\n\nGetting detailed info about experiment\n\n\nOnce the experimenter selects an experiment from the list, the details of experiment is presented. Firstly, the information provided during the experiment creation process is displayed, as shown in Figure 4, allowing the portal user modify it. By this way, an experimenter might modify the experiment settings during its lifecycle: extending or limiting the area of the experiment, modifying its timespan or editing the experiment tags to better indicate its aim.\n\n\nFigure 4\n\n\n\n\nCreating new assets\n\n\nIn the most of cases, the experiment will include the development of some kind of application (e.g. mobile application) that will enable to participant interact with the experiment. These applications will produce information whose structure should be previously defined by the experimenter. For this end, the portal enables to create new assets by means of an editor (see Figure 5) with a twofold purpose: first to simplify the definition of new information sources by a visual tool, and secondly to provide a template and useful insight to create assets via software. As can be observed in Figure 5, during the asset edition, the experimenter will see the resulting output (JSON format) and how some of the fields are autocompleted with experiment specific information (e.g. experiment and experimenter identifiers).\n\n\nFigure 5\n\n\n\n\nManaging experiment applications\n\n\nExperimenter Portal also provides the functionality to manage applications. The detailed information of the applications, such as links to download them, can be edited during the whole experiment lifecycle and will be advertised to the OrganiCity participants so as to facilitate their use. As the application is constrained to the characteristics of the experiment, the application scope is also limited by spatio-temporal dimension of the experiment, as well as by the assets that the application can use.", 
            "title": "Experimenter Portal"
        }, 
        {
            "location": "/ExperimenterPortal/#experimenter-portal", 
            "text": "The Experimenter Portal (EP) provides a common interface for the experimenters to carry out several management task such as creation and modification of experiments, control of developments (i.e. applications, tools) carried out under such experiments, and monitoring the results obtained from them. In this sense, the EP enables to manage the whole lifecycle of the experiments and facilitates the interaction with other related OrganiCity functionalities. In the following we will thoroughly describe the EP by showcasing the interactions of the experimenter with the tool.", 
            "title": "Experimenter Portal"
        }, 
        {
            "location": "/ExperimenterPortal/#entering-the-portal", 
            "text": "EP can be accessed through the URL http://experimenters.organicity.eu . After a successful login, the experimenter is redirected to the main page of the EP, shown in Figure 1. As can be observed, the portal provides rapid access to the different development alternatives facilitated by OrganiCity in the sidebar: links to co-creation tools, to develop new services and applications; access to documentation of tools and APIs, necessary for the experiment development; and finally, provide links to support tools, such as OrganiCity FAQ system, GitHub repository and dedicated google groups channel, devoted to provide timely support to the experimenters.   Figure 1:    In the main view, it is also shown the list of current experiments indicating whether or not they are ongoing, so that the experimenter can see, at a glance, its experimentation state. As can be seen, the portal provides the option to remove experiments as well as to create new ones. When you remove an experiment, all the information related to the experiment will be lost. This will also disable the applications developed under the experiment.", 
            "title": "Entering the portal"
        }, 
        {
            "location": "/ExperimenterPortal/#creating-new-experiment", 
            "text": "In order to create a new experiment, the portal will request general information about the experiment such as its name and description (Figure 2). It is recommended to use a catchy name and a detailed description in order to encourage people to take part on it. The experimenter also defines the time during which the experiment will be available. After that period of time the experiment cannot be used by participants, but still exist in the EP. Besides, for each experiment, it is defined the assets, or information sources, it can handle. Such assets could be public, this means that assets created by this experiment will be visible for everyone, otherwise only this experiment, and their applications, will be allowed to use them.  Figure 2:   After providing basic information about the new experiment, the portal will request define the experiment area (Figure 3), which consisting of a set of regions where the experiment will take place. This area will be used as a first filter to select, by using some UDO functionalities, the assets used along the experiment. If you do not define an area, the experiment will be considered worldwide.  Figure 3", 
            "title": "Creating new experiment"
        }, 
        {
            "location": "/ExperimenterPortal/#getting-detailed-info-about-experiment", 
            "text": "Once the experimenter selects an experiment from the list, the details of experiment is presented. Firstly, the information provided during the experiment creation process is displayed, as shown in Figure 4, allowing the portal user modify it. By this way, an experimenter might modify the experiment settings during its lifecycle: extending or limiting the area of the experiment, modifying its timespan or editing the experiment tags to better indicate its aim.  Figure 4", 
            "title": "Getting detailed info about experiment"
        }, 
        {
            "location": "/ExperimenterPortal/#creating-new-assets", 
            "text": "In the most of cases, the experiment will include the development of some kind of application (e.g. mobile application) that will enable to participant interact with the experiment. These applications will produce information whose structure should be previously defined by the experimenter. For this end, the portal enables to create new assets by means of an editor (see Figure 5) with a twofold purpose: first to simplify the definition of new information sources by a visual tool, and secondly to provide a template and useful insight to create assets via software. As can be observed in Figure 5, during the asset edition, the experimenter will see the resulting output (JSON format) and how some of the fields are autocompleted with experiment specific information (e.g. experiment and experimenter identifiers).  Figure 5", 
            "title": "Creating new assets"
        }, 
        {
            "location": "/ExperimenterPortal/#managing-experiment-applications", 
            "text": "Experimenter Portal also provides the functionality to manage applications. The detailed information of the applications, such as links to download them, can be edited during the whole experiment lifecycle and will be advertised to the OrganiCity participants so as to facilitate their use. As the application is constrained to the characteristics of the experiment, the application scope is also limited by spatio-temporal dimension of the experiment, as well as by the assets that the application can use.", 
            "title": "Managing experiment applications"
        }, 
        {
            "location": "/FederatedDataAssets/", 
            "text": "Federated Data Assets\n\n\n....\n\n\nAarhus\n\n\nLondon\n\n\nLondon Borough Profiles\n\n\nGreater London is divided into 33 Boroughs. For each Borough we gather aggregate statistics related to mobility, air quality and communities. Some statistics are based on census that is collected every 10 years, while other statistics are updated more frequently. Example statistics include population density, average income, average house price, fraction of greenspace and average number of cars per household. The data is gathered from the \nLondon Datastore\n, \nPublic Health England\n and other sources.\n\n\nExample:\n\n\n{\n    \nid\n: \nurn:oc:entity:london:districtProfile:uk.gov.london:E09000013\n,\n    \ntype\n: \nurn:oc:entityType:districtProfile\n,\n    \ngeometry\n: {\n        \ntype\n: \noc:geo:json\n,\n        \nvalue\n: {\n            \ncoordinates\n: [\n                [\n                    [\n                        [-0.2333, 51.532],\n                        [-0.2456, 51.4908],\n                        [-0.203, 51.4933],\n                        [-0.2333, 51.532]\n                    ]\n                ]\n            ],\n            \ntype\n: \nMultiPolygon\n\n        },\n        \nmetadata\n: {}\n    },\n    \nlocation\n: {\n        \ntype\n: \ngeo:point\n,\n        \nvalue\n: \n-0.22078893731921054,51.49501040208028\n,\n        \nmetadata\n: {}\n    },\n    \norigin\n: {\n        \ntype\n: \nurn:oc:attributeType:origin\n,\n        \nvalue\n: \nThe London Borough profile is a combination of data from the London Datastore and Public Health England.\n,\n        \nmetadata\n: {\n            \nunit\n: {\n                \ntype\n: \nNOT_APPLIED\n,\n                \nvalue\n: \nNOT_APPLIED\n\n            },\n            \nurls\n: {\n                \ntype\n: \nurl\n,\n                \nvalue\n: \nhttp://data.london.gov.uk/dataset/london-borough-profiles,http://data.london.gov.uk/dataset/walking-and-cycling-borough,http://www.noo.org.uk/visualisation\n\n            }\n        }\n    },\n    \ncarbonEmission\n: {\n        \ntype\n: \nurn:oc:attributeType:carbonEmission\n,\n        \nvalue\n: \n971.336623467994\n,\n        \nmetadata\n: {\n            \nunit\n: {\n                \ntype\n: \nurn:oc:uom:kilotonne\n,\n                \nvalue\n: \nkilotonne\n\n            },\n            \nTimeInstant\n: {\n                \ntype\n: \nurn:oc:attributeType:ISO8601\n,\n                \nvalue\n: \n2013-12-31T23:59:59\n\n            }\n        }\n    },\n    \ncyclingFrequency\n: {\n        \ntype\n: \nurn:oc:attributeType:cyclingFrequency\n,\n        \nvalue\n: \n19.882866745828885\n,\n        \nmetadata\n: {\n            \nunit\n: {\n                \ntype\n: \nurn:oc:uom:percent\n,\n                \nvalue\n: \npercent\n\n            },\n            \nTimeInstant\n: {\n                \ntype\n: \nurn:oc:attributeType:ISO8601\n,\n                \nvalue\n: \n2014-12-31T23:59:59\n\n            }\n        }\n    },\n    \ngreenspace\n: {\n        \ntype\n: \nurn:oc:attributeType:greenspace\n,\n        \nvalue\n: \n19.1\n,\n        \nmetadata\n: {\n            \nunit\n: {\n                \ntype\n: \nurn:oc:uom:percent\n,\n                \nvalue\n: \npercent\n\n            },\n            \nTimeInstant\n: {\n                \ntype\n: \nurn:oc:attributeType:ISO8601\n,\n                \nvalue\n: \n2005-12-31T23:59:59\n\n            }\n        }\n    },\n    \nhousePrice\n: {\n        \ntype\n: \nurn:oc:attributeType:housePrice\n,\n        \nvalue\n: \n661000.0\n,\n        \nmetadata\n: {\n            \nunit\n: {\n                \ntype\n: \nurn:oc:uom:monetaryValuePounds\n,\n                \nvalue\n: \nmonetayValuePounds\n\n            },\n            \nTimeInstant\n: {\n                \ntype\n: \nurn:oc:attributeType:ISO8601\n,\n                \nvalue\n: \n2014-12-31T23:59:59\n\n            }\n        }\n    },\n    \nhouseholdCarOwnership\n: {\n        \ntype\n: \nurn:oc:attributeType:householdCarOwnership\n,\n        \nvalue\n: \n0.544025313314307\n,\n        \nmetadata\n: {\n            \nunit\n: {\n                \ntype\n: \nurn:oc:uom:count\n,\n                \nvalue\n: \ncount\n\n            },\n            \nTimeInstant\n: {\n                \ntype\n: \nurn:oc:attributeType:ISO8601\n,\n                \nvalue\n: \n2011-12-31T23:59:59\n\n            }\n        }\n    },\n    \nhouseholdIncome\n: {\n        \ntype\n: \nurn:oc:attributeType:householdIncome\n,\n        \nvalue\n: \n62910.0\n,\n        \nmetadata\n: {\n            \nunit\n: {\n                \ntype\n: \nurn:oc:uom:monetaryValuePounds\n,\n                \nvalue\n: \nmonetayValuePounds\n\n            },\n            \nTimeInstant\n: {\n                \ntype\n: \nurn:oc:attributeType:ISO8601\n,\n                \nvalue\n: \n2013-12-31T23:59:59\n\n            }\n        }\n    },\n    \nobesity\n: {\n        \ntype\n: \nurn:oc:attributeType:obesity\n,\n        \nvalue\n: \n14.918342434625048\n,\n        \nmetadata\n: {\n            \nunit\n: {\n                \ntype\n: \nurn:oc:uom:percent\n,\n                \nvalue\n: \npercent\n\n            },\n            \nTimeInstant\n: {\n                \ntype\n: \nurn:oc:attributeType:ISO8601\n,\n                \nvalue\n: \n2014-12-31T23:59:59\n\n            }\n        }\n    },\n    \npopulationDensity\n: {\n        \ntype\n: \nurn:oc:attributeType:populationDensity\n,\n        \nvalue\n: \n110.80989224363077\n,\n        \nmetadata\n: {\n            \nunit\n: {\n                \ntype\n: \nurn:oc:uom:peoplePerHectare\n,\n                \nvalue\n: \npeoplePerHectare\n\n            },\n            \nTimeInstant\n: {\n                \ntype\n: \nurn:oc:attributeType:ISO8601\n,\n                \nvalue\n: \n2015-12-31T23:59:59\n\n            }\n        }\n    },\n    \nwalkingFrequency\n: {\n        \ntype\n: \nurn:oc:attributeType:walkingFrequency\n,\n        \nvalue\n: \n61.00442050708806\n,\n        \nmetadata\n: {\n            \nunit\n: {\n                \ntype\n: \nurn:oc:uom:percent\n,\n                \nvalue\n: \npercent\n\n            },\n            \nTimeInstant\n: {\n                \ntype\n: \nurn:oc:attributeType:ISO8601\n,\n                \nvalue\n: \n2014-12-31T23:59:59\n\n            }\n        }\n    }\n}\n\n\n\n\nNote: The area attribute has been simplified in this example due to space reasons.\n\n\nLondon Traffic Counts\n\n\nIn October every year the \nDepartment for Transport\n performs an extensive \ntraffic count\n throughout thousands for locations in England. The traffic counts are presented as daily averages of different vehicle types (bicycles, motorcycles, cars, vans, trucks, etc.) that pass through a certain point.\n\n\nExample:\n\n\n{\n    \nid\n: \nurn:oc:entity:london:trafficCount:uk.gov.dft:DfT-TrafficCounter-6000\n,\n    \ntype\n: \nurn:oc:entityType:trafficstats\n,\n    \nlocation\n: {\n        \ntype\n: \ngeo:point\n,\n        \nvalue\n: \n-0.23795282516501054,51.587519079277754\n,\n        \nmetadata\n: {}\n    },\n    \norigin\n: {\n        \ntype\n: \nurn:oc:attributeType:origin\n,\n        \nvalue\n: \nStreet-level traffic count data from UK Department for Transport.\n,\n        \nmetadata\n: {\n            \nunit\n: {\n                \ntype\n: \nNOT_APPLIED\n,\n                \nvalue\n: \nNOT_APPLIED\n\n            },\n            \nurls\n: {\n                \ntype\n: \nurl\n,\n                \nvalue\n: \nhttp://www.dft.gov.uk/traffic-counts/\n\n            }\n        }\n    },\n    \ntrafficIntensity:bicycle\n: {\n        \ntype\n: \nurn:oc:attributeType:trafficIntensity:bicycle\n,\n        \nvalue\n: \n0.0\n,\n        \nmetadata\n: {\n            \nunit\n: {\n                \ntype\n: \nurn:oc:uom:vehiclePerDay\n,\n                \nvalue\n: \nvehiclePerDay\n\n            },\n            \nTimeInstant\n: {\n                \ntype\n: \nurn:oc:attributeType:ISO8601\n,\n                \nvalue\n: \n2015-12-31T23:59:59\n\n            }\n        }\n    },\n    \ntrafficIntensity:bus\n: {\n        \ntype\n: \nurn:oc:attributeType:trafficIntensity:bus\n,\n        \nvalue\n: \n320.0\n,\n        \nmetadata\n: {\n            \nunit\n: {\n                \ntype\n: \nurn:oc:uom:vehiclePerDay\n,\n                \nvalue\n: \nvehiclePerDay\n\n            },\n            \nTimeInstant\n: {\n                \ntype\n: \nurn:oc:attributeType:ISO8601\n,\n                \nvalue\n: \n2015-12-31T23:59:59\n\n            }\n        }\n    },\n    \ntrafficIntensity:car\n: {\n        \ntype\n: \nurn:oc:attributeType:trafficIntensity:car\n,\n        \nvalue\n: \n35237.0\n,\n        \nmetadata\n: {\n            \nunit\n: {\n                \ntype\n: \nurn:oc:uom:vehiclePerDay\n,\n                \nvalue\n: \nvehiclePerDay\n\n            },\n            \nTimeInstant\n: {\n                \ntype\n: \nurn:oc:attributeType:ISO8601\n,\n                \nvalue\n: \n2015-12-31T23:59:59\n\n            }\n        }\n    },\n    \ntrafficIntensity:heavyGoodsVehicle\n: {\n        \ntype\n: \nurn:oc:attributeType:trafficIntensity:heavyGoodsVehicle\n,\n        \nvalue\n: \n3271.0\n,\n        \nmetadata\n: {\n            \nunit\n: {\n                \ntype\n: \nurn:oc:uom:vehiclePerDay\n,\n                \nvalue\n: \nvehiclePerDay\n\n            },\n            \nTimeInstant\n: {\n                \ntype\n: \nurn:oc:attributeType:ISO8601\n,\n                \nvalue\n: \n2015-12-31T23:59:59\n\n            }\n        }\n    },\n    \ntrafficIntensity:lightGoodsVehicle\n: {\n        \ntype\n: \nurn:oc:attributeType:trafficIntensity:lightGoodsVehicle\n,\n        \nvalue\n: \n7204.0\n,\n        \nmetadata\n: {\n            \nunit\n: {\n                \ntype\n: \nurn:oc:uom:vehiclePerDay\n,\n                \nvalue\n: \nvehiclePerDay\n\n            },\n            \nTimeInstant\n: {\n                \ntype\n: \nurn:oc:attributeType:ISO8601\n,\n                \nvalue\n: \n2015-12-31T23:59:59\n\n            }\n        }\n    },\n    \ntrafficIntensity:motorcycle\n: {\n        \ntype\n: \nurn:oc:attributeType:trafficIntensity:motorcycle\n,\n        \nvalue\n: \n493.0\n,\n        \nmetadata\n: {\n            \nunit\n: {\n                \ntype\n: \nurn:oc:uom:vehiclePerDay\n,\n                \nvalue\n: \nvehiclePerDay\n\n            },\n            \nTimeInstant\n: {\n                \ntype\n: \nurn:oc:attributeType:ISO8601\n,\n                \nvalue\n: \n2015-12-31T23:59:59\n\n            }\n        }\n    }\n}\n\n\n\n\nTransport\n\n\nTransport for London\n and \nTransport API\n provide API endpoints for getting information about the London public transport network, tube stations, bus stops, citybicycle rental stations, tube lines and bus lines. In the first round of experimentation we\n\n\nExample:\n\n\n{\n    \nid\n: \nurn:oc:entity:london:transportService:TransportAPI:VIC\n,\n    \ntype\n: \nurn:oc:entityType:transportStation\n,\n    \naccess:scope\n: {\n        \ntype\n: \nurn:oc:attributeType:access:scope\n,\n        \nvalue\n: \npublic\n,\n        \nmetadata\n: {}\n    },\n    \nlocation\n: {\n        \ntype\n: \ngeo:point\n,\n        \nvalue\n: \n-0.144544,51.495256\n,\n        \nmetadata\n: {}\n    },\n    \norigin\n: {\n        \ntype\n: \nurn:oc:attributeType:origin\n,\n        \nvalue\n: \nTrain station performance indicators from the TransportAPI\n,\n        \nmetadata\n: {\n            \nunit\n: {\n                \ntype\n: \nNOT_APPLIED\n,\n                \nvalue\n: \nNOT_APPLIED\n\n            },\n            \nurls\n: {\n                \ntype\n: \nurl\n,\n                \nvalue\n: \nhttp://fcc.transportapi.com/\n\n            }\n        }\n    },\n    \ntransportServicePerformance\n: {\n        \ntype\n: \nurn:oc:attributeType:transportServicePerformance\n,\n        \nvalue\n: \n96.0\n,\n        \nmetadata\n: {\n            \nunit\n: {\n                \ntype\n: \nurn:oc:uom:percent\n,\n                \nvalue\n: \npercent\n\n            },\n            \nTimeInstant\n: {\n                \ntype\n: \nurn:oc:attributeType:ISO8601\n,\n                \nvalue\n: \n2016-09-29T16:17:38+01:00\n\n            }\n        }\n    }\n}\n\n\n\n\nLondon Air Quality Network\n\n\nThe \nLondon Air Quality Network\n (LAQN) provides pollution measurements that are essential to underpin air quality management and health studies. The majority of London\u2019s 33 boroughs supply measurements to the network and in addition these data are increasingly being supplemented by measurements from local authorities surrounding London, thereby providing an overall perspective of air pollution in London. The LAQN is operated and managed by the Environmental Research Group (ERG) at King\u2019s College London. QA/QC audits are carried out by the National Physical Laboratory (NPL).\n\n\nBased on the 2014 \nLAQN report\n, the air quality observations made are Carbon Monoxide (CO), Nitrogen Dioxide (NO2), Sulphur dioxide (SO2), Ozone (O3), Particles (PM10) and Particles (PM2.5) along with environmental observations like Wind Speed, Temperature, Rainfall, etc. in over 60 monitoring sites.\n\n\n{\n    \nid\n: \nurn:oc:entity:london:aqn:CD9\n,\n    \ntype\n: \nurn:oc:entityType:iotdevice\n,\n    \nlocation\n: {\n        \ntype\n: \ngeo:point\n,\n        \nvalue\n: \n-0.129053205282516,51.5277066194645\n,\n        \nmetadata\n: {}\n    },\n    \norigin\n: {\n        \ntype\n: \nurn:oc:attributeType:origin\n,\n        \nvalue\n: \nhttp://www.londonair.org.uk/LondonAir/API/\n,\n        \nmetadata\n: {\n            \nunit\n: {\n                \ntype\n: \nNOT_APPLIED\n,\n                \nvalue\n: \nNOT_APPLIED\n\n            }\n        }\n    },\n    \ndatasource\n: {\n        \ntype\n: \nurn:oc:attributeType:datasource\n,\n        \nvalue\n: \nhttp://london.site.organicity.eu:8081/api/v1/entities/\n,\n        \nmetadata\n: {\n            \ndatasourceInternal\n: {\n                \ntype\n: \nurn:oc:datatype:boolean\n,\n                \nvalue\n: \ntrue\n\n            }\n        }\n    },\n    \ndescription\n: {\n        \ntype\n: \nurn:oc:attributeType:description\n,\n        \nvalue\n: \nCD9\n,\n        \nmetadata\n: {}\n    },\n    \nchemicalAgentAtmosphericConcentration:NO\n: {\n        \ntype\n: \nurn:oc:attributeType:chemicalAgentAtmosphericConcentration:NO\n,\n        \nvalue\n: \n46.2\n,\n        \nmetadata\n: {\n            \nunit\n: {\n                \ntype\n: \nurn:oc:uom:microgramPerCubicMetre\n,\n                \nvalue\n: \nmicrogramPerCubicMetre\n\n            },\n            \ndatatype\n: {\n                \ntype\n: \nurn:oc:datatype:numeric\n,\n                \nvalue\n: \nnumeric\n\n            }\n        }\n    },\n    \nchemicalAgentAtmosphericConcentration:airParticlesPM10\n: {\n        \ntype\n: \nurn:oc:attributeType:chemicalAgentAtmosphericConcentration:airParticlesPM10\n,\n        \nvalue\n: \n25.8\n,\n        \nmetadata\n: {\n            \nunit\n: {\n                \ntype\n: \nurn:oc:uom:miligramPerCubicMetre\n,\n                \nvalue\n: \nmiligramPerCubicMetre\n\n            },\n            \ndatatype\n: {\n                \ntype\n: \nurn:oc:datatype:numeric\n,\n                \nvalue\n: \nnumeric\n\n            }\n        }\n    },\n    \nchemicalAgentAtmosphericConcentration:airParticlesPM25\n: {\n        \ntype\n: \nurn:oc:attributeType:chemicalAgentAtmosphericConcentration:airParticlesPM25\n,\n        \nvalue\n: \n17.5\n,\n        \nmetadata\n: {\n            \nunit\n: {\n                \ntype\n: \nurn:oc:uom:miligramPerCubicMetre\n,\n                \nvalue\n: \nmiligramPerCubicMetre\n\n            },\n            \ndatatype\n: {\n                \ntype\n: \nurn:oc:datatype:numeric\n,\n                \nvalue\n: \nnumeric\n\n            }\n        }\n    }\n}\n\n\n\n\nEnvironmental Sensors - QEOP\n\n\nA number of environmental stations (3 weather stations) have been deployed in Queen Elizabeth Olympic Park (QEOP) measuring environmental conditions of the park like: temperature, rain levels, wind direction and intensity, humidity, barometric pressure and light intensity.\n\n\nMoreover, there are recorded data from 10 distinct points in the city (Temperature, Humidity, Nitrogen Oxide, Nitrogen Dioxide, Carbon Dioxide) for year 2015.\n\n\n{\n    \nid\n: \nurn:oc:entity:london:enableiot:fixed:ICRI-QEOP-0002\n,\n    \ntype\n: \nurn:oc:entityType:iotdevice\n,\n    \nlocation\n: {\n        \ntype\n: \ngeo:point\n,\n        \nvalue\n: \n-0.014934,51.547581\n,\n        \nmetadata\n: {}\n    },\n    \norigin\n: {\n        \ntype\n: \nurn:oc:attributeType:origin\n,\n        \nvalue\n: \nIntel QeoP Deployments\n,\n        \nmetadata\n: {\n            \nunit\n: {\n                \ntype\n: \nNOT_APPLIED\n,\n                \nvalue\n: \nNOT_APPLIED\n\n            }\n        }\n    },\n    \ndatasource\n: {\n        \ntype\n: \nurn:oc:attributeType:datasource\n,\n        \nvalue\n: \nhttp://london.site.organicity.eu:8081/api/v1/entities\n,\n        \nmetadata\n: {\n            \ndatasourceInternal\n: {\n                \ntype\n: \nurn:oc:datatype:boolean\n,\n                \nvalue\n: \ntrue\n\n            }\n        }\n    },\n    \ndescription\n: {\n        \ntype\n: \nurn:oc:attributeType:description\n,\n        \nvalue\n: \nICRI-QEOP-0002active\n,\n        \nmetadata\n: {}\n    },\n    \n10_Min_Avg_Wind_Speed\n: {\n        \ntype\n: \nurn:oc:attributeType:windSpeed\n,\n        \nvalue\n: \n4.83\n,\n        \nmetadata\n: {\n            \ndatatype\n: {\n                \ntype\n: \nurn:oc:datatype:numeric\n,\n                \nvalue\n: \nnumeric\n\n            }\n        }\n    },\n    \nBarometer\n: {\n        \ntype\n: \nurn:oc:attributeType:atmosphericPressure\n,\n        \nvalue\n: \n771.9568\n,\n        \nmetadata\n: {\n            \ndatatype\n: {\n                \ntype\n: \nurn:oc:datatype:numeric\n,\n                \nvalue\n: \nnumeric\n\n            }\n        }\n    },\n    \nDay_ET\n: {\n        \ntype\n: \nurn:oc:attributeType:rainfall\n,\n        \nvalue\n: \n0.0\n,\n        \nmetadata\n: {\n            \ndatatype\n: {\n                \ntype\n: \nurn:oc:datatype:numeric\n,\n                \nvalue\n: \nnumeric\n\n            }\n        }\n    },\n    \nDay_Rain\n: {\n        \ntype\n: \nurn:oc:attributeType:rainfall\n,\n        \nvalue\n: \n0.0\n,\n        \nmetadata\n: {\n            \ndatatype\n: {\n                \ntype\n: \nurn:oc:datatype:numeric\n,\n                \nvalue\n: \nnumeric\n\n            }\n        }\n    },\n    \nInside_Humidity\n: {\n        \ntype\n: \nurn:oc:attributeType:relativeHumidity\n,\n        \nvalue\n: \n0.34\n,\n        \nmetadata\n: {\n            \ndatatype\n: {\n                \ntype\n: \nurn:oc:datatype:numeric\n,\n                \nvalue\n: \nnumeric\n\n            }\n        }\n    },\n    \nInside_Temperature\n: {\n        \ntype\n: \nurn:oc:attributeType:temperature:ambient\n,\n        \nvalue\n: \n28.72222\n,\n        \nmetadata\n: {\n            \ndatatype\n: {\n                \ntype\n: \nurn:oc:datatype:numeric\n,\n                \nvalue\n: \nnumeric\n\n            }\n        }\n    },\n    \nMonth_ET\n: {\n        \ntype\n: \nurn:oc:attributeType:rainfall\n,\n        \nvalue\n: \n0.0\n,\n        \nmetadata\n: {\n            \ndatatype\n: {\n                \ntype\n: \nurn:oc:datatype:numeric\n,\n                \nvalue\n: \nnumeric\n\n            }\n        }\n    },\n    \nMonth_Rain\n: {\n        \ntype\n: \nurn:oc:attributeType:rainfall\n,\n        \nvalue\n: \n1.05\n,\n        \nmetadata\n: {\n            \ndatatype\n: {\n                \ntype\n: \nurn:oc:datatype:numeric\n,\n                \nvalue\n: \nnumeric\n\n            }\n        }\n    },\n    \nOutside_Humidity\n: {\n        \ntype\n: \nurn:oc:attributeType:relativeHumidity\n,\n        \nvalue\n: \n0.71\n,\n        \nmetadata\n: {\n            \ndatatype\n: {\n                \ntype\n: \nurn:oc:datatype:numeric\n,\n                \nvalue\n: \nnumeric\n\n            }\n        }\n    },\n    \nOutside_Temperature\n: {\n        \ntype\n: \nurn:oc:attributeType:temperature:ambient\n,\n        \nvalue\n: \n13.61111\n,\n        \nmetadata\n: {\n            \ndatatype\n: {\n                \ntype\n: \nurn:oc:datatype:numeric\n,\n                \nvalue\n: \nnumeric\n\n            }\n        }\n    },\n    \nWind_Direction\n: {\n        \ntype\n: \nurn:oc:attributeType:windDirection\n,\n        \nvalue\n: \n37.0\n,\n        \nmetadata\n: {\n            \ndatatype\n: {\n                \ntype\n: \nurn:oc:datatype:numeric\n,\n                \nvalue\n: \nnumeric\n\n            }\n        }\n    },\n    \nWind_Speed\n: {\n        \ntype\n: \nurn:oc:attributeType:windSpeed\n,\n        \nvalue\n: \n11.27\n,\n        \nmetadata\n: {\n            \ndatatype\n: {\n                \ntype\n: \nurn:oc:datatype:numeric\n,\n                \nvalue\n: \nnumeric\n\n            }\n        }\n    },\n    \nYear_ET\n: {\n        \ntype\n: \nurn:oc:attributeType:rainfall\n,\n        \nvalue\n: \n0.0\n,\n        \nmetadata\n: {\n            \ndatatype\n: {\n                \ntype\n: \nurn:oc:datatype:numeric\n,\n                \nvalue\n: \nnumeric\n\n            }\n        }\n    },\n    \nYear_Rain\n: {\n        \ntype\n: \nurn:oc:attributeType:rainfall\n,\n        \nvalue\n: \n110.8\n,\n        \nmetadata\n: {\n            \ndatatype\n: {\n                \ntype\n: \nurn:oc:datatype:numeric\n,\n                \nvalue\n: \nnumeric\n\n            }\n        }\n    }\n}\n\n\n\n\nSantander\n\n\nTraffic\n\n\nTraffic cameras.\n\n\nFour traffic cameras in the city provide real time images about the status of the traffic in different areas of the city.\n\n\n{\n    \nid\n: \nurn:oc:entity:santander:traffic:camera:02\n,\n    \ntype\n: \nurn:oc:entityType:camera\n,\n    \nTimeInstant\n: {\n        \ntype\n: \nISO8601\n,\n        \nvalue\n: \n2017-01-09T11:17:33.000Z\n,\n        \nmetadata\n: {}\n    },\n    \nimage\n: {\n        \ntype\n: \nurn:oc:attributeType:image\n,\n        \nvalue\n: \nhttp://datos.santander.es/files/camara_castilla/castilla_20170109121732.jpg\n,\n        \nmetadata\n: {}\n    },\n    \nname\n: {\n        \ntype\n: \nurn:oc:attributeType:name\n,\n        \nvalue\n: \nCastilla Hermida\n,\n        \nmetadata\n: {}\n    },\n    \norigin\n: {\n        \ntype\n: \nurn:oc:attributeType:origin\n,\n        \nvalue\n: \nSantander City\n,\n        \nmetadata\n: {}\n    },\n    \nreputation\n: {\n        \ntype\n: \nurn:oc:attributeType:reputation\n,\n        \nvalue\n: \n-1\n,\n        \nmetadata\n: {\n            \nunit\n: {\n                \ntype\n: \nurn:oc:dataType:string\n,\n                \nvalue\n: \nurn:oc:uom:index\n\n            },\n            \ndescription\n: {\n                \ntype\n: \nurn:oc:dataType:string\n,\n                \nvalue\n: \nThe reputation scores vary from 0 to 1. -1 means that there is not scores already calculated\n\n            }\n        }\n    }\n}\n\n\n\n\nVehicle count sensors\n\n\nPlaced at the main entrance of the city, they provide information about the occupancy and traffic intensity in the different lanes of the main roads.\n\n\n{\n    \nid\n: \nurn:oc:entity:santander:traffic:fixed:3306\n,\n    \ntype\n: \nurn:oc:entityType:iotdevice:vehicleCounter\n,\n    \nTimeInstant\n: {\n        \ntype\n: \nISO8601\n,\n        \nvalue\n: \n2017-01-12T09:15:07.000Z\n,\n        \nmetadata\n: {}\n    },\n    \ndatasource\n: {\n        \ntype\n: \nurn:oc:attributeType:datasource\n,\n        \nvalue\n: \nhttp://mu.tlmat.unican.es:8098/\n,\n        \nmetadata\n: {\n            \ndatasourceInternal\n: {\n                \ntype\n: \nurn:oc:dataType:boolean\n,\n                \nvalue\n: \nboolean\n\n            }\n        }\n    },\n    \nlocation\n: {\n        \ntype\n: \ngeo:json\n,\n        \nvalue\n: {\n            \ntype\n: \nPoint\n,\n            \ncoordinates\n: [-3.82782, 43.4513]\n        },\n        \nmetadata\n: {}\n    },\n    \norigin\n: {\n        \ntype\n: \nurn:oc:attributeType:origin\n,\n        \nvalue\n: \nSmartSantander\n,\n        \nmetadata\n: {}\n    },\n    \nreputation\n: {\n        \ntype\n: \nurn:oc:attributeType:reputation\n,\n        \nvalue\n: -1,\n        \nmetadata\n: {\n            \nunit\n: {\n                \ntype\n: \nurn:oc:dataType:string\n,\n                \nvalue\n: \nurn:oc:uom:index\n\n            },\n            \ndescription\n: {\n                \ntype\n: \nurn:oc:dataType:string\n,\n                \nvalue\n: \nThe reputation scores vary from 0 to 1. -1 means that there is not scores already calculated\n\n            }\n        }\n    },\n    \nroadOccupancy\n: {\n        \ntype\n: \nurn:oc:attributeType:speed:roadOccupancy\n,\n        \nvalue\n: 6.24,\n        \nmetadata\n: {\n            \nunit\n: {\n                \ntype\n: \nurn:oc:dataType:string\n,\n                \nvalue\n: \nurn:oc:uom:vehiclesPerMinute\n\n            },\n            \ndescription\n: {\n                \ntype\n: \nurn:oc:dataType:string\n,\n                \nvalue\n: \nMeasurements calculated in the last minute\n\n            }\n        }\n    },\n    \ntrafficIntensity\n: {\n        \ntype\n: \nurn:oc:attributeType:trafficIntensity\n,\n        \nvalue\n: 11,\n        \nmetadata\n: {\n            \nunit\n: {\n                \ntype\n: \nurn:oc:dataType:string\n,\n                \nvalue\n: \nurn:oc:uom:vehiclesPerMinute\n\n            },\n            \ndescription\n: {\n                \ntype\n: \nurn:oc:dataType:string\n,\n                \nvalue\n: \nMeasurements calculated in the last minute\n\n            }\n        }\n    }\n}\n\n\n\n\nVehicle speed sensors\n\n\nPlaced at the main entrance of the city, they provide information about the occupancy, the count of vehicles, the median and average speed in the different lanes of the main roads.\n\n\n{\n    \nid\n: \nurn:oc:entity:santander:traffic:fixed:3305\n,\n    \ntype\n: \nurn:oc:entityType:iotdevice:vehicleSpeed\n,\n    \nTimeInstant\n: {\n        \ntype\n: \nISO8601\n,\n        \nvalue\n: \n2017-01-12T09:08:09.000Z\n,\n        \nmetadata\n: {}\n    },\n    \ndatasource\n: {\n        \ntype\n: \nurn:oc:attributeType:datasource\n,\n        \nvalue\n: \nhttp://mu.tlmat.unican.es:8098/\n,\n        \nmetadata\n: {\n            \ndatasourceInternal\n: {\n                \ntype\n: \nurn:oc:dataType:boolean\n,\n                \nvalue\n: \nboolean\n\n            }\n        }\n    },\n    \nlocation\n: {\n        \ntype\n: \ngeo:json\n,\n        \nvalue\n: {\n            \ntype\n: \nPoint\n,\n            \ncoordinates\n: [-3.83027, 43.4499]\n        },\n        \nmetadata\n: {}\n    },\n    \norigin\n: {\n        \ntype\n: \nurn:oc:attributeType:origin\n,\n        \nvalue\n: \nSmartSantander\n,\n        \nmetadata\n: {}\n    },\n    \nreputation\n: {\n        \ntype\n: \nurn:oc:attributeType:reputation\n,\n        \nvalue\n: -1,\n        \nmetadata\n: {\n            \nunit\n: {\n                \ntype\n: \nurn:oc:dataType:string\n,\n                \nvalue\n: \nurn:oc:uom:index\n\n            },\n            \ndescription\n: {\n                \ntype\n: \nurn:oc:dataType:string\n,\n                \nvalue\n: \nThe reputation scores vary from 0 to 1. -1 means that there is not scores already calculated\n\n            }\n        }\n    },\n    \nroadOccupancy\n: {\n        \ntype\n: \nurn:oc:attributeType:speed:roadOccupancy\n,\n        \nvalue\n: 8.86,\n        \nmetadata\n: {\n            \nunit\n: {\n                \ntype\n: \nurn:oc:dataType:string\n,\n                \nvalue\n: \nurn:oc:uom:vehiclesPerMinute\n\n            },\n            \ndescription\n: {\n                \ntype\n: \nurn:oc:dataType:string\n,\n                \nvalue\n: \nMeasurements calculated in the last minute\n\n            }\n        }\n    },\n    \nspeed:average\n: {\n        \ntype\n: \nurn:oc:attributeType:speed:average\n,\n        \nvalue\n: 59.7,\n        \nmetadata\n: {\n            \nunit\n: {\n                \ntype\n: \nurn:oc:dataType:string\n,\n                \nvalue\n: \nurn:oc:uom:kilometrePerHour\n\n            },\n            \ndescription\n: {\n                \ntype\n: \nurn:oc:dataType:string\n,\n                \nvalue\n: \nMeasurements calculated in the last minute\n\n            }\n        }\n    },\n    \nspeed:median\n: {\n        \ntype\n: \nurn:oc:attributeType:speed:median\n,\n        \nvalue\n: 58,\n        \nmetadata\n: {\n            \nunit\n: {\n                \ntype\n: \nurn:oc:dataType:string\n,\n                \nvalue\n: \nurn:oc:uom:kilometrePerHour\n\n            },\n            \ndescription\n: {\n                \ntype\n: \nurn:oc:dataType:string\n,\n                \nvalue\n: \nMeasurements calculated in the last minute\n\n            }\n        }\n    },\n    \ntrafficIntensity\n: {\n        \ntype\n: \nurn:oc:attributeType:trafficIntensity\n,\n        \nvalue\n: 18,\n        \nmetadata\n: {\n            \nunit\n: {\n                \ntype\n: \nurn:oc:dataType:string\n,\n                \nvalue\n: \nurn:oc:uom:vehiclesPerMinute\n\n            },\n            \ndescription\n: {\n                \ntype\n: \nurn:oc:dataType:string\n,\n                \nvalue\n: \nMeasurements calculated in the last minute\n\n            }\n        }\n    }\n}\n\n\n\n\nMagnetic Loops\n\n\nIt provides real time information about the traffic intensity, the occupancy of the roads and the load, based on the measurements gathered by magnetic loops deployed along the city.\n\n\n{\n    \nid\n: \nurn:oc:entity:santander:traffic:magneticLoop:1001\n,\n    \ntype\n: \nurn:oc:entityType:iotdevice:magneticLoop\n,\n    \nTimeInstant\n: {\n        \ntype\n: \nISO8601\n,\n        \nvalue\n: \n2017-01-12T09:27:00.000Z\n,\n        \nmetadata\n: {}\n    },\n    \ndatasource\n: {\n        \ntype\n: \nurn:oc:attributeType:datasource\n,\n        \nvalue\n: \nhttp://mu.tlmat.unican.es:8098/\n,\n        \nmetadata\n: {\n            \ndatasourceInternal\n: {\n                \ntype\n: \nurn:oc:dataType:boolean\n,\n                \nvalue\n: \nboolean\n\n            }\n        }\n    },\n    \nlocation\n: {\n        \ntype\n: \ngeo:json\n,\n        \nvalue\n: {\n            \ntype\n: \nPoint\n,\n            \ncoordinates\n: [-3.82959, 43.4536]\n        },\n        \nmetadata\n: {}\n    },\n    \norigin\n: {\n        \ntype\n: \nurn:oc:attributeType:origin\n,\n        \nvalue\n: \nSICE\n,\n        \nmetadata\n: {}\n    },\n    \nreputation\n: {\n        \ntype\n: \nurn:oc:attributeType:reputation\n,\n        \nvalue\n: -1,\n        \nmetadata\n: {\n            \nunit\n: {\n                \ntype\n: \nurn:oc:dataType:string\n,\n                \nvalue\n: \nurn:oc:uom:index\n\n            },\n            \ndescription\n: {\n                \ntype\n: \nurn:oc:dataType:string\n,\n                \nvalue\n: \nThe reputation scores vary from 0 to 1. -1 means that there is not scores already calculated\n\n            }\n        }\n    },\n    \nroadLoad\n: {\n        \ntype\n: \nurn:oc:attributeType:roadLoad\n,\n        \nvalue\n: 9,\n        \nmetadata\n: {}\n    },\n    \nroadOccupancy\n: {\n        \ntype\n: \nurn:oc:attributeType:roadOccupancy\n,\n        \nvalue\n: 3,\n        \nmetadata\n: {}\n    },\n    \ntrafficIntensity\n: {\n        \ntype\n: \nurn:oc:attributeType:trafficIntensity\n,\n        \nvalue\n: 180,\n        \nmetadata\n: {}\n    }\n}\n\n\n\n\nParking\n\n\nOutdoor Parking\n\n\nReal time information of available parking spots within zone 30. A set of 400 ferromagnetic sensors are placed under the asphalt in zone 30 of the Santander city centre, providing real time information about the status of occupancy of the different parking spots.\n\n\n{\n    \nid\n: \nurn:oc:entity:santander:parking:np3601\n,\n    \ntype\n: \nurn:oc:entityType:iotdevice:parking\n,\n    \nTimeInstant\n: {\n        \ntype\n: \nISO8601\n,\n        \nvalue\n: \n2017-01-12T07:53:44.000Z\n,\n        \nmetadata\n: {}\n    },\n    \ndatasource\n: {\n        \ntype\n: \nurn:oc:attributeType:datasource\n,\n        \nvalue\n: \nhttp://mu.tlmat.unican.es:8098/\n,\n        \nmetadata\n: {\n            \ndatasourceInternal\n: {\n                \ntype\n: \nurn:oc:dataType:boolean\n,\n                \nvalue\n: \nboolean\n\n            }\n        }\n    },\n    \nlocation\n: {\n        \ntype\n: \ngeo:json\n,\n        \nvalue\n: {\n            \ntype\n: \nPoint\n,\n            \ncoordinates\n: [-3.79897, 43.4631]\n        },\n        \nmetadata\n: {}\n    },\n    \norigin\n: {\n        \ntype\n: \nurn:oc:attributeType:origin\n,\n        \nvalue\n: \nSmartSantander\n,\n        \nmetadata\n: {}\n    },\n    \npresenceStatus:parking\n: {\n        \ntype\n: \nurn:oc:attributeType:presenceStatus:parking\n,\n        \nvalue\n: \ntrue\n,\n        \nmetadata\n: {\n            \ndescription\n: {\n                \ntype\n: \nurn:oc:dataType:string\n,\n                \nvalue\n: \nTrue means that the parking spot is occupied while false it is available\n\n            }\n        }\n    },\n    \nreputation\n: {\n        \ntype\n: \nurn:oc:attributeType:reputation\n,\n        \nvalue\n: -1,\n        \nmetadata\n: {\n            \nunit\n: {\n                \ntype\n: \nurn:oc:dataType:string\n,\n                \nvalue\n: \nurn:oc:uom:index\n\n            },\n            \ndescription\n: {\n                \ntype\n: \nurn:oc:dataType:string\n,\n                \nvalue\n: \nThe reputation scores vary from 0 to 1. -1 means that there is not scores already calculated\n\n            }\n        }\n    }\n}\n\n\n\n\nUnderground Car Parkings\n\n\n{\n    \nid\n: \nurn:oc:entity:santander:parking:underground:APAR4\n,\n    \ntype\n: \nurn:oc:entityType:undergroundParking\n,\n    \nTimeInstant\n: {\n        \ntype\n: \nISO8601\n,\n        \nvalue\n: \n2017-01-12T10:16:00.000Z\n,\n        \nmetadata\n: {}\n    },\n    \ndatasource\n: {\n        \ntype\n: \nurn:oc:attributeType:datasource\n,\n        \nvalue\n: \nhttp://mu.tlmat.unican.es:8098/\n,\n        \nmetadata\n: {\n            \ndatasourceInternal\n: {\n                \ntype\n: \nurn:oc:dataType:boolean\n,\n                \nvalue\n: \nboolean\n\n            }\n        }\n    },\n    \nextraSpotNumber\n: {\n        \ntype\n: \nurn:oc:attributeType:extraSpotNumber\n,\n        \nvalue\n: 2,\n        \nmetadata\n: {}\n    },\n    \nlocation\n: {\n        \ntype\n: \ngeo:json\n,\n        \nvalue\n: {\n            \ntype\n: \nPoint\n,\n            \ncoordinates\n: [-3.81769, 43.4614]\n        },\n        \nmetadata\n: {}\n    },\n    \nname\n: {\n        \ntype\n: \nurn:oc:attributeType:name\n,\n        \nvalue\n: \nParking de Numancia\n,\n        \nmetadata\n: {}\n    },\n    \norigin\n: {\n        \ntype\n: \nurn:oc:attributeType:origin\n,\n        \nvalue\n: \nSmartSantanderRA\n,\n        \nmetadata\n: {}\n    },\n    \nparkingDisposition\n: {\n        \ntype\n: \nurn:oc:attributeType:parkingDisposition\n,\n        \nvalue\n: \nparallel\n,\n        \nmetadata\n: {}\n    },\n    \nreputation\n: {\n        \ntype\n: \nurn:oc:attributeType:reputation\n,\n        \nvalue\n: -1,\n        \nmetadata\n: {\n            \nunit\n: {\n                \ntype\n: \nurn:oc:dataType:string\n,\n                \nvalue\n: \nurn:oc:uom:index\n\n            },\n            \ndescription\n: {\n                \ntype\n: \nurn:oc:dataType:string\n,\n                \nvalue\n: \nThe reputation scores vary from 0 to 1. -1 means that there is not scores already calculated\n\n            }\n        }\n    },\n    \ntotalSpotNumber\n: {\n        \ntype\n: \nurn:oc:attributeType:totalSpotNumber\n,\n        \nvalue\n: 244,\n        \nmetadata\n: {}\n    }\n}\n\n\n\n\nParking reserved for people with dissabilities.\n\n\nIt provides information about the parking spots reserved for people with disabilities. \n\n\n{\n    \nid\n: \nurn:oc:entity:santander:parking:disabledpeople:51564\n,\n    \ntype\n: \nurn:oc:entityType:parkingZone:disabledPeople\n,\n    \nTimeInstant\n: {\n        \ntype\n: \nISO8601\n,\n        \nvalue\n: \n2017-01-11T23:35:35.000Z\n,\n        \nmetadata\n: {}\n    },\n    \nlocation\n: {\n        \ntype\n: \ngeo:json\n,\n        \nvalue\n: {\n            \ntype\n: \nPoint\n,\n            \ncoordinates\n: [-3.83885, 43.4625]\n        },\n        \nmetadata\n: {}\n    },\n    \norigin\n: {\n        \ntype\n: \nurn:oc:attributeType:origin\n,\n        \nvalue\n: \nSantander OD\n,\n        \nmetadata\n: {}\n    },\n    \nparkingspots:angled\n: {\n        \ntype\n: \nurn:oc:attributeType:parkingspots:angled\n,\n        \nvalue\n: 0,\n        \nmetadata\n: {}\n    },\n    \nparkingspots:inline\n: {\n        \ntype\n: \nurn:oc:attributeType:parkingspots:inline\n,\n        \nvalue\n: 1,\n        \nmetadata\n: {}\n    },\n    \nregulation\n: {\n        \ntype\n: \nurn:oc:attributeType:regulation\n,\n        \nvalue\n: \nLibre\n,\n        \nmetadata\n: {}\n    },\n    \nreputation\n: {\n        \ntype\n: \nurn:oc:attributeType:reputation\n,\n        \nvalue\n: -1,\n        \nmetadata\n: {\n            \nunit\n: {\n                \ntype\n: \nurn:oc:dataType:string\n,\n                \nvalue\n: \nurn:oc:uom:index\n\n            },\n            \ndescription\n: {\n                \ntype\n: \nurn:oc:dataType:string\n,\n                \nvalue\n: \nThe reputation scores vary from 0 to 1. -1 means that there is not scores already calculated\n\n            }\n        }\n    },\n    \nstreet:name\n: {\n        \ntype\n: \nurn:oc:attributeType:street:name\n,\n        \nvalue\n: \nCL/ RAFAEL ALSUA\n,\n        \nmetadata\n: {\n            \ndetail\n: {\n                \ntype\n: \nurn:oc:datatype:string\n,\n                \nvalue\n: \nMargen Norte del vial, junto al n\u00ba 17\n\n            }\n        }\n    }\n}\n\n\n\n\nLoad and unload areas\n\n\n{\n    \nid\n: \nurn:oc:entity:santander:parking:loadunload:50949\n,\n    \ntype\n: \nurn:oc:entity:parkingZone:loadunload\n,\n    \nTimeInstant\n: {\n        \ntype\n: \nISO8601\n,\n        \nvalue\n: \n2017-01-11T23:40:08.000Z\n,\n        \nmetadata\n: {}\n    },\n    \nlocation\n: {\n        \ntype\n: \ngeo:json\n,\n        \nvalue\n: {\n            \ntype\n: \nPoint\n,\n            \ncoordinates\n: [-3.77824, 43.473]\n        },\n        \nmetadata\n: {}\n    },\n    \norigin\n: {\n        \ntype\n: \nurn:oc:attributeType:origin\n,\n        \nvalue\n: \nSantander OD\n,\n        \nmetadata\n: {}\n    },\n    \nparkingspots:angled\n: {\n        \ntype\n: \nurn:oc:attributeType:parkingspots:angled\n,\n        \nvalue\n: 0,\n        \nmetadata\n: {}\n    },\n    \nparkingspots:inline\n: {\n        \ntype\n: \nurn:oc:attributeType:parkingspots:inline\n,\n        \nvalue\n: 2,\n        \nmetadata\n: {}\n    },\n    \nregulation\n: {\n        \ntype\n: \nurn:oc:attributeType:regulation\n,\n        \nvalue\n: \nLibre\n,\n        \nmetadata\n: {}\n    },\n    \nreputation\n: {\n        \ntype\n: \nurn:oc:attributeType:reputation\n,\n        \nvalue\n: -1,\n        \nmetadata\n: {\n            \nunit\n: {\n                \ntype\n: \nurn:oc:dataType:string\n,\n                \nvalue\n: \nurn:oc:uom:index\n\n            },\n            \ndescription\n: {\n                \ntype\n: \nurn:oc:dataType:string\n,\n                \nvalue\n: \nThe reputation scores vary from 0 to 1. -1 means that there is not scores already calculated\n\n            }\n        }\n    },\n    \nserviceHours\n: {\n        \ntype\n: \nurn:oc:attributeType:schedule\n,\n        \nvalue\n: \nDE 7 A 11,30 H\n,\n        \nmetadata\n: {}\n    },\n    \nstreet:name\n: {\n        \ntype\n: \nurn:oc:attributeType:street:name\n,\n        \nvalue\n: \nAV/ REINA VICTORIA\n,\n        \nmetadata\n: {\n            \ndetail\n: {\n                \ntype\n: \nurn:oc:datatype:string\n,\n                \nvalue\n: \nRESERVA TRASLADADA DEL APARCAMIENTO INTERIOR.\n\n            }\n        }\n    }\n}\n\n\n\n\nTransport\n\n\nBus stops.\n\n\nA set of 415 assets, one per bus stop in the city, have been created. Those assets provide real time information about next buses reaching the bus stop, including the distance to reach the bus stop as well as the estimated time of arrival for the first and second bus coming.\n\n\n{\n    \nid\n: \nurn:oc:entity:santander:publictransport:bus:stop:103\n,\n    \ntype\n: \nurn:oc:entityType:busStop\n,\n    \nTimeInstant\n: {\n        \ntype\n: \nISO8601\n,\n        \nvalue\n: \n2016-10-04T22:20:00.000Z\n,\n        \nmetadata\n: {}\n    },\n    \naddress\n: {\n        \ntype\n: \nurn:oc:attributeType:address\n,\n        \nvalue\n: \nPlaza de las Estaciones S/N\n,\n        \nmetadata\n: {}\n    },\n    \nbus:direction\n: {\n        \ntype\n: \nurn:oc:attributeType:bus:direction\n,\n        \nvalue\n: \nB\u00ba Pesquero\n,\n        \nmetadata\n: {}\n    },\n    \nbus:stopName\n: {\n        \ntype\n: \nurn:oc:attributeType:bus:stopName\n,\n        \nvalue\n: \nLas Estaciones\n,\n        \nmetadata\n: {}\n    },\n    \nlocation\n: {\n        \ntype\n: \ngeo:point\n,\n        \nvalue\n: \n-3.8107700513716405,43.45908154114637\n,\n        \nmetadata\n: {}\n    }\n}\n\n\n\n\nBus lines\n\n\n{\n    \nid\n: \nurn:oc:entity:santander:transport:bus:line:N3\n,\n    \ntype\n: \nbus:line\n,\n    \nTimeInstant\n: {\n        \ntype\n: \nISO8601\n,\n        \nvalue\n: \n2017-01-03T00:00:00.000Z\n,\n        \nmetadata\n: {}\n    },\n    \nlineNumber\n: {\n        \ntype\n: \nurn:oc:attributeType:busLine:number\n,\n        \nvalue\n: \nN3\n,\n        \nmetadata\n: {}\n    },\n    \nname\n: {\n        \ntype\n: \nurn:oc:attributeType:busLine:name\n,\n        \nvalue\n: \nPE\u00d1ACASTILLO-PLAZA DE ITALIA \n,\n        \nmetadata\n: {}\n    },\n    \norigin\n: {\n        \ntype\n: \nurn:oc:attributeType:origin\n,\n        \nvalue\n: \nTUS Santander\n,\n        \nmetadata\n: {}\n    },\n    \nreputation\n: {\n        \ntype\n: \nurn:oc:attributeType:reputation\n,\n        \nvalue\n: \n-1\n,\n        \nmetadata\n: {\n            \nunit\n: {\n                \ntype\n: \nurn:oc:dataType:string\n,\n                \nvalue\n: \nurn:oc:uom:index\n\n            },\n            \ndescription\n: {\n                \ntype\n: \nurn:oc:dataType:string\n,\n                \nvalue\n: \nThe reputation scores vary from 0 to 1. -1 means that there is not scores already calculated\n\n            }\n        }\n    }\n}\n\n\n\n\nTaxi stops.\n\n\nThese assets provide real time information about taxi availability in each particular stop, based on the information provided by the fleet management systems deployed by the two taxi associations.\n\n\n{\n    \nid\n: \nurn:oc:entity:santander:transport:taxis:stop:1\n,\n    \ntype\n: \nurn:oc:entityType:taxis:stop\n,\n    \nTimeInstant\n: {\n        \ntype\n: \nISO8601\n,\n        \nvalue\n: \n2016-10-05T00:01:01.000Z\n,\n        \nmetadata\n: {}\n    },\n    \nlocation\n: {\n        \ntype\n: \ngeo:point\n,\n        \nvalue\n: \n-3.7886569,43.463448\n,\n        \nmetadata\n: {}\n    },\n    \nname\n: {\n        \ntype\n: \nurn:oc:attributeType:taxis:stops:name\n,\n        \nvalue\n: \nSAN MARTIN\n,\n        \nmetadata\n: {}\n    }\n}\n\n\n\n\nBike stops.\n\n\nA set of 16 assets has been created, providing information about the number of available public-hire bikes and also the number of places to return such bikes.\n\n\n{\n    \nid\n: \nurn:oc:entity:santander:transport:bikestation:12\n,\n    \ntype\n: \nurn:oc:entityType:bikeStop\n,\n    \nTimeInstant\n: {\n        \ntype\n: \nISO8601\n,\n        \nvalue\n: \n2017-01-09T09:26:13.000Z\n,\n        \nmetadata\n: {}\n    },\n    \ndatasource\n: {\n        \ntype\n: \nurn:oc:attributeType:datasource\n,\n        \nvalue\n: \nhttp://mu.tlmat.unican.es:8098/\n,\n        \nmetadata\n: {\n            \ndatasourceInternal\n: {\n                \ntype\n: \nurn:oc:dataType:boolean\n,\n                \nvalue\n: \nboolean\n\n            }\n        }\n    },\n    \nfeeSpaces\n: {\n        \ntype\n: \nurn:oc:attributeType:freeSpaces\n,\n        \nvalue\n: 9,\n        \nmetadata\n: {}\n    },\n    \nfreeBikes\n: {\n        \ntype\n: \nurn:oc:attributeType:freeBikes\n,\n        \nvalue\n: 6,\n        \nmetadata\n: {}\n    },\n    \nlocation\n: {\n        \ntype\n: \ngeo:point\n,\n        \nvalue\n: \n-3.8248012423,43.4579662522\n,\n        \nmetadata\n: {}\n    },\n    \nname\n: {\n        \ntype\n: \nurn:oc:attributeType:name\n,\n        \nvalue\n: \n012_CALLE ALTA\n,\n        \nmetadata\n: {}\n    },\n    \norigin\n: {\n        \ntype\n: \nurn:oc:attributeType:origin\n,\n        \nvalue\n: \nTusBic\n,\n        \nmetadata\n: {}\n    },\n    \nreputation\n: {\n        \ntype\n: \nurn:oc:attributeType:reputation\n,\n        \nvalue\n: -1,\n        \nmetadata\n: {\n            \nunit\n: {\n                \ntype\n: \nurn:oc:dataType:string\n,\n                \nvalue\n: \nurn:oc:uom:index\n\n            },\n            \ndescription\n: {\n                \ntype\n: \nurn:oc:dataType:string\n,\n                \nvalue\n: \nThe reputation scores vary from 0 to 1. -1 means that there is not scores already calculated\n\n            }\n        }\n    }\n}\n\n\n\n\nDistricts and sections\n\n\nDistricts\n\n\n{\n    \nid\n: \nurn:oc:entity:santander:districts:D03\n,\n    \ntype\n: \nurn:oc:entityType:district\n,\n    \nTimeInstant\n: {\n        \ntype\n: \nISO8601\n,\n        \nvalue\n: \n2017-01-04T11:16:41.000Z\n,\n        \nmetadata\n: {}\n    },\n    \nlocation\n: {\n        \ntype\n: \ngeo:json\n,\n        \nvalue\n: {\n            \ntype\n: \nPolygon\n,\n            \ncoordinates\n: [\n                [\n                    [-3.79124, 43.4685],\n                    [-3.79199, 43.4686],\n                    [-3.79221, 43.4686],\n                    [-3.79238, 43.4686],\n                    [-3.79255, 43.4686],\n                    [-3.79263, 43.4686],\n                    [-3.79294, 43.4685],\n                    [-3.79343, 43.4685],\n                    [-3.79366, 43.4685],\n                    [-3.79414, 43.4685],\n                    [-3.79476, 43.4684],\n                    [-3.79521, 43.4684],\n                    [-3.79543, 43.4684],\n                    [-3.7956, 43.4684],\n                    [-3.7958, 43.4684],\n                    [-3.79623, 43.4685],\n                    [-3.79653, 43.4685],\n                    [-3.79665, 43.4685],\n                    [-3.79679, 43.4685],\n                    [-3.79701, 43.4685],\n                    [-3.79723, 43.4685],\n                    [-3.79752, 43.4685],\n                    [-3.79795, 43.4684],\n                    [-3.79886, 43.4684],\n                    [-3.79928, 43.4683],\n                    [-3.79947, 43.4683],\n                    [-3.79966, 43.4683],\n                    [-3.79994, 43.4682],\n                    [-3.80002, 43.4681],\n                    [-3.80114, 43.4678],\n                    [-3.80134, 43.4678],\n                    [-3.80174, 43.4677],\n                    [-3.80205, 43.4676],\n                    [-3.80219, 43.4676],\n                    [-3.80233, 43.4675],\n                    [-3.80265, 43.4675],\n                    [-3.80307, 43.4675],\n                    [-3.80348, 43.4675],\n                    [-3.80393, 43.4675],\n                    [-3.80426, 43.4675],\n                    [-3.80437, 43.4675],\n                    [-3.80476, 43.4675],\n                    [-3.80507, 43.4674],\n                    [-3.80528, 43.4674],\n                    [-3.80539, 43.4674],\n                    [-3.80571, 43.4674],\n                    [-3.80598, 43.4674],\n                    [-3.80612, 43.4673],\n                    [-3.80624, 43.4673],\n                    [-3.80653, 43.4673],\n                    [-3.80678, 43.4672],\n                    [-3.80692, 43.4672],\n                    [-3.80706, 43.4672],\n                    [-3.80719, 43.4672],\n                    [-3.80732, 43.4672],\n                    [-3.80794, 43.4673],\n                    [-3.80799, 43.4673],\n                    [-3.80818, 43.4674],\n                    [-3.80833, 43.4674],\n                    [-3.80909, 43.4675],\n                    [-3.80947, 43.4676],\n                    [-3.80973, 43.4676],\n                    [-3.80992, 43.4676],\n                    [-3.80995, 43.4676],\n                    [-3.81028, 43.4676],\n                    [-3.81341, 43.4676],\n                    [-3.81353, 43.4676],\n                    [-3.81377, 43.4676],\n                    [-3.81385, 43.4676],\n                    [-3.81372, 43.4675],\n                    [-3.81347, 43.4674],\n                    [-3.812, 43.4666],\n                    [-3.81198, 43.4666],\n                    [-3.81197, 43.4666],\n                    [-3.81197, 43.4665],\n                    [-3.81199, 43.4665],\n                    [-3.81202, 43.4665],\n                    [-3.81206, 43.4665],\n                    [-3.8121, 43.4665],\n                    [-3.81278, 43.4667],\n                    [-3.81284, 43.4667],\n                    [-3.81291, 43.4667],\n                    [-3.81296, 43.4666],\n                    [-3.813, 43.4666],\n                    [-3.81303, 43.4666],\n                    [-3.81303, 43.4665],\n                    [-3.81301, 43.4664],\n                    [-3.81297, 43.4664],\n                    [-3.81294, 43.4664],\n                    [-3.8129, 43.4664],\n                    [-3.8128, 43.4663],\n                    [-3.81222, 43.4662],\n                    [-3.81213, 43.4662],\n                    [-3.81204, 43.4662],\n                    [-3.81195, 43.4662],\n                    [-3.81185, 43.4662],\n                    [-3.81169, 43.4662],\n                    [-3.81162, 43.4662],\n                    [-3.81156, 43.4662],\n                    [-3.81153, 43.4661],\n                    [-3.81153, 43.4661],\n                    [-3.81156, 43.466],\n                    [-3.8116, 43.466],\n                    [-3.81166, 43.466],\n                    [-3.8119, 43.466],\n                    [-3.81195, 43.466],\n                    [-3.81199, 43.466],\n                    [-3.81202, 43.4659],\n                    [-3.81203, 43.4659],\n                    [-3.81202, 43.4659],\n                    [-3.812, 43.4658],\n                    [-3.81177, 43.4654],\n                    [-3.81161, 43.4652],\n                    [-3.81151, 43.465],\n                    [-3.81148, 43.465],\n                    [-3.81141, 43.4649],\n                    [-3.81126, 43.4647],\n                    [-3.81112, 43.4646],\n                    [-3.81106, 43.4645],\n                    [-3.811, 43.4644],\n                    [-3.81098, 43.4644],\n                    [-3.81101, 43.4643],\n                    [-3.81133, 43.4632],\n                    [-3.81133, 43.4632],\n                    [-3.81063, 43.4632],\n                    [-3.81069, 43.4637],\n                    [-3.81007, 43.4637],\n                    [-3.81005, 43.464],\n                    [-3.81002, 43.464],\n                    [-3.80997, 43.464],\n                    [-3.80877, 43.464],\n                    [-3.80875, 43.4637],\n                    [-3.80828, 43.4637],\n                    [-3.8078, 43.4637],\n                    [-3.80769, 43.4637],\n                    [-3.80621, 43.4637],\n                    [-3.80548, 43.4638],\n                    [-3.80546, 43.4638],\n                    [-3.80446, 43.4638],\n                    [-3.80418, 43.4639],\n                    [-3.804, 43.4639],\n                    [-3.80381, 43.4639],\n                    [-3.80375, 43.4639],\n                    [-3.80347, 43.464],\n                    [-3.80314, 43.4641],\n                    [-3.80287, 43.4641],\n                    [-3.80269, 43.4642],\n                    [-3.80265, 43.4642],\n                    [-3.80246, 43.4642],\n                    [-3.80235, 43.4642],\n                    [-3.80211, 43.4642],\n                    [-3.80185, 43.4643],\n                    [-3.80166, 43.4643],\n                    [-3.80133, 43.4643],\n                    [-3.80115, 43.4643],\n                    [-3.80103, 43.4643],\n                    [-3.80087, 43.4643],\n                    [-3.80073, 43.4643],\n                    [-3.8007, 43.4643],\n                    [-3.80025, 43.4643],\n                    [-3.79985, 43.4643],\n                    [-3.79958, 43.4644],\n                    [-3.79912, 43.4644],\n                    [-3.79861, 43.4644],\n                    [-3.79818, 43.4645],\n                    [-3.79791, 43.4645],\n                    [-3.79768, 43.4646],\n                    [-3.79738, 43.4646],\n                    [-3.7971, 43.4647],\n                    [-3.79683, 43.4647],\n                    [-3.79688, 43.4652],\n                    [-3.79682, 43.4653],\n                    [-3.79671, 43.4654],\n                    [-3.79646, 43.4654],\n                    [-3.796, 43.4654],\n                    [-3.79584, 43.4655],\n                    [-3.79571, 43.4655],\n                    [-3.79553, 43.4656],\n                    [-3.79536, 43.4656],\n                    [-3.79494, 43.4657],\n                    [-3.79473, 43.4658],\n                    [-3.79459, 43.4659],\n                    [-3.79435, 43.4659],\n                    [-3.79362, 43.466],\n                    [-3.79269, 43.4661],\n                    [-3.79255, 43.4661],\n                    [-3.7917, 43.4662],\n                    [-3.79167, 43.4662],\n                    [-3.79078, 43.4663],\n                    [-3.78731, 43.4665],\n                    [-3.7871, 43.4665],\n                    [-3.78709, 43.4666],\n                    [-3.78715, 43.467],\n                    [-3.78722, 43.4672],\n                    [-3.78734, 43.4674],\n                    [-3.78754, 43.4677],\n                    [-3.78776, 43.4679],\n                    [-3.78798, 43.468],\n                    [-3.7904, 43.4683],\n                    [-3.79124, 43.4685]\n                ]\n            ]\n        },\n        \nmetadata\n: {}\n    }\n}\n\n\n\n\nSections\n\n\n{\n    \nid\n: \nurn:oc:entity:santander:sections:D07:S22\n,\n    \ntype\n: \nsection\n,\n    \nTimeInstant\n: {\n        \ntype\n: \nISO8601\n,\n        \nvalue\n: \n2016-10-05T13:21:07.000Z\n,\n        \nmetadata\n: {}\n    },\n    \nlocation\n: {\n        \ntype\n: \ngeo:json\n,\n        \nvalue\n: {\n            \ntype\n: \nPolygon\n,\n            \ncoordinates\n: [\n                [\n                    [-3.81032, 43.4696],\n                    [-3.81078, 43.4695],\n                    [-3.81128, 43.4694],\n                    [-3.81175, 43.4694],\n                    [-3.81226, 43.4693],\n                    [-3.81301, 43.4691],\n                    [-3.81383, 43.4689],\n                    [-3.81385, 43.4689],\n                    [-3.81385, 43.4689],\n                    [-3.81387, 43.4689],\n                    [-3.81353, 43.4686],\n                    [-3.81347, 43.4686],\n                    [-3.81342, 43.4685],\n                    [-3.8134, 43.4685],\n                    [-3.81339, 43.4685],\n                    [-3.81339, 43.4684],\n                    [-3.81341, 43.4679],\n                    [-3.8134, 43.4677],\n                    [-3.81341, 43.4676],\n                    [-3.81028, 43.4676],\n                    [-3.80995, 43.4676],\n                    [-3.80992, 43.4676],\n                    [-3.8102, 43.4684],\n                    [-3.81022, 43.4685],\n                    [-3.81021, 43.4686],\n                    [-3.81017, 43.4687],\n                    [-3.81011, 43.4688],\n                    [-3.80993, 43.4689],\n                    [-3.8098, 43.4691],\n                    [-3.80972, 43.4691],\n                    [-3.80967, 43.4692],\n                    [-3.80964, 43.4692],\n                    [-3.80964, 43.4692],\n                    [-3.80965, 43.4692],\n                    [-3.80966, 43.4692],\n                    [-3.80973, 43.4693],\n                    [-3.80983, 43.4694],\n                    [-3.80989, 43.4695],\n                    [-3.80991, 43.4696],\n                    [-3.81002, 43.4696],\n                    [-3.81032, 43.4696]\n                ]\n            ]\n        },\n        \nmetadata\n: {}\n    }\n}\n\n\n\n\nPace of the city events\n\n\nEvents happening in the city that have been generated by citizens using the apps to report them. Mainly, PulsodelaCiudad and Cuida Santander Apps\n\n\n{\n    \nid\n: \nurn:oc:entity:santander:paceofthecity:event:7975\n,\n    \ntype\n: \ncity:event\n,\n    \nTimeInstant\n: {\n        \ntype\n: \nISO8601\n,\n        \nvalue\n: \n2016-10-22T08:59:59.000Z\n,\n        \nmetadata\n: {}\n    },\n    \neventText\n: {\n        \ntype\n: \nurn:oc:attributeType:event:description\n,\n        \nvalue\n: \nFaltan dos bolardos que se han partido.  han quedado trozos por encima del raso de la acera,  con lo cual puede haber cortadas en los pies.\n,\n        \nmetadata\n: {}\n    },\n    \neventTitle\n: {\n        \ntype\n: \nurn:oc:attributeType:event:name\n,\n        \nvalue\n: null,\n        \nmetadata\n: {}\n    },\n    \neventType\n: {\n        \ntype\n: \nurn:oc:attributeType:event:type\n,\n        \nvalue\n: \nVIA_PUBLICA\n,\n        \nmetadata\n: {}\n    },\n    \nimageURL\n: {\n        \ntype\n: \nurn:oc:attributeType:imageURL\n,\n        \nvalue\n: \nhttp://farm9.staticflickr.com/8268/29711271953_c1b018c526.jpg\n,\n        \nmetadata\n: {}\n    },\n    \nlocation\n: {\n        \ntype\n: \ngeo:point\n,\n        \nvalue\n: \n-3.7963962,43.4701798\n,\n        \nmetadata\n: {}\n    }\n}\n\n\n\n\nTourism:Points of Interest\n\n\nBeaches\n\n\n{\n    \nid\n: \nurn:oc:santander:tourism:poi:beach:6\n,\n    \ntype\n: \npoi:park\n,\n    \nTimeInstant\n: {\n        \ntype\n: \nISO8601\n,\n        \nvalue\n: \n2016-10-05T13:13:51.000Z\n,\n        \nmetadata\n: {}\n    },\n    \ndescription:long\n: {\n        \ntype\n: \nurn:oc:attributeType:description\n,\n        \nvalue\n: \n,\n        \nmetadata\n: {}\n    },\n    \ndescription:short\n: {\n        \ntype\n: \nurn:oc:attributeType:description\n,\n        \nvalue\n: \nDebe su nombre a la roca con esta forma que hay en la orilla\n,\n        \nmetadata\n: {}\n    },\n    \nimageURL\n: {\n        \ntype\n: \nurn:oc:attributeType:imageURL\n,\n        \nvalue\n: \nhttp://ra.smartsantander.eu/images/playas/camello.jpg\n,\n        \nmetadata\n: {}\n    },\n    \nlocation\n: {\n        \ntype\n: \ngeo:point\n,\n        \nvalue\n: \n-3.7752789259,43.4694983127\n,\n        \nmetadata\n: {}\n    },\n    \nname\n: {\n        \ntype\n: \nurn:oc:attributeType:name\n,\n        \nvalue\n: \nPlaya de El Camello\n,\n        \nmetadata\n: {}\n    }\n}\n\n\n\n\nPark and gardens\n\n\n{\n    \nid\n: \nurn:oc:santander:tourism:poi:park:9\n,\n    \ntype\n: \npoi:park\n,\n    \nTimeInstant\n: {\n        \ntype\n: \nISO8601\n,\n        \nvalue\n: \n2016-10-05T13:13:51.000Z\n,\n        \nmetadata\n: {}\n    },\n    \ndescription:short\n: {\n        \ntype\n: \nurn:oc:attributeType:description\n,\n        \nvalue\n: \n175.000 m2 de parque con ejemplares arb\u00f3reos destacados \n,\n        \nmetadata\n: {}\n    },\n    \nimageURL\n: {\n        \ntype\n: \nurn:oc:attributeType:imageURL\n,\n        \nvalue\n: \nhttp://ra.smartsantander.eu/images/parques/ParqueMorales.jpg\n,\n        \nmetadata\n: {}\n    },\n    \nlocation\n: {\n        \ntype\n: \ngeo:point\n,\n        \nvalue\n: \n-3.8407950000,43.4557850000\n,\n        \nmetadata\n: {}\n    },\n    \nname\n: {\n        \ntype\n: \nurn:oc:attributeType:name\n,\n        \nvalue\n: \nParque Dr Morales\n,\n        \nmetadata\n: {}\n    }\n}\n\n\n\n\nShops\n\n\nMore than 2000 assets have been created based on the information registered at Comercio Santander initiative. The list of assets is updated every day, so that, it can change during the experimentation period. \n\n\n{\n    \nid\n: \nurn:oc:santander:commerce:shops:2844\n,\n    \ntype\n: \npoi:shop\n,\n    \nTimeInstant\n: {\n        \ntype\n: \nISO8601\n,\n        \nvalue\n: \n2017-01-02T11:49:32.000Z\n,\n        \nmetadata\n: {}\n    },\n    \ndescription\n: {\n        \ntype\n: \nurn:oc:attributeType:description\n,\n        \nvalue\n: \nModa y complementos marca propia para mujer joven.\n,\n        \nmetadata\n: {}\n    },\n    \ndescription:other\n: {\n        \ntype\n: \nurn:oc:attributeType:description\n,\n        \nvalue\n: \n,\n        \nmetadata\n: {}\n    },\n    \nimageURL\n: {\n        \ntype\n: \nurn:oc:attributeType:imageURL\n,\n        \nvalue\n: \nhttp://www.comerciosantander.com/imagenes/Comercios/ED407B6E-AB2E-E9B4-BD50-FC012F619733.jpg/resize/480/640/\n,\n        \nmetadata\n: {}\n    },\n    \nlocation\n: {\n        \ntype\n: \ngeo:point\n,\n        \nvalue\n: \n-3.812214499999982,43.4620188\n,\n        \nmetadata\n: {}\n    },\n    \nname\n: {\n        \ntype\n: \nurn:oc:attributeType:name\n,\n        \nvalue\n: \nSHIMAI\n,\n        \nmetadata\n: {}\n    }\n}\n\n\n\n\nCultural agenda events\n\n\nReal time information to Santander Auna Events. \n\n\n{\n    \nid\n: \nurn:oc:entity:santander:culture:auna:23269\n,\n    \ntype\n: \nagenda:event\n,\n    \nTimeInstant\n: {\n        \ntype\n: \nISO8601\n,\n        \nvalue\n: \n2017-01-02T01:50:41.000Z\n,\n        \nmetadata\n: {}\n    },\n    \ncategory\n: {\n        \ntype\n: \nurn:oc:attributeType:decription\n,\n        \nvalue\n: \nFormaci\u00f3n/Talleres\n,\n        \nmetadata\n: {}\n    },\n    \ndate\n: {\n        \ntype\n: \nurn:oc:attributeType:event:date\n,\n        \nvalue\n: \nLunes 02/01/2017, todo el d\u00eda. \n,\n        \nmetadata\n: {}\n    },\n    \ndescription\n: {\n        \ntype\n: \nurn:oc:attributeType:description\n,\n        \nvalue\n: \nFestival de cine independiente dirigido\u00c2 por el c\u00c3\u00a1ntabro Luis Bezeta con videocreaci\u00c3\u00b3n, ficci\u00c3\u00b3n,\u00c2 animaci\u00c3\u00b3n, performance y conciertos\n,\n        \nmetadata\n: {}\n    },\n    \nimageURL\n: {\n        \ntype\n: \nurn:oc:attributeType:url\n,\n        \nvalue\n: \nhttp://www.fundacionsantandercreativa.com/ekh2983gd29837gt_uploads/web_2/eventos_images/final/23269.jpg\n,\n        \nmetadata\n: {}\n    },\n    \nlink\n: {\n        \ntype\n: \nurn:oc:attributeType:url\n,\n        \nvalue\n: \nhttp://www.fundacionsantandercreativa.com/mobile/index.php?evento%3Dinscripciones-para-el-curso-de-modelado-en-3d-con-blender\n,\n        \nmetadata\n: {}\n    },\n    \nname\n: {\n        \ntype\n: \nurn:oc:attributeType:name\n,\n        \nvalue\n: \nInscripciones para el curso de Modelado en 3D con Blender\n,\n        \nmetadata\n: {}\n    },\n    \nsubname\n: {\n        \ntype\n: \nurn:oc:attributeType:name\n,\n        \nvalue\n: \nIV Picnick Festival\n,\n        \nmetadata\n: {}\n    }\n}\n\n\n\n\nNews in the city\n\n\nNews generated by the different areas of governance within the municipality. \n\n\n{\n    \nid\n: \nurn:oc:entity:santander:news:c35672836c31190ad2badb057cee6ad4\n,\n    \ntype\n: \nurn:oc:entityType:news\n,\n    \ndate\n: {\n        \ntype\n: \nurn:oc:attributeType:date\n,\n        \nvalue\n: \n08-09-2016 15:41\n,\n        \nmetadata\n: {}\n    },\n    \ndescription\n: {\n        \ntype\n: \nurn:oc:attributeType:description\n,\n        \nvalue\n: \nLa imagen m\u00e1s ic\u00f3nica de la nueva exposici\u00f3n del centro es la fotograf\u00eda que se hicieron un grupo de artistas espa\u00f1oles en Roma con motivo de la visita que les hizo el escritor Pedro Antonio de Alarc\u00f3n en las Navidades de 1860\n,\n        \nmetadata\n: {}\n    },\n    \nnews:title\n: {\n        \ntype\n: \nurn:oc:attributeType:title\n,\n        \nvalue\n: \nEl CDIS recorre el proceso de formaci\u00f3n del artista a trav\u00e9s de la figura de Di\u00f3scoro Puebla\n,\n        \nmetadata\n: {}\n    },\n    \nurl\n: {\n        \ntype\n: \nurn:oc:attributeType:url\n,\n        \nvalue\n: \nhttp://santander.es/noticia/cultura/cdis-recorre-proceso-formacion-del-artista-traves-figura-diascoro-puebla\n,\n        \nmetadata\n: {}\n    }\n}\n\n\n\n\nEnvironmental sensors\n\n\nMobile Nodes\n\n\n{\n    \nid\n: \nurn:oc:entity:santander:environmental:mobile:3028\n,\n    \ntype\n: \nurn:oc:entityType:mobileSensor\n,\n    \nTimeInstant\n: {\n        \ntype\n: \nISO8601\n,\n        \nvalue\n: \n2017-01-09T19:26:35.000Z\n,\n        \nmetadata\n: {}\n    },\n    \nchemicalAgentAtmosphericConcentration:CO\n: {\n        \ntype\n: \nurn:oc:attributeType:chemicalAgentAtmosphericConcentration:CO\n,\n        \nvalue\n: 0.1,\n        \nmetadata\n: {}\n    },\n    \nchemicalAgentAtmosphericConcentration:O3\n: {\n        \ntype\n: \nurn:oc:attributeType:chemicalAgentAtmosphericConcentration:O3\n,\n        \nvalue\n: 79,\n        \nmetadata\n: {}\n    },\n    \nchemicalAgentAtmosphericConcentration:airParticles\n: {\n        \ntype\n: \nurn:oc:attributeType:chemicalAgentAtmosphericConcentration:airParticles\n,\n        \nvalue\n: 0.09,\n        \nmetadata\n: {}\n    },\n    \ndatasource\n: {\n        \ntype\n: \nurn:oc:attributeType:datasource\n,\n        \nvalue\n: \nhttp://mu.tlmat.unican.es:8098/\n,\n        \nmetadata\n: {\n            \ndatasourceInternal\n: {\n                \ntype\n: \nurn:oc:dataType:boolean\n,\n                \nvalue\n: \nboolean\n\n            }\n        }\n    },\n    \ndirection:heading\n: {\n        \ntype\n: \nurn:oc:attributeType:direction:heading\n,\n        \nvalue\n: 87,\n        \nmetadata\n: {}\n    },\n    \nlocation\n: {\n        \ntype\n: \ngeo:point\n,\n        \nvalue\n: \n-3.811630,43.461900\n,\n        \nmetadata\n: {}\n    },\n    \nmileage:total\n: {\n        \ntype\n: \nurn:oc:attributeType:mileage:total\n,\n        \nvalue\n: 18825,\n        \nmetadata\n: {}\n    },\n    \norigin\n: {\n        \ntype\n: \nurn:oc:attributeType:origin\n,\n        \nvalue\n: \nSmartSantander\n,\n        \nmetadata\n: {}\n    },\n    \nposition:altitude\n: {\n        \ntype\n: \nurn:oc:attributeType:position:altitude\n,\n        \nvalue\n: 13,\n        \nmetadata\n: {}\n    },\n    \nrelativeHumidity\n: {\n        \ntype\n: \nurn:oc:attributeType:relativeHumidity\n,\n        \nvalue\n: 46,\n        \nmetadata\n: {}\n    },\n    \nreputation\n: {\n        \ntype\n: \nurn:oc:attributeType:reputation\n,\n        \nvalue\n: -1,\n        \nmetadata\n: {\n            \nunit\n: {\n                \ntype\n: \nurn:oc:dataType:string\n,\n                \nvalue\n: \nurn:oc:uom:index\n\n            },\n            \ndescription\n: {\n                \ntype\n: \nurn:oc:dataType:string\n,\n                \nvalue\n: \nThe reputation scores vary from 0 to 1. -1 means that there is not scores already calculated\n\n            }\n        }\n    },\n    \nspeed:instantaneous\n: {\n        \ntype\n: \nurn:oc:attributeType:speed:instantaneous\n,\n        \nvalue\n: 27,\n        \nmetadata\n: {}\n    },\n    \ntemperature:ambient\n: {\n        \ntype\n: \nurn:oc:attributeType:temperature:ambient\n,\n        \nvalue\n: 10.7,\n        \nmetadata\n: {}\n    }\n}\n\n\n\n\nNoise repeaters\n\n\n{\n    \nid\n: \nurn:oc:entity:santander:environmental:fixed:737\n,\n    \ntype\n: \nurn:oc:entityType:repeater:noise\n,\n    \nTimeInstant\n: {\n        \ntype\n: \nISO8601\n,\n        \nvalue\n: \n2017-01-02T11:01:06.000Z\n,\n        \nmetadata\n: {}\n    },\n    \ndatasource\n: {\n        \ntype\n: \nurn:oc:attributeType:datasource\n,\n        \nvalue\n: \nhttp://mu.tlmat.unican.es:8098/\n,\n        \nmetadata\n: {\n            \ndatasourceInternal\n: {\n                \ntype\n: \nurn:oc:dataType:boolean\n,\n                \nvalue\n: \nboolean\n\n            }\n        }\n    },\n    \nlocation\n: {\n        \ntype\n: \ngeo:point\n,\n        \nvalue\n: \n-3.81289,43.45487\n,\n        \nmetadata\n: {}\n    },\n    \norigin\n: {\n        \ntype\n: \nurn:oc:attributeType:origin\n,\n        \nvalue\n: \nSmartSantander\n,\n        \nmetadata\n: {}\n    },\n    \nreputation\n: {\n        \ntype\n: \nurn:oc:attributeType:reputation\n,\n        \nvalue\n: \n-1\n,\n        \nmetadata\n: {\n            \nunit\n: {\n                \ntype\n: \nurn:oc:dataType:string\n,\n                \nvalue\n: \nurn:oc:uom:index\n\n            },\n            \ndescription\n: {\n                \ntype\n: \nurn:oc:dataType:string\n,\n                \nvalue\n: \nThe reputation scores vary from 0 to 1. -1 means that there is not scores already calculated\n\n            }\n        }\n    },\n    \nsoundPressureLevel:ambient\n: {\n        \ntype\n: \nurn:oc:attributeType:soundPressureLevel:ambient\n,\n        \nvalue\n: \n50.50\n,\n        \nmetadata\n: {}\n    }\n }\n\n\n\n\nluminosity repeaters\n\n\n{\n    \nid\n: \nurn:oc:entity:santander:environmental:fixed:680\n,\n    \ntype\n: \nurn:oc:entityType:repeater:luminosity\n,\n    \nTimeInstant\n: {\n        \ntype\n: \nISO8601\n,\n        \nvalue\n: \n2013-04-05T11:20:19.000Z\n,\n        \nmetadata\n: {}\n    },\n    \ndatasource\n: {\n        \ntype\n: \nurn:oc:attributeType:datasource\n,\n        \nvalue\n: \nhttp://mu.tlmat.unican.es:8098/\n,\n        \nmetadata\n: {\n            \ndatasourceInternal\n: {\n                \ntype\n: \nurn:oc:dataType:boolean\n,\n                \nvalue\n: \nboolean\n\n            }\n        }\n    },\n    \nilluminance\n: {\n        \ntype\n: \nurn:oc:attributeType:illuminance\n,\n        \nvalue\n: 3,\n        \nmetadata\n: {}\n    },\n    \nlocation\n: {\n        \ntype\n: \ngeo:point\n,\n        \nvalue\n: \n-3.82052,43.46023\n,\n        \nmetadata\n: {}\n    },\n    \norigin\n: {\n        \ntype\n: \nurn:oc:attributeType:origin\n,\n        \nvalue\n: \nSmartSantander\n,\n        \nmetadata\n: {}\n    },\n    \nreputation\n: {\n        \ntype\n: \nurn:oc:attributeType:reputation\n,\n        \nvalue\n: \n-1\n,\n        \nmetadata\n: {\n            \nunit\n: {\n                \ntype\n: \nurn:oc:dataType:string\n,\n                \nvalue\n: \nurn:oc:uom:index\n\n            },\n            \ndescription\n: {\n                \ntype\n: \nurn:oc:dataType:string\n,\n                \nvalue\n: \nThe reputation scores vary from 0 to 1. -1 means that there is not scores already calculated\n\n            }\n        }\n    },\n    \ntemperature:ambient\n: {\n        \ntype\n: \nurn:oc:attributeType:temperature:ambient\n,\n        \nvalue\n: 4,\n        \nmetadata\n: {}\n    }\n}", 
            "title": "Federated Data Assets"
        }, 
        {
            "location": "/FederatedDataAssets/#federated-data-assets", 
            "text": "....", 
            "title": "Federated Data Assets"
        }, 
        {
            "location": "/FederatedDataAssets/#aarhus", 
            "text": "", 
            "title": "Aarhus"
        }, 
        {
            "location": "/FederatedDataAssets/#london", 
            "text": "", 
            "title": "London"
        }, 
        {
            "location": "/FederatedDataAssets/#london-borough-profiles", 
            "text": "Greater London is divided into 33 Boroughs. For each Borough we gather aggregate statistics related to mobility, air quality and communities. Some statistics are based on census that is collected every 10 years, while other statistics are updated more frequently. Example statistics include population density, average income, average house price, fraction of greenspace and average number of cars per household. The data is gathered from the  London Datastore ,  Public Health England  and other sources.  Example:  {\n     id :  urn:oc:entity:london:districtProfile:uk.gov.london:E09000013 ,\n     type :  urn:oc:entityType:districtProfile ,\n     geometry : {\n         type :  oc:geo:json ,\n         value : {\n             coordinates : [\n                [\n                    [\n                        [-0.2333, 51.532],\n                        [-0.2456, 51.4908],\n                        [-0.203, 51.4933],\n                        [-0.2333, 51.532]\n                    ]\n                ]\n            ],\n             type :  MultiPolygon \n        },\n         metadata : {}\n    },\n     location : {\n         type :  geo:point ,\n         value :  -0.22078893731921054,51.49501040208028 ,\n         metadata : {}\n    },\n     origin : {\n         type :  urn:oc:attributeType:origin ,\n         value :  The London Borough profile is a combination of data from the London Datastore and Public Health England. ,\n         metadata : {\n             unit : {\n                 type :  NOT_APPLIED ,\n                 value :  NOT_APPLIED \n            },\n             urls : {\n                 type :  url ,\n                 value :  http://data.london.gov.uk/dataset/london-borough-profiles,http://data.london.gov.uk/dataset/walking-and-cycling-borough,http://www.noo.org.uk/visualisation \n            }\n        }\n    },\n     carbonEmission : {\n         type :  urn:oc:attributeType:carbonEmission ,\n         value :  971.336623467994 ,\n         metadata : {\n             unit : {\n                 type :  urn:oc:uom:kilotonne ,\n                 value :  kilotonne \n            },\n             TimeInstant : {\n                 type :  urn:oc:attributeType:ISO8601 ,\n                 value :  2013-12-31T23:59:59 \n            }\n        }\n    },\n     cyclingFrequency : {\n         type :  urn:oc:attributeType:cyclingFrequency ,\n         value :  19.882866745828885 ,\n         metadata : {\n             unit : {\n                 type :  urn:oc:uom:percent ,\n                 value :  percent \n            },\n             TimeInstant : {\n                 type :  urn:oc:attributeType:ISO8601 ,\n                 value :  2014-12-31T23:59:59 \n            }\n        }\n    },\n     greenspace : {\n         type :  urn:oc:attributeType:greenspace ,\n         value :  19.1 ,\n         metadata : {\n             unit : {\n                 type :  urn:oc:uom:percent ,\n                 value :  percent \n            },\n             TimeInstant : {\n                 type :  urn:oc:attributeType:ISO8601 ,\n                 value :  2005-12-31T23:59:59 \n            }\n        }\n    },\n     housePrice : {\n         type :  urn:oc:attributeType:housePrice ,\n         value :  661000.0 ,\n         metadata : {\n             unit : {\n                 type :  urn:oc:uom:monetaryValuePounds ,\n                 value :  monetayValuePounds \n            },\n             TimeInstant : {\n                 type :  urn:oc:attributeType:ISO8601 ,\n                 value :  2014-12-31T23:59:59 \n            }\n        }\n    },\n     householdCarOwnership : {\n         type :  urn:oc:attributeType:householdCarOwnership ,\n         value :  0.544025313314307 ,\n         metadata : {\n             unit : {\n                 type :  urn:oc:uom:count ,\n                 value :  count \n            },\n             TimeInstant : {\n                 type :  urn:oc:attributeType:ISO8601 ,\n                 value :  2011-12-31T23:59:59 \n            }\n        }\n    },\n     householdIncome : {\n         type :  urn:oc:attributeType:householdIncome ,\n         value :  62910.0 ,\n         metadata : {\n             unit : {\n                 type :  urn:oc:uom:monetaryValuePounds ,\n                 value :  monetayValuePounds \n            },\n             TimeInstant : {\n                 type :  urn:oc:attributeType:ISO8601 ,\n                 value :  2013-12-31T23:59:59 \n            }\n        }\n    },\n     obesity : {\n         type :  urn:oc:attributeType:obesity ,\n         value :  14.918342434625048 ,\n         metadata : {\n             unit : {\n                 type :  urn:oc:uom:percent ,\n                 value :  percent \n            },\n             TimeInstant : {\n                 type :  urn:oc:attributeType:ISO8601 ,\n                 value :  2014-12-31T23:59:59 \n            }\n        }\n    },\n     populationDensity : {\n         type :  urn:oc:attributeType:populationDensity ,\n         value :  110.80989224363077 ,\n         metadata : {\n             unit : {\n                 type :  urn:oc:uom:peoplePerHectare ,\n                 value :  peoplePerHectare \n            },\n             TimeInstant : {\n                 type :  urn:oc:attributeType:ISO8601 ,\n                 value :  2015-12-31T23:59:59 \n            }\n        }\n    },\n     walkingFrequency : {\n         type :  urn:oc:attributeType:walkingFrequency ,\n         value :  61.00442050708806 ,\n         metadata : {\n             unit : {\n                 type :  urn:oc:uom:percent ,\n                 value :  percent \n            },\n             TimeInstant : {\n                 type :  urn:oc:attributeType:ISO8601 ,\n                 value :  2014-12-31T23:59:59 \n            }\n        }\n    }\n}  Note: The area attribute has been simplified in this example due to space reasons.", 
            "title": "London Borough Profiles"
        }, 
        {
            "location": "/FederatedDataAssets/#london-traffic-counts", 
            "text": "In October every year the  Department for Transport  performs an extensive  traffic count  throughout thousands for locations in England. The traffic counts are presented as daily averages of different vehicle types (bicycles, motorcycles, cars, vans, trucks, etc.) that pass through a certain point.  Example:  {\n     id :  urn:oc:entity:london:trafficCount:uk.gov.dft:DfT-TrafficCounter-6000 ,\n     type :  urn:oc:entityType:trafficstats ,\n     location : {\n         type :  geo:point ,\n         value :  -0.23795282516501054,51.587519079277754 ,\n         metadata : {}\n    },\n     origin : {\n         type :  urn:oc:attributeType:origin ,\n         value :  Street-level traffic count data from UK Department for Transport. ,\n         metadata : {\n             unit : {\n                 type :  NOT_APPLIED ,\n                 value :  NOT_APPLIED \n            },\n             urls : {\n                 type :  url ,\n                 value :  http://www.dft.gov.uk/traffic-counts/ \n            }\n        }\n    },\n     trafficIntensity:bicycle : {\n         type :  urn:oc:attributeType:trafficIntensity:bicycle ,\n         value :  0.0 ,\n         metadata : {\n             unit : {\n                 type :  urn:oc:uom:vehiclePerDay ,\n                 value :  vehiclePerDay \n            },\n             TimeInstant : {\n                 type :  urn:oc:attributeType:ISO8601 ,\n                 value :  2015-12-31T23:59:59 \n            }\n        }\n    },\n     trafficIntensity:bus : {\n         type :  urn:oc:attributeType:trafficIntensity:bus ,\n         value :  320.0 ,\n         metadata : {\n             unit : {\n                 type :  urn:oc:uom:vehiclePerDay ,\n                 value :  vehiclePerDay \n            },\n             TimeInstant : {\n                 type :  urn:oc:attributeType:ISO8601 ,\n                 value :  2015-12-31T23:59:59 \n            }\n        }\n    },\n     trafficIntensity:car : {\n         type :  urn:oc:attributeType:trafficIntensity:car ,\n         value :  35237.0 ,\n         metadata : {\n             unit : {\n                 type :  urn:oc:uom:vehiclePerDay ,\n                 value :  vehiclePerDay \n            },\n             TimeInstant : {\n                 type :  urn:oc:attributeType:ISO8601 ,\n                 value :  2015-12-31T23:59:59 \n            }\n        }\n    },\n     trafficIntensity:heavyGoodsVehicle : {\n         type :  urn:oc:attributeType:trafficIntensity:heavyGoodsVehicle ,\n         value :  3271.0 ,\n         metadata : {\n             unit : {\n                 type :  urn:oc:uom:vehiclePerDay ,\n                 value :  vehiclePerDay \n            },\n             TimeInstant : {\n                 type :  urn:oc:attributeType:ISO8601 ,\n                 value :  2015-12-31T23:59:59 \n            }\n        }\n    },\n     trafficIntensity:lightGoodsVehicle : {\n         type :  urn:oc:attributeType:trafficIntensity:lightGoodsVehicle ,\n         value :  7204.0 ,\n         metadata : {\n             unit : {\n                 type :  urn:oc:uom:vehiclePerDay ,\n                 value :  vehiclePerDay \n            },\n             TimeInstant : {\n                 type :  urn:oc:attributeType:ISO8601 ,\n                 value :  2015-12-31T23:59:59 \n            }\n        }\n    },\n     trafficIntensity:motorcycle : {\n         type :  urn:oc:attributeType:trafficIntensity:motorcycle ,\n         value :  493.0 ,\n         metadata : {\n             unit : {\n                 type :  urn:oc:uom:vehiclePerDay ,\n                 value :  vehiclePerDay \n            },\n             TimeInstant : {\n                 type :  urn:oc:attributeType:ISO8601 ,\n                 value :  2015-12-31T23:59:59 \n            }\n        }\n    }\n}", 
            "title": "London Traffic Counts"
        }, 
        {
            "location": "/FederatedDataAssets/#transport", 
            "text": "Transport for London  and  Transport API  provide API endpoints for getting information about the London public transport network, tube stations, bus stops, citybicycle rental stations, tube lines and bus lines. In the first round of experimentation we  Example:  {\n     id :  urn:oc:entity:london:transportService:TransportAPI:VIC ,\n     type :  urn:oc:entityType:transportStation ,\n     access:scope : {\n         type :  urn:oc:attributeType:access:scope ,\n         value :  public ,\n         metadata : {}\n    },\n     location : {\n         type :  geo:point ,\n         value :  -0.144544,51.495256 ,\n         metadata : {}\n    },\n     origin : {\n         type :  urn:oc:attributeType:origin ,\n         value :  Train station performance indicators from the TransportAPI ,\n         metadata : {\n             unit : {\n                 type :  NOT_APPLIED ,\n                 value :  NOT_APPLIED \n            },\n             urls : {\n                 type :  url ,\n                 value :  http://fcc.transportapi.com/ \n            }\n        }\n    },\n     transportServicePerformance : {\n         type :  urn:oc:attributeType:transportServicePerformance ,\n         value :  96.0 ,\n         metadata : {\n             unit : {\n                 type :  urn:oc:uom:percent ,\n                 value :  percent \n            },\n             TimeInstant : {\n                 type :  urn:oc:attributeType:ISO8601 ,\n                 value :  2016-09-29T16:17:38+01:00 \n            }\n        }\n    }\n}", 
            "title": "Transport"
        }, 
        {
            "location": "/FederatedDataAssets/#london-air-quality-network", 
            "text": "The  London Air Quality Network  (LAQN) provides pollution measurements that are essential to underpin air quality management and health studies. The majority of London\u2019s 33 boroughs supply measurements to the network and in addition these data are increasingly being supplemented by measurements from local authorities surrounding London, thereby providing an overall perspective of air pollution in London. The LAQN is operated and managed by the Environmental Research Group (ERG) at King\u2019s College London. QA/QC audits are carried out by the National Physical Laboratory (NPL).  Based on the 2014  LAQN report , the air quality observations made are Carbon Monoxide (CO), Nitrogen Dioxide (NO2), Sulphur dioxide (SO2), Ozone (O3), Particles (PM10) and Particles (PM2.5) along with environmental observations like Wind Speed, Temperature, Rainfall, etc. in over 60 monitoring sites.  {\n     id :  urn:oc:entity:london:aqn:CD9 ,\n     type :  urn:oc:entityType:iotdevice ,\n     location : {\n         type :  geo:point ,\n         value :  -0.129053205282516,51.5277066194645 ,\n         metadata : {}\n    },\n     origin : {\n         type :  urn:oc:attributeType:origin ,\n         value :  http://www.londonair.org.uk/LondonAir/API/ ,\n         metadata : {\n             unit : {\n                 type :  NOT_APPLIED ,\n                 value :  NOT_APPLIED \n            }\n        }\n    },\n     datasource : {\n         type :  urn:oc:attributeType:datasource ,\n         value :  http://london.site.organicity.eu:8081/api/v1/entities/ ,\n         metadata : {\n             datasourceInternal : {\n                 type :  urn:oc:datatype:boolean ,\n                 value :  true \n            }\n        }\n    },\n     description : {\n         type :  urn:oc:attributeType:description ,\n         value :  CD9 ,\n         metadata : {}\n    },\n     chemicalAgentAtmosphericConcentration:NO : {\n         type :  urn:oc:attributeType:chemicalAgentAtmosphericConcentration:NO ,\n         value :  46.2 ,\n         metadata : {\n             unit : {\n                 type :  urn:oc:uom:microgramPerCubicMetre ,\n                 value :  microgramPerCubicMetre \n            },\n             datatype : {\n                 type :  urn:oc:datatype:numeric ,\n                 value :  numeric \n            }\n        }\n    },\n     chemicalAgentAtmosphericConcentration:airParticlesPM10 : {\n         type :  urn:oc:attributeType:chemicalAgentAtmosphericConcentration:airParticlesPM10 ,\n         value :  25.8 ,\n         metadata : {\n             unit : {\n                 type :  urn:oc:uom:miligramPerCubicMetre ,\n                 value :  miligramPerCubicMetre \n            },\n             datatype : {\n                 type :  urn:oc:datatype:numeric ,\n                 value :  numeric \n            }\n        }\n    },\n     chemicalAgentAtmosphericConcentration:airParticlesPM25 : {\n         type :  urn:oc:attributeType:chemicalAgentAtmosphericConcentration:airParticlesPM25 ,\n         value :  17.5 ,\n         metadata : {\n             unit : {\n                 type :  urn:oc:uom:miligramPerCubicMetre ,\n                 value :  miligramPerCubicMetre \n            },\n             datatype : {\n                 type :  urn:oc:datatype:numeric ,\n                 value :  numeric \n            }\n        }\n    }\n}", 
            "title": "London Air Quality Network"
        }, 
        {
            "location": "/FederatedDataAssets/#environmental-sensors-qeop", 
            "text": "A number of environmental stations (3 weather stations) have been deployed in Queen Elizabeth Olympic Park (QEOP) measuring environmental conditions of the park like: temperature, rain levels, wind direction and intensity, humidity, barometric pressure and light intensity.  Moreover, there are recorded data from 10 distinct points in the city (Temperature, Humidity, Nitrogen Oxide, Nitrogen Dioxide, Carbon Dioxide) for year 2015.  {\n     id :  urn:oc:entity:london:enableiot:fixed:ICRI-QEOP-0002 ,\n     type :  urn:oc:entityType:iotdevice ,\n     location : {\n         type :  geo:point ,\n         value :  -0.014934,51.547581 ,\n         metadata : {}\n    },\n     origin : {\n         type :  urn:oc:attributeType:origin ,\n         value :  Intel QeoP Deployments ,\n         metadata : {\n             unit : {\n                 type :  NOT_APPLIED ,\n                 value :  NOT_APPLIED \n            }\n        }\n    },\n     datasource : {\n         type :  urn:oc:attributeType:datasource ,\n         value :  http://london.site.organicity.eu:8081/api/v1/entities ,\n         metadata : {\n             datasourceInternal : {\n                 type :  urn:oc:datatype:boolean ,\n                 value :  true \n            }\n        }\n    },\n     description : {\n         type :  urn:oc:attributeType:description ,\n         value :  ICRI-QEOP-0002active ,\n         metadata : {}\n    },\n     10_Min_Avg_Wind_Speed : {\n         type :  urn:oc:attributeType:windSpeed ,\n         value :  4.83 ,\n         metadata : {\n             datatype : {\n                 type :  urn:oc:datatype:numeric ,\n                 value :  numeric \n            }\n        }\n    },\n     Barometer : {\n         type :  urn:oc:attributeType:atmosphericPressure ,\n         value :  771.9568 ,\n         metadata : {\n             datatype : {\n                 type :  urn:oc:datatype:numeric ,\n                 value :  numeric \n            }\n        }\n    },\n     Day_ET : {\n         type :  urn:oc:attributeType:rainfall ,\n         value :  0.0 ,\n         metadata : {\n             datatype : {\n                 type :  urn:oc:datatype:numeric ,\n                 value :  numeric \n            }\n        }\n    },\n     Day_Rain : {\n         type :  urn:oc:attributeType:rainfall ,\n         value :  0.0 ,\n         metadata : {\n             datatype : {\n                 type :  urn:oc:datatype:numeric ,\n                 value :  numeric \n            }\n        }\n    },\n     Inside_Humidity : {\n         type :  urn:oc:attributeType:relativeHumidity ,\n         value :  0.34 ,\n         metadata : {\n             datatype : {\n                 type :  urn:oc:datatype:numeric ,\n                 value :  numeric \n            }\n        }\n    },\n     Inside_Temperature : {\n         type :  urn:oc:attributeType:temperature:ambient ,\n         value :  28.72222 ,\n         metadata : {\n             datatype : {\n                 type :  urn:oc:datatype:numeric ,\n                 value :  numeric \n            }\n        }\n    },\n     Month_ET : {\n         type :  urn:oc:attributeType:rainfall ,\n         value :  0.0 ,\n         metadata : {\n             datatype : {\n                 type :  urn:oc:datatype:numeric ,\n                 value :  numeric \n            }\n        }\n    },\n     Month_Rain : {\n         type :  urn:oc:attributeType:rainfall ,\n         value :  1.05 ,\n         metadata : {\n             datatype : {\n                 type :  urn:oc:datatype:numeric ,\n                 value :  numeric \n            }\n        }\n    },\n     Outside_Humidity : {\n         type :  urn:oc:attributeType:relativeHumidity ,\n         value :  0.71 ,\n         metadata : {\n             datatype : {\n                 type :  urn:oc:datatype:numeric ,\n                 value :  numeric \n            }\n        }\n    },\n     Outside_Temperature : {\n         type :  urn:oc:attributeType:temperature:ambient ,\n         value :  13.61111 ,\n         metadata : {\n             datatype : {\n                 type :  urn:oc:datatype:numeric ,\n                 value :  numeric \n            }\n        }\n    },\n     Wind_Direction : {\n         type :  urn:oc:attributeType:windDirection ,\n         value :  37.0 ,\n         metadata : {\n             datatype : {\n                 type :  urn:oc:datatype:numeric ,\n                 value :  numeric \n            }\n        }\n    },\n     Wind_Speed : {\n         type :  urn:oc:attributeType:windSpeed ,\n         value :  11.27 ,\n         metadata : {\n             datatype : {\n                 type :  urn:oc:datatype:numeric ,\n                 value :  numeric \n            }\n        }\n    },\n     Year_ET : {\n         type :  urn:oc:attributeType:rainfall ,\n         value :  0.0 ,\n         metadata : {\n             datatype : {\n                 type :  urn:oc:datatype:numeric ,\n                 value :  numeric \n            }\n        }\n    },\n     Year_Rain : {\n         type :  urn:oc:attributeType:rainfall ,\n         value :  110.8 ,\n         metadata : {\n             datatype : {\n                 type :  urn:oc:datatype:numeric ,\n                 value :  numeric \n            }\n        }\n    }\n}", 
            "title": "Environmental Sensors - QEOP"
        }, 
        {
            "location": "/FederatedDataAssets/#santander", 
            "text": "", 
            "title": "Santander"
        }, 
        {
            "location": "/FederatedDataAssets/#traffic", 
            "text": "", 
            "title": "Traffic"
        }, 
        {
            "location": "/FederatedDataAssets/#traffic-cameras", 
            "text": "Four traffic cameras in the city provide real time images about the status of the traffic in different areas of the city.  {\n     id :  urn:oc:entity:santander:traffic:camera:02 ,\n     type :  urn:oc:entityType:camera ,\n     TimeInstant : {\n         type :  ISO8601 ,\n         value :  2017-01-09T11:17:33.000Z ,\n         metadata : {}\n    },\n     image : {\n         type :  urn:oc:attributeType:image ,\n         value :  http://datos.santander.es/files/camara_castilla/castilla_20170109121732.jpg ,\n         metadata : {}\n    },\n     name : {\n         type :  urn:oc:attributeType:name ,\n         value :  Castilla Hermida ,\n         metadata : {}\n    },\n     origin : {\n         type :  urn:oc:attributeType:origin ,\n         value :  Santander City ,\n         metadata : {}\n    },\n     reputation : {\n         type :  urn:oc:attributeType:reputation ,\n         value :  -1 ,\n         metadata : {\n             unit : {\n                 type :  urn:oc:dataType:string ,\n                 value :  urn:oc:uom:index \n            },\n             description : {\n                 type :  urn:oc:dataType:string ,\n                 value :  The reputation scores vary from 0 to 1. -1 means that there is not scores already calculated \n            }\n        }\n    }\n}", 
            "title": "Traffic cameras."
        }, 
        {
            "location": "/FederatedDataAssets/#vehicle-count-sensors", 
            "text": "Placed at the main entrance of the city, they provide information about the occupancy and traffic intensity in the different lanes of the main roads.  {\n     id :  urn:oc:entity:santander:traffic:fixed:3306 ,\n     type :  urn:oc:entityType:iotdevice:vehicleCounter ,\n     TimeInstant : {\n         type :  ISO8601 ,\n         value :  2017-01-12T09:15:07.000Z ,\n         metadata : {}\n    },\n     datasource : {\n         type :  urn:oc:attributeType:datasource ,\n         value :  http://mu.tlmat.unican.es:8098/ ,\n         metadata : {\n             datasourceInternal : {\n                 type :  urn:oc:dataType:boolean ,\n                 value :  boolean \n            }\n        }\n    },\n     location : {\n         type :  geo:json ,\n         value : {\n             type :  Point ,\n             coordinates : [-3.82782, 43.4513]\n        },\n         metadata : {}\n    },\n     origin : {\n         type :  urn:oc:attributeType:origin ,\n         value :  SmartSantander ,\n         metadata : {}\n    },\n     reputation : {\n         type :  urn:oc:attributeType:reputation ,\n         value : -1,\n         metadata : {\n             unit : {\n                 type :  urn:oc:dataType:string ,\n                 value :  urn:oc:uom:index \n            },\n             description : {\n                 type :  urn:oc:dataType:string ,\n                 value :  The reputation scores vary from 0 to 1. -1 means that there is not scores already calculated \n            }\n        }\n    },\n     roadOccupancy : {\n         type :  urn:oc:attributeType:speed:roadOccupancy ,\n         value : 6.24,\n         metadata : {\n             unit : {\n                 type :  urn:oc:dataType:string ,\n                 value :  urn:oc:uom:vehiclesPerMinute \n            },\n             description : {\n                 type :  urn:oc:dataType:string ,\n                 value :  Measurements calculated in the last minute \n            }\n        }\n    },\n     trafficIntensity : {\n         type :  urn:oc:attributeType:trafficIntensity ,\n         value : 11,\n         metadata : {\n             unit : {\n                 type :  urn:oc:dataType:string ,\n                 value :  urn:oc:uom:vehiclesPerMinute \n            },\n             description : {\n                 type :  urn:oc:dataType:string ,\n                 value :  Measurements calculated in the last minute \n            }\n        }\n    }\n}", 
            "title": "Vehicle count sensors"
        }, 
        {
            "location": "/FederatedDataAssets/#vehicle-speed-sensors", 
            "text": "Placed at the main entrance of the city, they provide information about the occupancy, the count of vehicles, the median and average speed in the different lanes of the main roads.  {\n     id :  urn:oc:entity:santander:traffic:fixed:3305 ,\n     type :  urn:oc:entityType:iotdevice:vehicleSpeed ,\n     TimeInstant : {\n         type :  ISO8601 ,\n         value :  2017-01-12T09:08:09.000Z ,\n         metadata : {}\n    },\n     datasource : {\n         type :  urn:oc:attributeType:datasource ,\n         value :  http://mu.tlmat.unican.es:8098/ ,\n         metadata : {\n             datasourceInternal : {\n                 type :  urn:oc:dataType:boolean ,\n                 value :  boolean \n            }\n        }\n    },\n     location : {\n         type :  geo:json ,\n         value : {\n             type :  Point ,\n             coordinates : [-3.83027, 43.4499]\n        },\n         metadata : {}\n    },\n     origin : {\n         type :  urn:oc:attributeType:origin ,\n         value :  SmartSantander ,\n         metadata : {}\n    },\n     reputation : {\n         type :  urn:oc:attributeType:reputation ,\n         value : -1,\n         metadata : {\n             unit : {\n                 type :  urn:oc:dataType:string ,\n                 value :  urn:oc:uom:index \n            },\n             description : {\n                 type :  urn:oc:dataType:string ,\n                 value :  The reputation scores vary from 0 to 1. -1 means that there is not scores already calculated \n            }\n        }\n    },\n     roadOccupancy : {\n         type :  urn:oc:attributeType:speed:roadOccupancy ,\n         value : 8.86,\n         metadata : {\n             unit : {\n                 type :  urn:oc:dataType:string ,\n                 value :  urn:oc:uom:vehiclesPerMinute \n            },\n             description : {\n                 type :  urn:oc:dataType:string ,\n                 value :  Measurements calculated in the last minute \n            }\n        }\n    },\n     speed:average : {\n         type :  urn:oc:attributeType:speed:average ,\n         value : 59.7,\n         metadata : {\n             unit : {\n                 type :  urn:oc:dataType:string ,\n                 value :  urn:oc:uom:kilometrePerHour \n            },\n             description : {\n                 type :  urn:oc:dataType:string ,\n                 value :  Measurements calculated in the last minute \n            }\n        }\n    },\n     speed:median : {\n         type :  urn:oc:attributeType:speed:median ,\n         value : 58,\n         metadata : {\n             unit : {\n                 type :  urn:oc:dataType:string ,\n                 value :  urn:oc:uom:kilometrePerHour \n            },\n             description : {\n                 type :  urn:oc:dataType:string ,\n                 value :  Measurements calculated in the last minute \n            }\n        }\n    },\n     trafficIntensity : {\n         type :  urn:oc:attributeType:trafficIntensity ,\n         value : 18,\n         metadata : {\n             unit : {\n                 type :  urn:oc:dataType:string ,\n                 value :  urn:oc:uom:vehiclesPerMinute \n            },\n             description : {\n                 type :  urn:oc:dataType:string ,\n                 value :  Measurements calculated in the last minute \n            }\n        }\n    }\n}", 
            "title": "Vehicle speed sensors"
        }, 
        {
            "location": "/FederatedDataAssets/#magnetic-loops", 
            "text": "It provides real time information about the traffic intensity, the occupancy of the roads and the load, based on the measurements gathered by magnetic loops deployed along the city.  {\n     id :  urn:oc:entity:santander:traffic:magneticLoop:1001 ,\n     type :  urn:oc:entityType:iotdevice:magneticLoop ,\n     TimeInstant : {\n         type :  ISO8601 ,\n         value :  2017-01-12T09:27:00.000Z ,\n         metadata : {}\n    },\n     datasource : {\n         type :  urn:oc:attributeType:datasource ,\n         value :  http://mu.tlmat.unican.es:8098/ ,\n         metadata : {\n             datasourceInternal : {\n                 type :  urn:oc:dataType:boolean ,\n                 value :  boolean \n            }\n        }\n    },\n     location : {\n         type :  geo:json ,\n         value : {\n             type :  Point ,\n             coordinates : [-3.82959, 43.4536]\n        },\n         metadata : {}\n    },\n     origin : {\n         type :  urn:oc:attributeType:origin ,\n         value :  SICE ,\n         metadata : {}\n    },\n     reputation : {\n         type :  urn:oc:attributeType:reputation ,\n         value : -1,\n         metadata : {\n             unit : {\n                 type :  urn:oc:dataType:string ,\n                 value :  urn:oc:uom:index \n            },\n             description : {\n                 type :  urn:oc:dataType:string ,\n                 value :  The reputation scores vary from 0 to 1. -1 means that there is not scores already calculated \n            }\n        }\n    },\n     roadLoad : {\n         type :  urn:oc:attributeType:roadLoad ,\n         value : 9,\n         metadata : {}\n    },\n     roadOccupancy : {\n         type :  urn:oc:attributeType:roadOccupancy ,\n         value : 3,\n         metadata : {}\n    },\n     trafficIntensity : {\n         type :  urn:oc:attributeType:trafficIntensity ,\n         value : 180,\n         metadata : {}\n    }\n}", 
            "title": "Magnetic Loops"
        }, 
        {
            "location": "/FederatedDataAssets/#parking", 
            "text": "", 
            "title": "Parking"
        }, 
        {
            "location": "/FederatedDataAssets/#outdoor-parking", 
            "text": "Real time information of available parking spots within zone 30. A set of 400 ferromagnetic sensors are placed under the asphalt in zone 30 of the Santander city centre, providing real time information about the status of occupancy of the different parking spots.  {\n     id :  urn:oc:entity:santander:parking:np3601 ,\n     type :  urn:oc:entityType:iotdevice:parking ,\n     TimeInstant : {\n         type :  ISO8601 ,\n         value :  2017-01-12T07:53:44.000Z ,\n         metadata : {}\n    },\n     datasource : {\n         type :  urn:oc:attributeType:datasource ,\n         value :  http://mu.tlmat.unican.es:8098/ ,\n         metadata : {\n             datasourceInternal : {\n                 type :  urn:oc:dataType:boolean ,\n                 value :  boolean \n            }\n        }\n    },\n     location : {\n         type :  geo:json ,\n         value : {\n             type :  Point ,\n             coordinates : [-3.79897, 43.4631]\n        },\n         metadata : {}\n    },\n     origin : {\n         type :  urn:oc:attributeType:origin ,\n         value :  SmartSantander ,\n         metadata : {}\n    },\n     presenceStatus:parking : {\n         type :  urn:oc:attributeType:presenceStatus:parking ,\n         value :  true ,\n         metadata : {\n             description : {\n                 type :  urn:oc:dataType:string ,\n                 value :  True means that the parking spot is occupied while false it is available \n            }\n        }\n    },\n     reputation : {\n         type :  urn:oc:attributeType:reputation ,\n         value : -1,\n         metadata : {\n             unit : {\n                 type :  urn:oc:dataType:string ,\n                 value :  urn:oc:uom:index \n            },\n             description : {\n                 type :  urn:oc:dataType:string ,\n                 value :  The reputation scores vary from 0 to 1. -1 means that there is not scores already calculated \n            }\n        }\n    }\n}", 
            "title": "Outdoor Parking"
        }, 
        {
            "location": "/FederatedDataAssets/#underground-car-parkings", 
            "text": "{\n     id :  urn:oc:entity:santander:parking:underground:APAR4 ,\n     type :  urn:oc:entityType:undergroundParking ,\n     TimeInstant : {\n         type :  ISO8601 ,\n         value :  2017-01-12T10:16:00.000Z ,\n         metadata : {}\n    },\n     datasource : {\n         type :  urn:oc:attributeType:datasource ,\n         value :  http://mu.tlmat.unican.es:8098/ ,\n         metadata : {\n             datasourceInternal : {\n                 type :  urn:oc:dataType:boolean ,\n                 value :  boolean \n            }\n        }\n    },\n     extraSpotNumber : {\n         type :  urn:oc:attributeType:extraSpotNumber ,\n         value : 2,\n         metadata : {}\n    },\n     location : {\n         type :  geo:json ,\n         value : {\n             type :  Point ,\n             coordinates : [-3.81769, 43.4614]\n        },\n         metadata : {}\n    },\n     name : {\n         type :  urn:oc:attributeType:name ,\n         value :  Parking de Numancia ,\n         metadata : {}\n    },\n     origin : {\n         type :  urn:oc:attributeType:origin ,\n         value :  SmartSantanderRA ,\n         metadata : {}\n    },\n     parkingDisposition : {\n         type :  urn:oc:attributeType:parkingDisposition ,\n         value :  parallel ,\n         metadata : {}\n    },\n     reputation : {\n         type :  urn:oc:attributeType:reputation ,\n         value : -1,\n         metadata : {\n             unit : {\n                 type :  urn:oc:dataType:string ,\n                 value :  urn:oc:uom:index \n            },\n             description : {\n                 type :  urn:oc:dataType:string ,\n                 value :  The reputation scores vary from 0 to 1. -1 means that there is not scores already calculated \n            }\n        }\n    },\n     totalSpotNumber : {\n         type :  urn:oc:attributeType:totalSpotNumber ,\n         value : 244,\n         metadata : {}\n    }\n}", 
            "title": "Underground Car Parkings"
        }, 
        {
            "location": "/FederatedDataAssets/#parking-reserved-for-people-with-dissabilities", 
            "text": "It provides information about the parking spots reserved for people with disabilities.   {\n     id :  urn:oc:entity:santander:parking:disabledpeople:51564 ,\n     type :  urn:oc:entityType:parkingZone:disabledPeople ,\n     TimeInstant : {\n         type :  ISO8601 ,\n         value :  2017-01-11T23:35:35.000Z ,\n         metadata : {}\n    },\n     location : {\n         type :  geo:json ,\n         value : {\n             type :  Point ,\n             coordinates : [-3.83885, 43.4625]\n        },\n         metadata : {}\n    },\n     origin : {\n         type :  urn:oc:attributeType:origin ,\n         value :  Santander OD ,\n         metadata : {}\n    },\n     parkingspots:angled : {\n         type :  urn:oc:attributeType:parkingspots:angled ,\n         value : 0,\n         metadata : {}\n    },\n     parkingspots:inline : {\n         type :  urn:oc:attributeType:parkingspots:inline ,\n         value : 1,\n         metadata : {}\n    },\n     regulation : {\n         type :  urn:oc:attributeType:regulation ,\n         value :  Libre ,\n         metadata : {}\n    },\n     reputation : {\n         type :  urn:oc:attributeType:reputation ,\n         value : -1,\n         metadata : {\n             unit : {\n                 type :  urn:oc:dataType:string ,\n                 value :  urn:oc:uom:index \n            },\n             description : {\n                 type :  urn:oc:dataType:string ,\n                 value :  The reputation scores vary from 0 to 1. -1 means that there is not scores already calculated \n            }\n        }\n    },\n     street:name : {\n         type :  urn:oc:attributeType:street:name ,\n         value :  CL/ RAFAEL ALSUA ,\n         metadata : {\n             detail : {\n                 type :  urn:oc:datatype:string ,\n                 value :  Margen Norte del vial, junto al n\u00ba 17 \n            }\n        }\n    }\n}", 
            "title": "Parking reserved for people with dissabilities."
        }, 
        {
            "location": "/FederatedDataAssets/#load-and-unload-areas", 
            "text": "{\n     id :  urn:oc:entity:santander:parking:loadunload:50949 ,\n     type :  urn:oc:entity:parkingZone:loadunload ,\n     TimeInstant : {\n         type :  ISO8601 ,\n         value :  2017-01-11T23:40:08.000Z ,\n         metadata : {}\n    },\n     location : {\n         type :  geo:json ,\n         value : {\n             type :  Point ,\n             coordinates : [-3.77824, 43.473]\n        },\n         metadata : {}\n    },\n     origin : {\n         type :  urn:oc:attributeType:origin ,\n         value :  Santander OD ,\n         metadata : {}\n    },\n     parkingspots:angled : {\n         type :  urn:oc:attributeType:parkingspots:angled ,\n         value : 0,\n         metadata : {}\n    },\n     parkingspots:inline : {\n         type :  urn:oc:attributeType:parkingspots:inline ,\n         value : 2,\n         metadata : {}\n    },\n     regulation : {\n         type :  urn:oc:attributeType:regulation ,\n         value :  Libre ,\n         metadata : {}\n    },\n     reputation : {\n         type :  urn:oc:attributeType:reputation ,\n         value : -1,\n         metadata : {\n             unit : {\n                 type :  urn:oc:dataType:string ,\n                 value :  urn:oc:uom:index \n            },\n             description : {\n                 type :  urn:oc:dataType:string ,\n                 value :  The reputation scores vary from 0 to 1. -1 means that there is not scores already calculated \n            }\n        }\n    },\n     serviceHours : {\n         type :  urn:oc:attributeType:schedule ,\n         value :  DE 7 A 11,30 H ,\n         metadata : {}\n    },\n     street:name : {\n         type :  urn:oc:attributeType:street:name ,\n         value :  AV/ REINA VICTORIA ,\n         metadata : {\n             detail : {\n                 type :  urn:oc:datatype:string ,\n                 value :  RESERVA TRASLADADA DEL APARCAMIENTO INTERIOR. \n            }\n        }\n    }\n}", 
            "title": "Load and unload areas"
        }, 
        {
            "location": "/FederatedDataAssets/#transport_1", 
            "text": "", 
            "title": "Transport"
        }, 
        {
            "location": "/FederatedDataAssets/#bus-stops", 
            "text": "A set of 415 assets, one per bus stop in the city, have been created. Those assets provide real time information about next buses reaching the bus stop, including the distance to reach the bus stop as well as the estimated time of arrival for the first and second bus coming.  {\n     id :  urn:oc:entity:santander:publictransport:bus:stop:103 ,\n     type :  urn:oc:entityType:busStop ,\n     TimeInstant : {\n         type :  ISO8601 ,\n         value :  2016-10-04T22:20:00.000Z ,\n         metadata : {}\n    },\n     address : {\n         type :  urn:oc:attributeType:address ,\n         value :  Plaza de las Estaciones S/N ,\n         metadata : {}\n    },\n     bus:direction : {\n         type :  urn:oc:attributeType:bus:direction ,\n         value :  B\u00ba Pesquero ,\n         metadata : {}\n    },\n     bus:stopName : {\n         type :  urn:oc:attributeType:bus:stopName ,\n         value :  Las Estaciones ,\n         metadata : {}\n    },\n     location : {\n         type :  geo:point ,\n         value :  -3.8107700513716405,43.45908154114637 ,\n         metadata : {}\n    }\n}", 
            "title": "Bus stops."
        }, 
        {
            "location": "/FederatedDataAssets/#bus-lines", 
            "text": "{\n     id :  urn:oc:entity:santander:transport:bus:line:N3 ,\n     type :  bus:line ,\n     TimeInstant : {\n         type :  ISO8601 ,\n         value :  2017-01-03T00:00:00.000Z ,\n         metadata : {}\n    },\n     lineNumber : {\n         type :  urn:oc:attributeType:busLine:number ,\n         value :  N3 ,\n         metadata : {}\n    },\n     name : {\n         type :  urn:oc:attributeType:busLine:name ,\n         value :  PE\u00d1ACASTILLO-PLAZA DE ITALIA  ,\n         metadata : {}\n    },\n     origin : {\n         type :  urn:oc:attributeType:origin ,\n         value :  TUS Santander ,\n         metadata : {}\n    },\n     reputation : {\n         type :  urn:oc:attributeType:reputation ,\n         value :  -1 ,\n         metadata : {\n             unit : {\n                 type :  urn:oc:dataType:string ,\n                 value :  urn:oc:uom:index \n            },\n             description : {\n                 type :  urn:oc:dataType:string ,\n                 value :  The reputation scores vary from 0 to 1. -1 means that there is not scores already calculated \n            }\n        }\n    }\n}", 
            "title": "Bus lines"
        }, 
        {
            "location": "/FederatedDataAssets/#taxi-stops", 
            "text": "These assets provide real time information about taxi availability in each particular stop, based on the information provided by the fleet management systems deployed by the two taxi associations.  {\n     id :  urn:oc:entity:santander:transport:taxis:stop:1 ,\n     type :  urn:oc:entityType:taxis:stop ,\n     TimeInstant : {\n         type :  ISO8601 ,\n         value :  2016-10-05T00:01:01.000Z ,\n         metadata : {}\n    },\n     location : {\n         type :  geo:point ,\n         value :  -3.7886569,43.463448 ,\n         metadata : {}\n    },\n     name : {\n         type :  urn:oc:attributeType:taxis:stops:name ,\n         value :  SAN MARTIN ,\n         metadata : {}\n    }\n}", 
            "title": "Taxi stops."
        }, 
        {
            "location": "/FederatedDataAssets/#bike-stops", 
            "text": "A set of 16 assets has been created, providing information about the number of available public-hire bikes and also the number of places to return such bikes.  {\n     id :  urn:oc:entity:santander:transport:bikestation:12 ,\n     type :  urn:oc:entityType:bikeStop ,\n     TimeInstant : {\n         type :  ISO8601 ,\n         value :  2017-01-09T09:26:13.000Z ,\n         metadata : {}\n    },\n     datasource : {\n         type :  urn:oc:attributeType:datasource ,\n         value :  http://mu.tlmat.unican.es:8098/ ,\n         metadata : {\n             datasourceInternal : {\n                 type :  urn:oc:dataType:boolean ,\n                 value :  boolean \n            }\n        }\n    },\n     feeSpaces : {\n         type :  urn:oc:attributeType:freeSpaces ,\n         value : 9,\n         metadata : {}\n    },\n     freeBikes : {\n         type :  urn:oc:attributeType:freeBikes ,\n         value : 6,\n         metadata : {}\n    },\n     location : {\n         type :  geo:point ,\n         value :  -3.8248012423,43.4579662522 ,\n         metadata : {}\n    },\n     name : {\n         type :  urn:oc:attributeType:name ,\n         value :  012_CALLE ALTA ,\n         metadata : {}\n    },\n     origin : {\n         type :  urn:oc:attributeType:origin ,\n         value :  TusBic ,\n         metadata : {}\n    },\n     reputation : {\n         type :  urn:oc:attributeType:reputation ,\n         value : -1,\n         metadata : {\n             unit : {\n                 type :  urn:oc:dataType:string ,\n                 value :  urn:oc:uom:index \n            },\n             description : {\n                 type :  urn:oc:dataType:string ,\n                 value :  The reputation scores vary from 0 to 1. -1 means that there is not scores already calculated \n            }\n        }\n    }\n}", 
            "title": "Bike stops."
        }, 
        {
            "location": "/FederatedDataAssets/#districts-and-sections", 
            "text": "", 
            "title": "Districts and sections"
        }, 
        {
            "location": "/FederatedDataAssets/#districts", 
            "text": "{\n     id :  urn:oc:entity:santander:districts:D03 ,\n     type :  urn:oc:entityType:district ,\n     TimeInstant : {\n         type :  ISO8601 ,\n         value :  2017-01-04T11:16:41.000Z ,\n         metadata : {}\n    },\n     location : {\n         type :  geo:json ,\n         value : {\n             type :  Polygon ,\n             coordinates : [\n                [\n                    [-3.79124, 43.4685],\n                    [-3.79199, 43.4686],\n                    [-3.79221, 43.4686],\n                    [-3.79238, 43.4686],\n                    [-3.79255, 43.4686],\n                    [-3.79263, 43.4686],\n                    [-3.79294, 43.4685],\n                    [-3.79343, 43.4685],\n                    [-3.79366, 43.4685],\n                    [-3.79414, 43.4685],\n                    [-3.79476, 43.4684],\n                    [-3.79521, 43.4684],\n                    [-3.79543, 43.4684],\n                    [-3.7956, 43.4684],\n                    [-3.7958, 43.4684],\n                    [-3.79623, 43.4685],\n                    [-3.79653, 43.4685],\n                    [-3.79665, 43.4685],\n                    [-3.79679, 43.4685],\n                    [-3.79701, 43.4685],\n                    [-3.79723, 43.4685],\n                    [-3.79752, 43.4685],\n                    [-3.79795, 43.4684],\n                    [-3.79886, 43.4684],\n                    [-3.79928, 43.4683],\n                    [-3.79947, 43.4683],\n                    [-3.79966, 43.4683],\n                    [-3.79994, 43.4682],\n                    [-3.80002, 43.4681],\n                    [-3.80114, 43.4678],\n                    [-3.80134, 43.4678],\n                    [-3.80174, 43.4677],\n                    [-3.80205, 43.4676],\n                    [-3.80219, 43.4676],\n                    [-3.80233, 43.4675],\n                    [-3.80265, 43.4675],\n                    [-3.80307, 43.4675],\n                    [-3.80348, 43.4675],\n                    [-3.80393, 43.4675],\n                    [-3.80426, 43.4675],\n                    [-3.80437, 43.4675],\n                    [-3.80476, 43.4675],\n                    [-3.80507, 43.4674],\n                    [-3.80528, 43.4674],\n                    [-3.80539, 43.4674],\n                    [-3.80571, 43.4674],\n                    [-3.80598, 43.4674],\n                    [-3.80612, 43.4673],\n                    [-3.80624, 43.4673],\n                    [-3.80653, 43.4673],\n                    [-3.80678, 43.4672],\n                    [-3.80692, 43.4672],\n                    [-3.80706, 43.4672],\n                    [-3.80719, 43.4672],\n                    [-3.80732, 43.4672],\n                    [-3.80794, 43.4673],\n                    [-3.80799, 43.4673],\n                    [-3.80818, 43.4674],\n                    [-3.80833, 43.4674],\n                    [-3.80909, 43.4675],\n                    [-3.80947, 43.4676],\n                    [-3.80973, 43.4676],\n                    [-3.80992, 43.4676],\n                    [-3.80995, 43.4676],\n                    [-3.81028, 43.4676],\n                    [-3.81341, 43.4676],\n                    [-3.81353, 43.4676],\n                    [-3.81377, 43.4676],\n                    [-3.81385, 43.4676],\n                    [-3.81372, 43.4675],\n                    [-3.81347, 43.4674],\n                    [-3.812, 43.4666],\n                    [-3.81198, 43.4666],\n                    [-3.81197, 43.4666],\n                    [-3.81197, 43.4665],\n                    [-3.81199, 43.4665],\n                    [-3.81202, 43.4665],\n                    [-3.81206, 43.4665],\n                    [-3.8121, 43.4665],\n                    [-3.81278, 43.4667],\n                    [-3.81284, 43.4667],\n                    [-3.81291, 43.4667],\n                    [-3.81296, 43.4666],\n                    [-3.813, 43.4666],\n                    [-3.81303, 43.4666],\n                    [-3.81303, 43.4665],\n                    [-3.81301, 43.4664],\n                    [-3.81297, 43.4664],\n                    [-3.81294, 43.4664],\n                    [-3.8129, 43.4664],\n                    [-3.8128, 43.4663],\n                    [-3.81222, 43.4662],\n                    [-3.81213, 43.4662],\n                    [-3.81204, 43.4662],\n                    [-3.81195, 43.4662],\n                    [-3.81185, 43.4662],\n                    [-3.81169, 43.4662],\n                    [-3.81162, 43.4662],\n                    [-3.81156, 43.4662],\n                    [-3.81153, 43.4661],\n                    [-3.81153, 43.4661],\n                    [-3.81156, 43.466],\n                    [-3.8116, 43.466],\n                    [-3.81166, 43.466],\n                    [-3.8119, 43.466],\n                    [-3.81195, 43.466],\n                    [-3.81199, 43.466],\n                    [-3.81202, 43.4659],\n                    [-3.81203, 43.4659],\n                    [-3.81202, 43.4659],\n                    [-3.812, 43.4658],\n                    [-3.81177, 43.4654],\n                    [-3.81161, 43.4652],\n                    [-3.81151, 43.465],\n                    [-3.81148, 43.465],\n                    [-3.81141, 43.4649],\n                    [-3.81126, 43.4647],\n                    [-3.81112, 43.4646],\n                    [-3.81106, 43.4645],\n                    [-3.811, 43.4644],\n                    [-3.81098, 43.4644],\n                    [-3.81101, 43.4643],\n                    [-3.81133, 43.4632],\n                    [-3.81133, 43.4632],\n                    [-3.81063, 43.4632],\n                    [-3.81069, 43.4637],\n                    [-3.81007, 43.4637],\n                    [-3.81005, 43.464],\n                    [-3.81002, 43.464],\n                    [-3.80997, 43.464],\n                    [-3.80877, 43.464],\n                    [-3.80875, 43.4637],\n                    [-3.80828, 43.4637],\n                    [-3.8078, 43.4637],\n                    [-3.80769, 43.4637],\n                    [-3.80621, 43.4637],\n                    [-3.80548, 43.4638],\n                    [-3.80546, 43.4638],\n                    [-3.80446, 43.4638],\n                    [-3.80418, 43.4639],\n                    [-3.804, 43.4639],\n                    [-3.80381, 43.4639],\n                    [-3.80375, 43.4639],\n                    [-3.80347, 43.464],\n                    [-3.80314, 43.4641],\n                    [-3.80287, 43.4641],\n                    [-3.80269, 43.4642],\n                    [-3.80265, 43.4642],\n                    [-3.80246, 43.4642],\n                    [-3.80235, 43.4642],\n                    [-3.80211, 43.4642],\n                    [-3.80185, 43.4643],\n                    [-3.80166, 43.4643],\n                    [-3.80133, 43.4643],\n                    [-3.80115, 43.4643],\n                    [-3.80103, 43.4643],\n                    [-3.80087, 43.4643],\n                    [-3.80073, 43.4643],\n                    [-3.8007, 43.4643],\n                    [-3.80025, 43.4643],\n                    [-3.79985, 43.4643],\n                    [-3.79958, 43.4644],\n                    [-3.79912, 43.4644],\n                    [-3.79861, 43.4644],\n                    [-3.79818, 43.4645],\n                    [-3.79791, 43.4645],\n                    [-3.79768, 43.4646],\n                    [-3.79738, 43.4646],\n                    [-3.7971, 43.4647],\n                    [-3.79683, 43.4647],\n                    [-3.79688, 43.4652],\n                    [-3.79682, 43.4653],\n                    [-3.79671, 43.4654],\n                    [-3.79646, 43.4654],\n                    [-3.796, 43.4654],\n                    [-3.79584, 43.4655],\n                    [-3.79571, 43.4655],\n                    [-3.79553, 43.4656],\n                    [-3.79536, 43.4656],\n                    [-3.79494, 43.4657],\n                    [-3.79473, 43.4658],\n                    [-3.79459, 43.4659],\n                    [-3.79435, 43.4659],\n                    [-3.79362, 43.466],\n                    [-3.79269, 43.4661],\n                    [-3.79255, 43.4661],\n                    [-3.7917, 43.4662],\n                    [-3.79167, 43.4662],\n                    [-3.79078, 43.4663],\n                    [-3.78731, 43.4665],\n                    [-3.7871, 43.4665],\n                    [-3.78709, 43.4666],\n                    [-3.78715, 43.467],\n                    [-3.78722, 43.4672],\n                    [-3.78734, 43.4674],\n                    [-3.78754, 43.4677],\n                    [-3.78776, 43.4679],\n                    [-3.78798, 43.468],\n                    [-3.7904, 43.4683],\n                    [-3.79124, 43.4685]\n                ]\n            ]\n        },\n         metadata : {}\n    }\n}", 
            "title": "Districts"
        }, 
        {
            "location": "/FederatedDataAssets/#sections", 
            "text": "{\n     id :  urn:oc:entity:santander:sections:D07:S22 ,\n     type :  section ,\n     TimeInstant : {\n         type :  ISO8601 ,\n         value :  2016-10-05T13:21:07.000Z ,\n         metadata : {}\n    },\n     location : {\n         type :  geo:json ,\n         value : {\n             type :  Polygon ,\n             coordinates : [\n                [\n                    [-3.81032, 43.4696],\n                    [-3.81078, 43.4695],\n                    [-3.81128, 43.4694],\n                    [-3.81175, 43.4694],\n                    [-3.81226, 43.4693],\n                    [-3.81301, 43.4691],\n                    [-3.81383, 43.4689],\n                    [-3.81385, 43.4689],\n                    [-3.81385, 43.4689],\n                    [-3.81387, 43.4689],\n                    [-3.81353, 43.4686],\n                    [-3.81347, 43.4686],\n                    [-3.81342, 43.4685],\n                    [-3.8134, 43.4685],\n                    [-3.81339, 43.4685],\n                    [-3.81339, 43.4684],\n                    [-3.81341, 43.4679],\n                    [-3.8134, 43.4677],\n                    [-3.81341, 43.4676],\n                    [-3.81028, 43.4676],\n                    [-3.80995, 43.4676],\n                    [-3.80992, 43.4676],\n                    [-3.8102, 43.4684],\n                    [-3.81022, 43.4685],\n                    [-3.81021, 43.4686],\n                    [-3.81017, 43.4687],\n                    [-3.81011, 43.4688],\n                    [-3.80993, 43.4689],\n                    [-3.8098, 43.4691],\n                    [-3.80972, 43.4691],\n                    [-3.80967, 43.4692],\n                    [-3.80964, 43.4692],\n                    [-3.80964, 43.4692],\n                    [-3.80965, 43.4692],\n                    [-3.80966, 43.4692],\n                    [-3.80973, 43.4693],\n                    [-3.80983, 43.4694],\n                    [-3.80989, 43.4695],\n                    [-3.80991, 43.4696],\n                    [-3.81002, 43.4696],\n                    [-3.81032, 43.4696]\n                ]\n            ]\n        },\n         metadata : {}\n    }\n}", 
            "title": "Sections"
        }, 
        {
            "location": "/FederatedDataAssets/#pace-of-the-city-events", 
            "text": "Events happening in the city that have been generated by citizens using the apps to report them. Mainly, PulsodelaCiudad and Cuida Santander Apps  {\n     id :  urn:oc:entity:santander:paceofthecity:event:7975 ,\n     type :  city:event ,\n     TimeInstant : {\n         type :  ISO8601 ,\n         value :  2016-10-22T08:59:59.000Z ,\n         metadata : {}\n    },\n     eventText : {\n         type :  urn:oc:attributeType:event:description ,\n         value :  Faltan dos bolardos que se han partido.  han quedado trozos por encima del raso de la acera,  con lo cual puede haber cortadas en los pies. ,\n         metadata : {}\n    },\n     eventTitle : {\n         type :  urn:oc:attributeType:event:name ,\n         value : null,\n         metadata : {}\n    },\n     eventType : {\n         type :  urn:oc:attributeType:event:type ,\n         value :  VIA_PUBLICA ,\n         metadata : {}\n    },\n     imageURL : {\n         type :  urn:oc:attributeType:imageURL ,\n         value :  http://farm9.staticflickr.com/8268/29711271953_c1b018c526.jpg ,\n         metadata : {}\n    },\n     location : {\n         type :  geo:point ,\n         value :  -3.7963962,43.4701798 ,\n         metadata : {}\n    }\n}", 
            "title": "Pace of the city events"
        }, 
        {
            "location": "/FederatedDataAssets/#tourismpoints-of-interest", 
            "text": "", 
            "title": "Tourism:Points of Interest"
        }, 
        {
            "location": "/FederatedDataAssets/#beaches", 
            "text": "{\n     id :  urn:oc:santander:tourism:poi:beach:6 ,\n     type :  poi:park ,\n     TimeInstant : {\n         type :  ISO8601 ,\n         value :  2016-10-05T13:13:51.000Z ,\n         metadata : {}\n    },\n     description:long : {\n         type :  urn:oc:attributeType:description ,\n         value :  ,\n         metadata : {}\n    },\n     description:short : {\n         type :  urn:oc:attributeType:description ,\n         value :  Debe su nombre a la roca con esta forma que hay en la orilla ,\n         metadata : {}\n    },\n     imageURL : {\n         type :  urn:oc:attributeType:imageURL ,\n         value :  http://ra.smartsantander.eu/images/playas/camello.jpg ,\n         metadata : {}\n    },\n     location : {\n         type :  geo:point ,\n         value :  -3.7752789259,43.4694983127 ,\n         metadata : {}\n    },\n     name : {\n         type :  urn:oc:attributeType:name ,\n         value :  Playa de El Camello ,\n         metadata : {}\n    }\n}", 
            "title": "Beaches"
        }, 
        {
            "location": "/FederatedDataAssets/#park-and-gardens", 
            "text": "{\n     id :  urn:oc:santander:tourism:poi:park:9 ,\n     type :  poi:park ,\n     TimeInstant : {\n         type :  ISO8601 ,\n         value :  2016-10-05T13:13:51.000Z ,\n         metadata : {}\n    },\n     description:short : {\n         type :  urn:oc:attributeType:description ,\n         value :  175.000 m2 de parque con ejemplares arb\u00f3reos destacados  ,\n         metadata : {}\n    },\n     imageURL : {\n         type :  urn:oc:attributeType:imageURL ,\n         value :  http://ra.smartsantander.eu/images/parques/ParqueMorales.jpg ,\n         metadata : {}\n    },\n     location : {\n         type :  geo:point ,\n         value :  -3.8407950000,43.4557850000 ,\n         metadata : {}\n    },\n     name : {\n         type :  urn:oc:attributeType:name ,\n         value :  Parque Dr Morales ,\n         metadata : {}\n    }\n}", 
            "title": "Park and gardens"
        }, 
        {
            "location": "/FederatedDataAssets/#shops", 
            "text": "More than 2000 assets have been created based on the information registered at Comercio Santander initiative. The list of assets is updated every day, so that, it can change during the experimentation period.   {\n     id :  urn:oc:santander:commerce:shops:2844 ,\n     type :  poi:shop ,\n     TimeInstant : {\n         type :  ISO8601 ,\n         value :  2017-01-02T11:49:32.000Z ,\n         metadata : {}\n    },\n     description : {\n         type :  urn:oc:attributeType:description ,\n         value :  Moda y complementos marca propia para mujer joven. ,\n         metadata : {}\n    },\n     description:other : {\n         type :  urn:oc:attributeType:description ,\n         value :  ,\n         metadata : {}\n    },\n     imageURL : {\n         type :  urn:oc:attributeType:imageURL ,\n         value :  http://www.comerciosantander.com/imagenes/Comercios/ED407B6E-AB2E-E9B4-BD50-FC012F619733.jpg/resize/480/640/ ,\n         metadata : {}\n    },\n     location : {\n         type :  geo:point ,\n         value :  -3.812214499999982,43.4620188 ,\n         metadata : {}\n    },\n     name : {\n         type :  urn:oc:attributeType:name ,\n         value :  SHIMAI ,\n         metadata : {}\n    }\n}", 
            "title": "Shops"
        }, 
        {
            "location": "/FederatedDataAssets/#cultural-agenda-events", 
            "text": "Real time information to Santander Auna Events.   {\n     id :  urn:oc:entity:santander:culture:auna:23269 ,\n     type :  agenda:event ,\n     TimeInstant : {\n         type :  ISO8601 ,\n         value :  2017-01-02T01:50:41.000Z ,\n         metadata : {}\n    },\n     category : {\n         type :  urn:oc:attributeType:decription ,\n         value :  Formaci\u00f3n/Talleres ,\n         metadata : {}\n    },\n     date : {\n         type :  urn:oc:attributeType:event:date ,\n         value :  Lunes 02/01/2017, todo el d\u00eda.  ,\n         metadata : {}\n    },\n     description : {\n         type :  urn:oc:attributeType:description ,\n         value :  Festival de cine independiente dirigido\u00c2 por el c\u00c3\u00a1ntabro Luis Bezeta con videocreaci\u00c3\u00b3n, ficci\u00c3\u00b3n,\u00c2 animaci\u00c3\u00b3n, performance y conciertos ,\n         metadata : {}\n    },\n     imageURL : {\n         type :  urn:oc:attributeType:url ,\n         value :  http://www.fundacionsantandercreativa.com/ekh2983gd29837gt_uploads/web_2/eventos_images/final/23269.jpg ,\n         metadata : {}\n    },\n     link : {\n         type :  urn:oc:attributeType:url ,\n         value :  http://www.fundacionsantandercreativa.com/mobile/index.php?evento%3Dinscripciones-para-el-curso-de-modelado-en-3d-con-blender ,\n         metadata : {}\n    },\n     name : {\n         type :  urn:oc:attributeType:name ,\n         value :  Inscripciones para el curso de Modelado en 3D con Blender ,\n         metadata : {}\n    },\n     subname : {\n         type :  urn:oc:attributeType:name ,\n         value :  IV Picnick Festival ,\n         metadata : {}\n    }\n}", 
            "title": "Cultural agenda events"
        }, 
        {
            "location": "/FederatedDataAssets/#news-in-the-city", 
            "text": "News generated by the different areas of governance within the municipality.   {\n     id :  urn:oc:entity:santander:news:c35672836c31190ad2badb057cee6ad4 ,\n     type :  urn:oc:entityType:news ,\n     date : {\n         type :  urn:oc:attributeType:date ,\n         value :  08-09-2016 15:41 ,\n         metadata : {}\n    },\n     description : {\n         type :  urn:oc:attributeType:description ,\n         value :  La imagen m\u00e1s ic\u00f3nica de la nueva exposici\u00f3n del centro es la fotograf\u00eda que se hicieron un grupo de artistas espa\u00f1oles en Roma con motivo de la visita que les hizo el escritor Pedro Antonio de Alarc\u00f3n en las Navidades de 1860 ,\n         metadata : {}\n    },\n     news:title : {\n         type :  urn:oc:attributeType:title ,\n         value :  El CDIS recorre el proceso de formaci\u00f3n del artista a trav\u00e9s de la figura de Di\u00f3scoro Puebla ,\n         metadata : {}\n    },\n     url : {\n         type :  urn:oc:attributeType:url ,\n         value :  http://santander.es/noticia/cultura/cdis-recorre-proceso-formacion-del-artista-traves-figura-diascoro-puebla ,\n         metadata : {}\n    }\n}", 
            "title": "News in the city"
        }, 
        {
            "location": "/FederatedDataAssets/#environmental-sensors", 
            "text": "", 
            "title": "Environmental sensors"
        }, 
        {
            "location": "/FederatedDataAssets/#mobile-nodes", 
            "text": "{\n     id :  urn:oc:entity:santander:environmental:mobile:3028 ,\n     type :  urn:oc:entityType:mobileSensor ,\n     TimeInstant : {\n         type :  ISO8601 ,\n         value :  2017-01-09T19:26:35.000Z ,\n         metadata : {}\n    },\n     chemicalAgentAtmosphericConcentration:CO : {\n         type :  urn:oc:attributeType:chemicalAgentAtmosphericConcentration:CO ,\n         value : 0.1,\n         metadata : {}\n    },\n     chemicalAgentAtmosphericConcentration:O3 : {\n         type :  urn:oc:attributeType:chemicalAgentAtmosphericConcentration:O3 ,\n         value : 79,\n         metadata : {}\n    },\n     chemicalAgentAtmosphericConcentration:airParticles : {\n         type :  urn:oc:attributeType:chemicalAgentAtmosphericConcentration:airParticles ,\n         value : 0.09,\n         metadata : {}\n    },\n     datasource : {\n         type :  urn:oc:attributeType:datasource ,\n         value :  http://mu.tlmat.unican.es:8098/ ,\n         metadata : {\n             datasourceInternal : {\n                 type :  urn:oc:dataType:boolean ,\n                 value :  boolean \n            }\n        }\n    },\n     direction:heading : {\n         type :  urn:oc:attributeType:direction:heading ,\n         value : 87,\n         metadata : {}\n    },\n     location : {\n         type :  geo:point ,\n         value :  -3.811630,43.461900 ,\n         metadata : {}\n    },\n     mileage:total : {\n         type :  urn:oc:attributeType:mileage:total ,\n         value : 18825,\n         metadata : {}\n    },\n     origin : {\n         type :  urn:oc:attributeType:origin ,\n         value :  SmartSantander ,\n         metadata : {}\n    },\n     position:altitude : {\n         type :  urn:oc:attributeType:position:altitude ,\n         value : 13,\n         metadata : {}\n    },\n     relativeHumidity : {\n         type :  urn:oc:attributeType:relativeHumidity ,\n         value : 46,\n         metadata : {}\n    },\n     reputation : {\n         type :  urn:oc:attributeType:reputation ,\n         value : -1,\n         metadata : {\n             unit : {\n                 type :  urn:oc:dataType:string ,\n                 value :  urn:oc:uom:index \n            },\n             description : {\n                 type :  urn:oc:dataType:string ,\n                 value :  The reputation scores vary from 0 to 1. -1 means that there is not scores already calculated \n            }\n        }\n    },\n     speed:instantaneous : {\n         type :  urn:oc:attributeType:speed:instantaneous ,\n         value : 27,\n         metadata : {}\n    },\n     temperature:ambient : {\n         type :  urn:oc:attributeType:temperature:ambient ,\n         value : 10.7,\n         metadata : {}\n    }\n}", 
            "title": "Mobile Nodes"
        }, 
        {
            "location": "/FederatedDataAssets/#noise-repeaters", 
            "text": "{\n     id :  urn:oc:entity:santander:environmental:fixed:737 ,\n     type :  urn:oc:entityType:repeater:noise ,\n     TimeInstant : {\n         type :  ISO8601 ,\n         value :  2017-01-02T11:01:06.000Z ,\n         metadata : {}\n    },\n     datasource : {\n         type :  urn:oc:attributeType:datasource ,\n         value :  http://mu.tlmat.unican.es:8098/ ,\n         metadata : {\n             datasourceInternal : {\n                 type :  urn:oc:dataType:boolean ,\n                 value :  boolean \n            }\n        }\n    },\n     location : {\n         type :  geo:point ,\n         value :  -3.81289,43.45487 ,\n         metadata : {}\n    },\n     origin : {\n         type :  urn:oc:attributeType:origin ,\n         value :  SmartSantander ,\n         metadata : {}\n    },\n     reputation : {\n         type :  urn:oc:attributeType:reputation ,\n         value :  -1 ,\n         metadata : {\n             unit : {\n                 type :  urn:oc:dataType:string ,\n                 value :  urn:oc:uom:index \n            },\n             description : {\n                 type :  urn:oc:dataType:string ,\n                 value :  The reputation scores vary from 0 to 1. -1 means that there is not scores already calculated \n            }\n        }\n    },\n     soundPressureLevel:ambient : {\n         type :  urn:oc:attributeType:soundPressureLevel:ambient ,\n         value :  50.50 ,\n         metadata : {}\n    }\n }", 
            "title": "Noise repeaters"
        }, 
        {
            "location": "/FederatedDataAssets/#luminosity-repeaters", 
            "text": "{\n     id :  urn:oc:entity:santander:environmental:fixed:680 ,\n     type :  urn:oc:entityType:repeater:luminosity ,\n     TimeInstant : {\n         type :  ISO8601 ,\n         value :  2013-04-05T11:20:19.000Z ,\n         metadata : {}\n    },\n     datasource : {\n         type :  urn:oc:attributeType:datasource ,\n         value :  http://mu.tlmat.unican.es:8098/ ,\n         metadata : {\n             datasourceInternal : {\n                 type :  urn:oc:dataType:boolean ,\n                 value :  boolean \n            }\n        }\n    },\n     illuminance : {\n         type :  urn:oc:attributeType:illuminance ,\n         value : 3,\n         metadata : {}\n    },\n     location : {\n         type :  geo:point ,\n         value :  -3.82052,43.46023 ,\n         metadata : {}\n    },\n     origin : {\n         type :  urn:oc:attributeType:origin ,\n         value :  SmartSantander ,\n         metadata : {}\n    },\n     reputation : {\n         type :  urn:oc:attributeType:reputation ,\n         value :  -1 ,\n         metadata : {\n             unit : {\n                 type :  urn:oc:dataType:string ,\n                 value :  urn:oc:uom:index \n            },\n             description : {\n                 type :  urn:oc:dataType:string ,\n                 value :  The reputation scores vary from 0 to 1. -1 means that there is not scores already calculated \n            }\n        }\n    },\n     temperature:ambient : {\n         type :  urn:oc:attributeType:temperature:ambient ,\n         value : 4,\n         metadata : {}\n    }\n}", 
            "title": "luminosity repeaters"
        }, 
        {
            "location": "/UrbanDataObservatory/", 
            "text": "Urban Data Observatory\n\n\nThe \nUrban Data Observatory\n is the main entry point to the OrganiCity platform assets.\n\n\n\nPlease notice some features might be under development at the time.\n\n\n\n\n\n\nIt provides data exploration functionalities across three main interface modules: the navigation modules, involving the spatial and filter views, the text search and the assets visualization. The three modules together are designed to perform as an integrated ecosystem, supporting users on the search and understanding of useful and valuable data assets\n\n\nNavigation\n\n\nThe map interface provides geographical exploration of assets at multiple scales. In order to maintain a low entry barrier the interface is modelled on other existing map services the users might be familiar as Google Maps. This includes the following key features:\n- Manually navigating the map by standard zoom and pan actions.\n- Browsing the map by clicking at specific assets.\n- Incremental search featuring simple places search.\n- Client geolocation in order to center the map on to the user location.\n\n\n\n\nSearch\n\n\nThe top search bar allows to search for assets name and metadata with auto-complete features. Results are returned based on the recommendation engine. The search offers a simplified list of the available resources that users can quickly access without any intermediate process.\n\n\nOn the upcoming relases this will be completed by the \nAdvanced search\n. This allowd using information related to assets metadata, such as provider, typology or update time. The result is then shown in a permanent list format allowing users to browser the obtained results in detail.\n\n\n\n\nAssets Visualization\n\n\nThe Assets Visualization is designed following a system of horizontal blocks. The anatomy of the assets views contains the following sections:\n\n\n\n\n[A] Data Location:\n\n\nThis module shows the geographical location of a resource on the map as described on the previous section. OC Assets always include location information as a common metadata. This can come in the form of:\n\n\n\n\nPoint:\n Assets specifically geolocated as a single spot. This is indicated on the map using traditional markers.\n17\n\n\nRegion:\n Assets geolocated as a closed collection of points defining an area. This is indicated by using an overlay shape.\n\n\nPath:\n Assets geolocated as an open collection of points. This is indicated as an open stroke connecting all the points.\n\n\n\n\n[B] and [C] Data Visualization:\n\n\nThis module is designed to support users on assets data exploration:\n\n\n\n\nLatest data module:\n This is designed as a carousel view displaying the latests data values of multiple attributes. It can work in conjunction with other data views or on its own if just latest data is available for an asset.\n\n\n\n\nData insights module:\n This module provides historical visualization of the data by using the Data Sources API. Different view modules are developed in order to fit the visualization requirements of each datasource.\n\n\n\n\n\n\nSeries chart module:\n This is designed as a chart view capable of dealing with numeric data representation over time as the one coming from many IoT resources. The module includes date navigation options as date pickers in order to access the historical data based on its time frame. It also features the possibility of comparing two metrics simultaneously.\n\n\n\n\n\n\nStatic data module:\n This is designed as a simple, more informative view capable of dealing with unstructured resources where data cannot be processed. It offers basic information about the asset and allows the user to download the original source as a file. The file type might vary depending on the asset and support for multiple formats is planned.\n\n\n\n\n\n\n\n\n\n\n[D] Assets details and metadata:\n\n\nThis supplies a detailed insight on the asset metadata. It provides information about the resource such as the provider, the service or the asset type, and thus supports users in getting a clear understanding about the data they are seeing.\n\n\n[E] Provider details:\n\n\nThis module provides in-depth information about the provider of the asset. It is designed to give advance users as experimenters a clearer understanding of what asset they are browsing..\n\n\n[F] Comments:\n\n\nThis module allows users to comment on an asset.", 
            "title": "Urban Data Observatory"
        }, 
        {
            "location": "/UrbanDataObservatory/#urban-data-observatory", 
            "text": "The  Urban Data Observatory  is the main entry point to the OrganiCity platform assets.  \nPlease notice some features might be under development at the time.   It provides data exploration functionalities across three main interface modules: the navigation modules, involving the spatial and filter views, the text search and the assets visualization. The three modules together are designed to perform as an integrated ecosystem, supporting users on the search and understanding of useful and valuable data assets", 
            "title": "Urban Data Observatory"
        }, 
        {
            "location": "/UrbanDataObservatory/#navigation", 
            "text": "The map interface provides geographical exploration of assets at multiple scales. In order to maintain a low entry barrier the interface is modelled on other existing map services the users might be familiar as Google Maps. This includes the following key features:\n- Manually navigating the map by standard zoom and pan actions.\n- Browsing the map by clicking at specific assets.\n- Incremental search featuring simple places search.\n- Client geolocation in order to center the map on to the user location.", 
            "title": "Navigation"
        }, 
        {
            "location": "/UrbanDataObservatory/#search", 
            "text": "The top search bar allows to search for assets name and metadata with auto-complete features. Results are returned based on the recommendation engine. The search offers a simplified list of the available resources that users can quickly access without any intermediate process.  On the upcoming relases this will be completed by the  Advanced search . This allowd using information related to assets metadata, such as provider, typology or update time. The result is then shown in a permanent list format allowing users to browser the obtained results in detail.", 
            "title": "Search"
        }, 
        {
            "location": "/UrbanDataObservatory/#assets-visualization", 
            "text": "The Assets Visualization is designed following a system of horizontal blocks. The anatomy of the assets views contains the following sections:", 
            "title": "Assets Visualization"
        }, 
        {
            "location": "/UrbanDataObservatory/#a-data-location", 
            "text": "This module shows the geographical location of a resource on the map as described on the previous section. OC Assets always include location information as a common metadata. This can come in the form of:   Point:  Assets specifically geolocated as a single spot. This is indicated on the map using traditional markers.\n17  Region:  Assets geolocated as a closed collection of points defining an area. This is indicated by using an overlay shape.  Path:  Assets geolocated as an open collection of points. This is indicated as an open stroke connecting all the points.", 
            "title": "[A] Data Location:"
        }, 
        {
            "location": "/UrbanDataObservatory/#b-and-c-data-visualization", 
            "text": "This module is designed to support users on assets data exploration:   Latest data module:  This is designed as a carousel view displaying the latests data values of multiple attributes. It can work in conjunction with other data views or on its own if just latest data is available for an asset.   Data insights module:  This module provides historical visualization of the data by using the Data Sources API. Different view modules are developed in order to fit the visualization requirements of each datasource.    Series chart module:  This is designed as a chart view capable of dealing with numeric data representation over time as the one coming from many IoT resources. The module includes date navigation options as date pickers in order to access the historical data based on its time frame. It also features the possibility of comparing two metrics simultaneously.    Static data module:  This is designed as a simple, more informative view capable of dealing with unstructured resources where data cannot be processed. It offers basic information about the asset and allows the user to download the original source as a file. The file type might vary depending on the asset and support for multiple formats is planned.", 
            "title": "[B] and [C] Data Visualization:"
        }, 
        {
            "location": "/UrbanDataObservatory/#d-assets-details-and-metadata", 
            "text": "This supplies a detailed insight on the asset metadata. It provides information about the resource such as the provider, the service or the asset type, and thus supports users in getting a clear understanding about the data they are seeing.", 
            "title": "[D] Assets details and metadata:"
        }, 
        {
            "location": "/UrbanDataObservatory/#e-provider-details", 
            "text": "This module provides in-depth information about the provider of the asset. It is designed to give advance users as experimenters a clearer understanding of what asset they are browsing..", 
            "title": "[E] Provider details:"
        }, 
        {
            "location": "/UrbanDataObservatory/#f-comments", 
            "text": "This module allows users to comment on an asset.", 
            "title": "[F] Comments:"
        }, 
        {
            "location": "/HowToAccessToken/", 
            "text": "Tutorial: How to Access Token\n\n\nAccess Tokens issued by Organicity Accounts are \nvalid for 5 minutes\n. They can be used in the backend or in the frontend of the web-application.\nThe Access Tokens are not just a random tokens, Organicity Accounts returns \nOpenID Connect Tokens\n.\nThe \nOpenID Connect Protocol\n is an extention for OAuth2.\n\n\nOpenID Connect Tokens + JSON Web Tokens\n\n\nOpenID Connect Tokens are represented as \nJSON Web Tokens\n (JWT).\nA JWT is represented as a sequence of BASE64-encoded parts, separated by a dot. An example:\n\n\nPART_1\n.\nPART_2\n.\nPART_3\n\n\n\n\n\n\n\nPART_1\n is the MAC in JSON, which is used by the server to sign the JWT (usually SHA-256)\n\n\nPART_2\n contains a set of claims in JSON\n\n\nPART_3\n contains the signature as \nJSON WebSignature\n (JWS)\n\n\n\n\nWe will focus on the \nPART_2\n: contains a set of claims in JSON, as they are specified by the\n\nOpen ID connect specification\n. Some examples:\n\n\n\n\nsub\n: The \nSubject Identifier\n, which is the unique ID of the user\n\n\naud\n: The \nAudience\n, that this ID Token is intended for (e.g., your \nclient_id\n)\n\n\nexp\n: Expiration time on or after which the ID Token MUST NOT be accepted for processing\n\n\n\n\nAdditonally, it contains the \nroles\n of the user, and some informations about the user.\n\n\nAn example:\n\n\n{\n  \njti\n: \n01c68b6a-e3ec-4472-9a80-9f53ba266104\n,\n  \nexp\n: 1475225200,\n  ...\n  \niss\n: \nhttps://accounts.organicity.eu/realms/organicity\n,\n  \naud\n: \nexample\n,\n  \nsub\n: \ncf2c1723-3369-4123-8b32-49abe71c0e57\n,\n  \ntyp\n: \nBearer\n,\n  ...\n  \nrealm_access\n: {\n    \nroles\n: [\n      \noffline_access\n,\n      \nexperimenter\n\n    ]\n  },\n  ...\n  \nname\n: \nDennis Boldt\n,\n  \npreferred_username\n: \nboldt\n,\n  \ngiven_name\n: \nDennis\n,\n  \nfamily_name\n: \nBoldt\n,\n  \nemail\n: \nboldt@itm.uni-luebeck.de\n\n}\n\n\n\n\nYou're application can decode and verify the JWT and use that informations.\n\n\nVerify Access Tokens\n\n\njwt.io\n\n\nAccess Tokens can be verified by using http://jwt.io during the development. Check, if the JSON attribute \npreferred_username\n equals your \nusername\n. Thus, the application performs \nactions in name of the user\n (e.g., you).\n\n\nLibraries\n\n\nIf you have to work with the Access Tokens within your code, there are some nice JWT libraries:\n\n\n\n\nNode: \njsonwebtoken\n\n\nJava/Android: \njjwt\n\n\nBased on this, we already created a simple tool, which \ncan be found here\n.\n\n\n\n\n\n\nPHP: \nphp-jwt\n\n\n\n\nTo verirfy the token, you need the public certificate, which is \navailable here\n.\n\n\nOrganicity APIs\n\n\nThese \nAccess Tokens\n can be used as Bearer Token to call different \nOrganicity APIs\n, e.g., to\n\npush an Assets to the Organicity Experimenter Site\n. An HTTP header example:\n\n\nAuthorization: Bearer \nACCCESS_TOKEN", 
            "title": "How To Access Token"
        }, 
        {
            "location": "/HowToAccessToken/#tutorial-how-to-access-token", 
            "text": "Access Tokens issued by Organicity Accounts are  valid for 5 minutes . They can be used in the backend or in the frontend of the web-application.\nThe Access Tokens are not just a random tokens, Organicity Accounts returns  OpenID Connect Tokens .\nThe  OpenID Connect Protocol  is an extention for OAuth2.", 
            "title": "Tutorial: How to Access Token"
        }, 
        {
            "location": "/HowToAccessToken/#openid-connect-tokens-json-web-tokens", 
            "text": "OpenID Connect Tokens are represented as  JSON Web Tokens  (JWT).\nA JWT is represented as a sequence of BASE64-encoded parts, separated by a dot. An example:  PART_1 . PART_2 . PART_3    PART_1  is the MAC in JSON, which is used by the server to sign the JWT (usually SHA-256)  PART_2  contains a set of claims in JSON  PART_3  contains the signature as  JSON WebSignature  (JWS)   We will focus on the  PART_2 : contains a set of claims in JSON, as they are specified by the Open ID connect specification . Some examples:   sub : The  Subject Identifier , which is the unique ID of the user  aud : The  Audience , that this ID Token is intended for (e.g., your  client_id )  exp : Expiration time on or after which the ID Token MUST NOT be accepted for processing   Additonally, it contains the  roles  of the user, and some informations about the user.  An example:  {\n   jti :  01c68b6a-e3ec-4472-9a80-9f53ba266104 ,\n   exp : 1475225200,\n  ...\n   iss :  https://accounts.organicity.eu/realms/organicity ,\n   aud :  example ,\n   sub :  cf2c1723-3369-4123-8b32-49abe71c0e57 ,\n   typ :  Bearer ,\n  ...\n   realm_access : {\n     roles : [\n       offline_access ,\n       experimenter \n    ]\n  },\n  ...\n   name :  Dennis Boldt ,\n   preferred_username :  boldt ,\n   given_name :  Dennis ,\n   family_name :  Boldt ,\n   email :  boldt@itm.uni-luebeck.de \n}  You're application can decode and verify the JWT and use that informations.", 
            "title": "OpenID Connect Tokens + JSON Web Tokens"
        }, 
        {
            "location": "/HowToAccessToken/#verify-access-tokens", 
            "text": "", 
            "title": "Verify Access Tokens"
        }, 
        {
            "location": "/HowToAccessToken/#jwtio", 
            "text": "Access Tokens can be verified by using http://jwt.io during the development. Check, if the JSON attribute  preferred_username  equals your  username . Thus, the application performs  actions in name of the user  (e.g., you).", 
            "title": "jwt.io"
        }, 
        {
            "location": "/HowToAccessToken/#libraries", 
            "text": "If you have to work with the Access Tokens within your code, there are some nice JWT libraries:   Node:  jsonwebtoken  Java/Android:  jjwt  Based on this, we already created a simple tool, which  can be found here .    PHP:  php-jwt   To verirfy the token, you need the public certificate, which is  available here .", 
            "title": "Libraries"
        }, 
        {
            "location": "/HowToAccessToken/#organicity-apis", 
            "text": "These  Access Tokens  can be used as Bearer Token to call different  Organicity APIs , e.g., to push an Assets to the Organicity Experimenter Site . An HTTP header example:  Authorization: Bearer  ACCCESS_TOKEN", 
            "title": "Organicity APIs"
        }, 
        {
            "location": "/HowToAuthenticateAnUser/", 
            "text": "Tutorial: How to Authenticate a User for your Application\n\n\nGoal of this tutorial\n:\n\n\n\n\nAuthenticate a user for your own application with \nOrganicity Accounts\n.\n\n\n\n\nPreconditions\n:\n\n To be able to authenticate users for your application, you must have the role \nexperimenter\n assigned.\n\n You created an experiment within the \nOrganicity Experimenter Portal\n.\n* The Experimenter Portal provides you a \nclient_id\n and a \nclient_secret\n, both is needed in this tutorial.\n\n\nOrganicity Accounts\n provides unified user management to the whole Organicity platform. Of course, a unified experience requires all Organicity components to properly talk to Organicity Accounts. This document guides through the process of setting your component up.\n\n\nTODO\n\n\n\n\nScopes\n\n\nRefresh_token\n\n\n\n\nOAuth2 Grants\n\n\nOrganicity Accounts\n is an \nOAuth2 server\n, which provides a Single Sign-On (SSO) service. Thus, you can login to\nall Organicity Components by using one single account. In case of web-applications, you even just need to login once.\nProbably you know this from Google: To use gmail, youtube or the calendar, you use the same account.\n\n\n\n\n\nClient ID + Client Secret\n\n\nAfter creating your experiment within the \nExperimenter Portal\n, you will receive a \nclient_id\n and a \nclient_secret\n:\n\n\n\n\nThe \nclient_id\n is public, so it can be added to the source code, which is uses it to build a login URL finally.\n\n\nThe \nclient_secret\n is private and must be kept confidential!\n\n\n\n\nGrant Types\n\n\nThe OAuth2 specification\n provides several \nGrant Types\n for different types of applications:\n\n\n\n\nAuthorization Code Grant\n: Used for web-applications with a server-side component, which can keep the \nclient_id\n confidential.\n\n\nImplicit Grant\n: Used for browser-based applications (e.g., JavaScript-only applications without a server-side component) or mobile apps.\n\n\n\n\nIn this two grants, after a successful login, the applications will act \nin name of the user\n. There is one more important grant:\n\n\n\n\nClient Credential Grant\n: Only used for application, which \nact on their own\n.\n\n\n\n\nPer default, this grant ist not enabled for experiments.\n\n\nEndpoints\n\n\nThe following endpointd are needed by the grants described below:\n\n\n\n\nAuthorization Endpoint\n: https://accounts.organicity.eu/realms/organicity/protocol/openid-connect/auth\n\n\nToken Endpoint\n: https://accounts.organicity.eu/realms/organicity/protocol/openid-connect/token\n\n\n\n\nAuthorization Code Grant\n\n\nAs said before, this grant is used for applications running on a web server. Thus, the source code of the web-application\nkeeps the \nclient_secret\n confidential. This grant is divided in two flows:\n\n\nFor the \nfirst flow\n, you must extend the authorization endpoint with the following\nquery parameters:\n\n\n\n\nclient_id=\nCLIENT_ID\n: Here, you must include your \nclient_id\n, which is provided by the Experimenter Portal\n\n\nresponse_type=code\n: Here, the response type must be \ncode\n\n\nredirect_uri=\nREDIRECT_URI\n: Within the Experimenter Portal, you can configure Redirect URIs. After a successful login, the user is redirected to that URI.\n\n\n\n\nHINT\n: Make sure, that you're web-application, and thus the \nredirect_uri\n, runs on HTTPS. This ensures, that the exchanged data cannot be intercepted during the login process.\n\n\nThus, the full authorization URL looks as follows:\n\n\nhttps://accounts.organicity.eu/realms/organicity/protocol/openid-connect/auth?client_id=\nCLIENT_ID\nresponse_type=code\nredirect_uri=\nREDIRECT_URI\n\n\n\n\n\nAn example:\n\n\nhttps://accounts.organicity.eu/realms/organicity/protocol/openid-connect/auth?client_id=example\nresponse_type=code\nredirect_uri=https://example.com/callback\n\n\n\n\nCalling this URL, the users must login with their credentials. If the login is successful, the user is redirected back to the configured redirect URI.\nOAuth2 appends one parameter to the URL:\n\n\n\n\ncode\n: This is the so called \nauthorization_code\n, which is needed in the next step.\n\n\n\n\nThus, the full callback URL looks as follows:\n\n\nREDIRECT_URI\n?code=\nCODE\n\n\n\n\n\nAn example:\n\n\nhttps://example.com/callback?code=0123456789\n\n\n\n\nNow, the \nsecond flow\n starts. You're web-application takes this \ncode\n and must send an HTTP POST request to the\n\ntoken endpoint\n, with the following parameters:\n\n\n\n\nclient_id=\nCLIENT_ID\n: Here, you must include your \nclient_id\n, which is provided by the Experimenter Portal\n\n\ngrant_type=authorization_code\n: The \ngrant_type\n must be \nauthorization_code\n. Here you see, where the name comes from.\n\n\nredirect_uri=\nREDIRECT_URI\n: The same URI as before\n\n\ncode=\nCODE\n: The code from the callback URL\n\n\nclient_secret=\nCLIENT_SECRET\n: Here, you must include your \nclient_secret\n, which is provided by the Experimenter Portal\n\n\n\n\nHINT\n: Make sure, that this call is done from the web-application in the background, thus the \nclient_secret\n stays confidential!\n\n\nAn example:\n\n\nTODO\n\n\n\n\nCalling this URL, the server verifies your credentials and the code. If successful, the server returns a JSON, which contains the following attributes:\n\n\n\n\ntoken_type\n: This is usually \nBearer\n\n\naccess_token\n: this is the \nAccess Token\n in JSON\n\n\nexpires_in\n: a number in seconds, how long the Access Token is valid\n\n\n\n\nAn example:\n\n\n{\n    \naccess_token\n: \nACCESS_TOKEN\n,\n    \ntoken_type\n: \nbearer\n,\n    \nexpires_in\n: 300,\n}\n\n\n\n\nSee here for further details on the Access Tokens\n.\n\n\nImplicit Grant\n\n\nHINT\n:\n\n\nThis grant is used for browser-based applications (e.g., JavaScript-only applications without a server-side component) or mobile apps.\nThese kind of applications cannot keep the \nclient_secret\n confidential. The Implicit Grant has just one flow, which returns\nthe Access Token directly. The Grant is called \nimplicit\n, as no intermediate credentials (such as an authorization code) are issued.\n\n\nFor this grant, you must extend the authorization endpoint with the following query parameters:\n\n\n\n\nclient_id=\nCLIENT_ID\n: Here, you must include your \nclient_id\n, which is provided by the Experimenter Portal\n\n\nresponse_type=token\n: Here, the response type must be \ntoken\n (becaue you'll get an Access Token immediately)\n\n\nredirect_uri=\nREDIRECT_URI\n: Within the Experimenter Portal, you can configure Redirect URIs. After a successful login, the user is redirected to that URI.\n\n\n\n\nHINT\n: Make sure, that you're web-application, and thus the \nredirect_uri\n, runs on HTTPS. This ensures, that the exchanged data cannot be intercepted during the login process.\n\n\nThus, the full authorization URL looks as follows:\n\n\nhttps://accounts.organicity.eu/realms/organicity/protocol/openid-connect/auth?client_id=\nCLIENT_ID\nresponse_type=token\nredirect_uri=\nREDIRECT_URI\n\n\n\n\n\nAn example:\n\n\nhttps://accounts.organicity.eu/realms/organicity/protocol/openid-connect/auth?client_id=example\nresponse_type=token\nredirect_uri=https://example.com/callback\n\n\n\n\nCalling this URL, the users must login with their credentials. If the login is successful, the user is redirected back to the configured redirect URI.\nOAuth2 appends one parameter to the URL:\n\n\n\n\ntoken\n: This is the Access Token in JSON\n\n\n\n\nThe JSON contains the following attributes (similar to the \nAuthorization Code Flow\n):\n\n\n\n\ntoken_type\n: This is usually \nBearer\n\n\naccess_token\n: this is the \nAccess Token\n itself\n\n\nexpires_in\n: a number in seconds, how long the Access Token is valid\n\n\n\n\nAn example:\n\n\n{\n    \naccess_token\n: \nACCESS_TOKEN\n,\n    \ntoken_type\n: \nbearer\n,\n    \nexpires_in\n: 300,\n}\n\n\n\n\nSee here for further details on the Access Tokens\n.\n\n\nClient Credential Grant\n\n\nHINT:\n Per default, this grant ist not enabled for experiments.\n\n\nThe \nClient Credential Grant\n is used for applications, which \nact on their own\n. For this, the \nService Account\n of the Client must be enabled.\n\n\nService Accounts usually apply for Organicity Accounts, but can also be used by e.g. experiments. To use a Service Account, you perform a simple HTTPS with your \nclient_id\n and \nclient_secret\n call, which will return a suitable Access Token:\n\n\nPOST /realms/organicity/protocol/openid-connect/token HTTP/1.1\nHost: accounts.organicity.eu\nAuthorization: Basic \nBASE64_ENCODE(client_id:client_secret)\n\nContent-Type: application/x-www-form-urlencoded\n\ngrant_type=client_credentials\n\n\n\n\nThe Authorization header contains your \nclient_id\n and \nclient_secret\n encoded with HTTP basic authentication. For details on how to create this field, \nsee here\n.\n\n\nThe call returns a JSON record, which contains the following attributes:\n\n\n\n\ntoken_type\n: This is usually \nBearer\n\n\naccess_token\n: this is the \nAccess Token\n itself\n\n\nexpires_in\n: a number in seconds, how long the Access Token is valid\n\n\n\n\nAn example:\n\n\n{\n    \naccess_token\n: \nACCESS_TOKEN\n,\n    \ntoken_type\n: \nbearer\n,\n    \nexpires_in\n: 300,\n}\n\n\n\n\nSee here for further details on the Access Tokens\n.\n\n\nLibraries\n\n\nOf course, you do not have to write you're own OAuth2 adapter. You can use well-tested existing librabries, like the following:\n\n\n\n\nNode.js with Passport: \npassport-oauth2\n\n\nPHP: \noauth2-client\n\n\n\n\nFor these two, we created two minimal working examples:\n\n\n\n\nNode.js with Passport:  \naccounts-demo-passport\n\n\nPHP: \naccounts-demo-php\n\n\n\n\nIn order to talk to Organicity Accounts, your component needs to talk to the Accounts Server using any of the above mentioned grants.\n\n\nSources on OAuth2\n\n\n\n\nhttps://www.digitalocean.com/community/tutorials/an-introduction-to-oauth-2\n\n\nhttps://alexbilbie.com/guide-to-oauth-2-grants/\n\n\nhttps://aaronparecki.com/2012/07/29/2/oauth2-simplified", 
            "title": "How To Authenticate An User"
        }, 
        {
            "location": "/HowToAuthenticateAnUser/#tutorial-how-to-authenticate-a-user-for-your-application", 
            "text": "Goal of this tutorial :   Authenticate a user for your own application with  Organicity Accounts .   Preconditions :  To be able to authenticate users for your application, you must have the role  experimenter  assigned.  You created an experiment within the  Organicity Experimenter Portal .\n* The Experimenter Portal provides you a  client_id  and a  client_secret , both is needed in this tutorial.  Organicity Accounts  provides unified user management to the whole Organicity platform. Of course, a unified experience requires all Organicity components to properly talk to Organicity Accounts. This document guides through the process of setting your component up.", 
            "title": "Tutorial: How to Authenticate a User for your Application"
        }, 
        {
            "location": "/HowToAuthenticateAnUser/#todo", 
            "text": "Scopes  Refresh_token", 
            "title": "TODO"
        }, 
        {
            "location": "/HowToAuthenticateAnUser/#oauth2-grants", 
            "text": "Organicity Accounts  is an  OAuth2 server , which provides a Single Sign-On (SSO) service. Thus, you can login to\nall Organicity Components by using one single account. In case of web-applications, you even just need to login once.\nProbably you know this from Google: To use gmail, youtube or the calendar, you use the same account.", 
            "title": "OAuth2 Grants"
        }, 
        {
            "location": "/HowToAuthenticateAnUser/#client-id-client-secret", 
            "text": "After creating your experiment within the  Experimenter Portal , you will receive a  client_id  and a  client_secret :   The  client_id  is public, so it can be added to the source code, which is uses it to build a login URL finally.  The  client_secret  is private and must be kept confidential!", 
            "title": "Client ID + Client Secret"
        }, 
        {
            "location": "/HowToAuthenticateAnUser/#grant-types", 
            "text": "The OAuth2 specification  provides several  Grant Types  for different types of applications:   Authorization Code Grant : Used for web-applications with a server-side component, which can keep the  client_id  confidential.  Implicit Grant : Used for browser-based applications (e.g., JavaScript-only applications without a server-side component) or mobile apps.   In this two grants, after a successful login, the applications will act  in name of the user . There is one more important grant:   Client Credential Grant : Only used for application, which  act on their own .   Per default, this grant ist not enabled for experiments.", 
            "title": "Grant Types"
        }, 
        {
            "location": "/HowToAuthenticateAnUser/#endpoints", 
            "text": "The following endpointd are needed by the grants described below:   Authorization Endpoint : https://accounts.organicity.eu/realms/organicity/protocol/openid-connect/auth  Token Endpoint : https://accounts.organicity.eu/realms/organicity/protocol/openid-connect/token", 
            "title": "Endpoints"
        }, 
        {
            "location": "/HowToAuthenticateAnUser/#authorization-code-grant", 
            "text": "As said before, this grant is used for applications running on a web server. Thus, the source code of the web-application\nkeeps the  client_secret  confidential. This grant is divided in two flows:  For the  first flow , you must extend the authorization endpoint with the following\nquery parameters:   client_id= CLIENT_ID : Here, you must include your  client_id , which is provided by the Experimenter Portal  response_type=code : Here, the response type must be  code  redirect_uri= REDIRECT_URI : Within the Experimenter Portal, you can configure Redirect URIs. After a successful login, the user is redirected to that URI.   HINT : Make sure, that you're web-application, and thus the  redirect_uri , runs on HTTPS. This ensures, that the exchanged data cannot be intercepted during the login process.  Thus, the full authorization URL looks as follows:  https://accounts.organicity.eu/realms/organicity/protocol/openid-connect/auth?client_id= CLIENT_ID response_type=code redirect_uri= REDIRECT_URI   An example:  https://accounts.organicity.eu/realms/organicity/protocol/openid-connect/auth?client_id=example response_type=code redirect_uri=https://example.com/callback  Calling this URL, the users must login with their credentials. If the login is successful, the user is redirected back to the configured redirect URI.\nOAuth2 appends one parameter to the URL:   code : This is the so called  authorization_code , which is needed in the next step.   Thus, the full callback URL looks as follows:  REDIRECT_URI ?code= CODE   An example:  https://example.com/callback?code=0123456789  Now, the  second flow  starts. You're web-application takes this  code  and must send an HTTP POST request to the token endpoint , with the following parameters:   client_id= CLIENT_ID : Here, you must include your  client_id , which is provided by the Experimenter Portal  grant_type=authorization_code : The  grant_type  must be  authorization_code . Here you see, where the name comes from.  redirect_uri= REDIRECT_URI : The same URI as before  code= CODE : The code from the callback URL  client_secret= CLIENT_SECRET : Here, you must include your  client_secret , which is provided by the Experimenter Portal   HINT : Make sure, that this call is done from the web-application in the background, thus the  client_secret  stays confidential!  An example:  TODO  Calling this URL, the server verifies your credentials and the code. If successful, the server returns a JSON, which contains the following attributes:   token_type : This is usually  Bearer  access_token : this is the  Access Token  in JSON  expires_in : a number in seconds, how long the Access Token is valid   An example:  {\n     access_token :  ACCESS_TOKEN ,\n     token_type :  bearer ,\n     expires_in : 300,\n}  See here for further details on the Access Tokens .", 
            "title": "Authorization Code Grant"
        }, 
        {
            "location": "/HowToAuthenticateAnUser/#implicit-grant", 
            "text": "HINT :  This grant is used for browser-based applications (e.g., JavaScript-only applications without a server-side component) or mobile apps.\nThese kind of applications cannot keep the  client_secret  confidential. The Implicit Grant has just one flow, which returns\nthe Access Token directly. The Grant is called  implicit , as no intermediate credentials (such as an authorization code) are issued.  For this grant, you must extend the authorization endpoint with the following query parameters:   client_id= CLIENT_ID : Here, you must include your  client_id , which is provided by the Experimenter Portal  response_type=token : Here, the response type must be  token  (becaue you'll get an Access Token immediately)  redirect_uri= REDIRECT_URI : Within the Experimenter Portal, you can configure Redirect URIs. After a successful login, the user is redirected to that URI.   HINT : Make sure, that you're web-application, and thus the  redirect_uri , runs on HTTPS. This ensures, that the exchanged data cannot be intercepted during the login process.  Thus, the full authorization URL looks as follows:  https://accounts.organicity.eu/realms/organicity/protocol/openid-connect/auth?client_id= CLIENT_ID response_type=token redirect_uri= REDIRECT_URI   An example:  https://accounts.organicity.eu/realms/organicity/protocol/openid-connect/auth?client_id=example response_type=token redirect_uri=https://example.com/callback  Calling this URL, the users must login with their credentials. If the login is successful, the user is redirected back to the configured redirect URI.\nOAuth2 appends one parameter to the URL:   token : This is the Access Token in JSON   The JSON contains the following attributes (similar to the  Authorization Code Flow ):   token_type : This is usually  Bearer  access_token : this is the  Access Token  itself  expires_in : a number in seconds, how long the Access Token is valid   An example:  {\n     access_token :  ACCESS_TOKEN ,\n     token_type :  bearer ,\n     expires_in : 300,\n}  See here for further details on the Access Tokens .", 
            "title": "Implicit Grant"
        }, 
        {
            "location": "/HowToAuthenticateAnUser/#client-credential-grant", 
            "text": "HINT:  Per default, this grant ist not enabled for experiments.  The  Client Credential Grant  is used for applications, which  act on their own . For this, the  Service Account  of the Client must be enabled.  Service Accounts usually apply for Organicity Accounts, but can also be used by e.g. experiments. To use a Service Account, you perform a simple HTTPS with your  client_id  and  client_secret  call, which will return a suitable Access Token:  POST /realms/organicity/protocol/openid-connect/token HTTP/1.1\nHost: accounts.organicity.eu\nAuthorization: Basic  BASE64_ENCODE(client_id:client_secret) \nContent-Type: application/x-www-form-urlencoded\n\ngrant_type=client_credentials  The Authorization header contains your  client_id  and  client_secret  encoded with HTTP basic authentication. For details on how to create this field,  see here .  The call returns a JSON record, which contains the following attributes:   token_type : This is usually  Bearer  access_token : this is the  Access Token  itself  expires_in : a number in seconds, how long the Access Token is valid   An example:  {\n     access_token :  ACCESS_TOKEN ,\n     token_type :  bearer ,\n     expires_in : 300,\n}  See here for further details on the Access Tokens .", 
            "title": "Client Credential Grant"
        }, 
        {
            "location": "/HowToAuthenticateAnUser/#libraries", 
            "text": "Of course, you do not have to write you're own OAuth2 adapter. You can use well-tested existing librabries, like the following:   Node.js with Passport:  passport-oauth2  PHP:  oauth2-client   For these two, we created two minimal working examples:   Node.js with Passport:   accounts-demo-passport  PHP:  accounts-demo-php   In order to talk to Organicity Accounts, your component needs to talk to the Accounts Server using any of the above mentioned grants.", 
            "title": "Libraries"
        }, 
        {
            "location": "/HowToAuthenticateAnUser/#sources-on-oauth2", 
            "text": "https://www.digitalocean.com/community/tutorials/an-introduction-to-oauth-2  https://alexbilbie.com/guide-to-oauth-2-grants/  https://aaronparecki.com/2012/07/29/2/oauth2-simplified", 
            "title": "Sources on OAuth2"
        }, 
        {
            "location": "/HowToOcSite/", 
            "text": "Tutorial: OC Site Federation - How to be an OC Site\n\n\nGoal of this tutorial\n:\n\n\n\n\nPush an asset (as OC Site) to the Organicity Central Orion.\n\n\n\n\nPrecondition\n:\n\n\n\n\nTo be able to push assets to the \nOrganicity Central Orion\n you need a \nclient_id\n and a \nclient_secret\n, which has the \nocsite\n role assigned.\n\n\n\n\nThe core component of the federation is the \nAsset-Subscription-Proxy\n, which subscribes itself at an Orion. Thus, the Orion notifies the Asset-Subscription-Proxy about new Assets. As soon the Asset-Subscription-Proxy gets notified, it forwards the asset to the Organicity Central Orion in am authorized way. This architecture can be seen below:\n\n\n\n\nInstall the Asset-Subscription-Proxy\n\n\nTo push assets to the Organicity Central Orion, please clone the repository of the Asset-Subscription-Proxy\n and configure it:\n\n\ngit clone https://github.com/OrganicityEu-Platform/Asset-Subscription-Proxy.git\ncd Asset-Subscription-Proxy\ncp config.js.example config.js\n\n\n\n\nNext, install the Dependencies:\n\n\nnpm install\n\n\n\n\nConfigure the Asset-Subscription-Proxy\n\n\nEdit the \nconfig.js\n by applying your \nclient_id\n and \nclient_secret\n.\n\n\nFor the \nDev-Server\n, make sure the following configuration is used:\n\n\nconfig.asset_directory_host = 'dev.orion.organicity.eu';\nconfig.asset_directory_port = '443';\nconfig.asset_directory_protocol = 'https'\n\n\n\n\nFor the \nProduction Server\n, make sure the following configuration is used:\n\n\n\n\nTODO\n\n\n\n\nAfterwards, you can start the proxy:\n\n\nnode server\n\n\n\n\nAdd Subscription to your local Orion\n\n\nEdit the \nconfig.js\n by applying your Orion configuration. In this tutorial we assume, that the Orion runs on \nlocalhost:1026\n:\n\n\nThus, use the following configuration:\n\n\nconfig.orion_host = 'localhost';\nconfig.orion_port = 1026;\nconfig.orion_protocol = 'http';\n\n\n\n\nThe default \nsubscription_url\n is \nhttp://localhost:\nPROXY_PORT\n. If this is wrong (e.g., Orion and Asset-Subscription-Proxy run on different machines), please modify the \nconfig.subscription_url\n.\n\n\nAfterwards, you can initiate the subscription:\n\n\nnode subscribe\n\n\n\n\nIf it was successful, you wll get the Subscription of your Orion:\n\n\nSuccessful: /v2/subscriptions/57ea49394735cf79905858c0\n\n\n\n\nHint\n: Run this only once. Otherwise, you have multiple subscriptions!\n\n\nVerify subscription at your local Orion\n\n\nNow you can verify your subscription:\n\n\nGET http://localhost:1026/v2/subscriptions/57ea49394735cf79905858c0\nAccept: application/json\nFiware-Service: organicity\n\n\n\n\nPush an Asset to your local Orion\n\n\nNext step is to test the federation. Keep the log of the Asset-Subscription-Proxy open. Create an asset at your local orion, with:\n\n\n\n\nHTTP header \nFiware-Service: organicity\n\n\nThe AssetID must correspond to your Site, e.g., \nurn:oc:entity:\nOCSITENAME\n:\nAssetID\n\n\n\n\nThe local Orion should send a notification to the Asset-Subscription-Proxy, which pushes the asset to the Organicity Central Orion. You should see a message like\n\n\n2016-09-27 06:37:05.265  - INFO: Organicity-subscription-proxy - Asset Creating: urn:oc:entity:\nOCSITENAME\n:\nAssetID\n\n2016-09-27 06:37:08.303  - INFO: Organicity-subscription-proxy - Asset Created: urn:oc:entity:\nOCSITENAME\n:\nAssetID\n\n\n\n\n\nThe second line indicates, that the creation at the Organicity Central Orion was successful.", 
            "title": "How To Oc Site"
        }, 
        {
            "location": "/HowToOcSite/#tutorial-oc-site-federation-how-to-be-an-oc-site", 
            "text": "Goal of this tutorial :   Push an asset (as OC Site) to the Organicity Central Orion.   Precondition :   To be able to push assets to the  Organicity Central Orion  you need a  client_id  and a  client_secret , which has the  ocsite  role assigned.   The core component of the federation is the  Asset-Subscription-Proxy , which subscribes itself at an Orion. Thus, the Orion notifies the Asset-Subscription-Proxy about new Assets. As soon the Asset-Subscription-Proxy gets notified, it forwards the asset to the Organicity Central Orion in am authorized way. This architecture can be seen below:", 
            "title": "Tutorial: OC Site Federation - How to be an OC Site"
        }, 
        {
            "location": "/HowToOcSite/#install-the-asset-subscription-proxy", 
            "text": "To push assets to the Organicity Central Orion, please clone the repository of the Asset-Subscription-Proxy\n and configure it:  git clone https://github.com/OrganicityEu-Platform/Asset-Subscription-Proxy.git\ncd Asset-Subscription-Proxy\ncp config.js.example config.js  Next, install the Dependencies:  npm install", 
            "title": "Install the Asset-Subscription-Proxy"
        }, 
        {
            "location": "/HowToOcSite/#configure-the-asset-subscription-proxy", 
            "text": "Edit the  config.js  by applying your  client_id  and  client_secret .  For the  Dev-Server , make sure the following configuration is used:  config.asset_directory_host = 'dev.orion.organicity.eu';\nconfig.asset_directory_port = '443';\nconfig.asset_directory_protocol = 'https'  For the  Production Server , make sure the following configuration is used:   TODO   Afterwards, you can start the proxy:  node server", 
            "title": "Configure the Asset-Subscription-Proxy"
        }, 
        {
            "location": "/HowToOcSite/#add-subscription-to-your-local-orion", 
            "text": "Edit the  config.js  by applying your Orion configuration. In this tutorial we assume, that the Orion runs on  localhost:1026 :  Thus, use the following configuration:  config.orion_host = 'localhost';\nconfig.orion_port = 1026;\nconfig.orion_protocol = 'http';  The default  subscription_url  is  http://localhost: PROXY_PORT . If this is wrong (e.g., Orion and Asset-Subscription-Proxy run on different machines), please modify the  config.subscription_url .  Afterwards, you can initiate the subscription:  node subscribe  If it was successful, you wll get the Subscription of your Orion:  Successful: /v2/subscriptions/57ea49394735cf79905858c0  Hint : Run this only once. Otherwise, you have multiple subscriptions!", 
            "title": "Add Subscription to your local Orion"
        }, 
        {
            "location": "/HowToOcSite/#verify-subscription-at-your-local-orion", 
            "text": "Now you can verify your subscription:  GET http://localhost:1026/v2/subscriptions/57ea49394735cf79905858c0\nAccept: application/json\nFiware-Service: organicity", 
            "title": "Verify subscription at your local Orion"
        }, 
        {
            "location": "/HowToOcSite/#push-an-asset-to-your-local-orion", 
            "text": "Next step is to test the federation. Keep the log of the Asset-Subscription-Proxy open. Create an asset at your local orion, with:   HTTP header  Fiware-Service: organicity  The AssetID must correspond to your Site, e.g.,  urn:oc:entity: OCSITENAME : AssetID   The local Orion should send a notification to the Asset-Subscription-Proxy, which pushes the asset to the Organicity Central Orion. You should see a message like  2016-09-27 06:37:05.265  - INFO: Organicity-subscription-proxy - Asset Creating: urn:oc:entity: OCSITENAME : AssetID \n2016-09-27 06:37:08.303  - INFO: Organicity-subscription-proxy - Asset Created: urn:oc:entity: OCSITENAME : AssetID   The second line indicates, that the creation at the Organicity Central Orion was successful.", 
            "title": "Push an Asset to your local Orion"
        }, 
        {
            "location": "/HowToPushAnAsset.md/", 
            "text": "Tutorial: How to push an Assets to the Organicity Facility\n\n\nYou can push Assets to two different OC Sites: \n\n\n\n\nIf you're an experimenter, please follow the \nTutorial: How to push an Assets to the Organicity Experimenter Site\n.\n\n\nIf you're a citizen or an organization owining IoT devices and you want to provide the data, please follow the \nTutorial: How to push an Assets to the Organicity Provider Site\n.", 
            "title": "How To Push An Asset"
        }, 
        {
            "location": "/HowToPushAnAsset.md/#tutorial-how-to-push-an-assets-to-the-organicity-facility", 
            "text": "You can push Assets to two different OC Sites:    If you're an experimenter, please follow the  Tutorial: How to push an Assets to the Organicity Experimenter Site .  If you're a citizen or an organization owining IoT devices and you want to provide the data, please follow the  Tutorial: How to push an Assets to the Organicity Provider Site .", 
            "title": "Tutorial: How to push an Assets to the Organicity Facility"
        }, 
        {
            "location": "/HowToPushAnAssetToTheExperimenterSite/", 
            "text": "Tutorial: How to push an Assets to the Organicity Experimenter Site\n\n\nPrecondition\n:\n\n\n\n\nTo be able to push an asset to the Organicity Experimenter Site (OC-Exp. Site), you need the \nexperimenter\n role. This will be assigned to you by the Organicity team.\n\n\n\n\nCreate an Experiment and an Application\n\n\nFirst of all, you must create an experiment within the \nExperimenter Portal\n. Please log in and click on \n[NEW EXPERIMENT]\n and follow the instructions. Make sure, the current date is between the the start date and end date.\n\n\nAfter you created an experiment, you must create an application. Please select the experiment and click on \n[APPS]\n. After you created the application, please select that application. On top, you will find three IDs, for example:\n\n\n\n\nExperimenter ID\n: \ncf2c1723-3369-4123-8b32-49abe71c0e57\n\n\nExperiment ID\n: \n57e127c010590cb31ca82aa4\n\n\nApplication ID\n: \n57e1285a10590cb31ca82aa7\n\n\n\n\nIn the next steps, we need that IDs.\n\n\nGo back to the \n[EXPERIMENTS]\n and start the experiment by clicking on \nSTOPPED\n in the state column. The state is \nrunning\n afterwards.\n\n\nPush a new asset\n\n\nThe Asset endpoint is located under \nhttps://exp.orion.organicity.eu/v2/entities\n.\n\n\nHTTP headers\n\n\nTo create a new asset, please do an HTTP POST on https://exp.orion.organicity.eu/v2/entities with the following HTTP headers:\n\n\nAuthorization: Bearer \nAccessToken\n\nX-Organicity-Application: \nApplicationID\n\nX-Organicity-Experiment: \nExperimentID\n\nContent-Type: application/json\nAccept: application/json\n\n\nAsset in JSON\n\n\n\n\n\nHere, you must use an \nAccess Token\n which is \nissued for you\n.\n\n\nFor the above IDs it looks like this:\n\n\nPOST https://exp.orion.organicity.eu/v2/entities\n\nAuthorization: Bearer \nAccessToken\n\nContent-Type: application/json\nAccept: application/json\nX-Organicity-Application: 57e1285a10590cb31ca82aa7\nX-Organicity-Experiment: 57e127c010590cb31ca82aa4\n\n\nAsset in JSON\n\n\n\n\n\nHTTP body\n\n\nThe HTTP body is an asset in JSON format \nas described here\n. Important for the creation is the correct Asset ID. An Asset ID has the form:\n\n\nurn:oc:entity:experimenters:\nExperimenterId\n:\nExperimentId\n:\nAssetId\n\n\n\n\n\nThe \nExperimenterId\n and \nExpeirmentID\n are the one from above. The \nassetID\n is application specifc. Thus, you decide how they look like. In our example, we wil just use an \n1\n as the Asset ID. In our example, it looks as follows:\n\n\nurn:oc:entity:experimenters:cf2c1723-3369-4123-8b32-49abe71c0e57:57e127c010590cb31ca82aa4:1\n\n\n\n\nA simple valid asset could be:\n\n\n{\n    \nid\n: \nurn:oc:entity:experimenters:cf2c1723-3369-4123-8b32-49abe71c0e57:57e127c010590cb31ca82aa4:1\n,\n    \ntype\n: \nurn:oc:entityType:demo\n,\n  \nTimeInstant\n: {\n    \ntype\n: \nurn:oc:attributeType:ISO8601\n,\n    \nvalue\n: \n2016-10-04T13:45:00.000Z\n\n  }\n}\n\n\n\n\nWiring everything together\n\n\nNext, we wire everthing together: The HTTP headers and the asset:\n\n\nPOST https://exp.orion.organicity.eu/v2/entities\n\nAuthorization: Bearer \nAccessToken\n\nContent-Type: application/json\nAccept: application/json\nX-Organicity-Application: 57e1285a10590cb31ca82aa7\nX-Organicity-Experiment: 57e127c010590cb31ca82aa4\n\n{\n    \nid\n: \nurn:oc:entity:experimenters:cf2c1723-3369-4123-8b32-49abe71c0e57:57e127c010590cb31ca82aa4:1\n,\n    \ntype\n: \nurn:oc:entityType:demo\n,\n  \nTimeInstant\n: {\n    \ntype\n: \nurn:oc:attributeType:ISO8601\n,\n    \nvalue\n: \n2016-10-04T13:45:00.000Z\n\n  }\n}\n\n\n\n\nThe response is a \n201 Created\n, which includes a \nlocation\n header:\n\n\nStatus Code: 201 Created\n...\nContent-Length: 0\nContent-Type: text/html; charset=utf-8\nDate: Tue, 20 Sep 2016 12:37:07 GMT\n...\nLocation: /v2/entities/urn:oc:entity:experimenters:cf2c1723-3369-4123-8b32-49abe71c0e57:57e127c010590cb31ca82aa4:1?type=urn:oc:entityType:demo\n...\n\n\n\n\nValidate, that the asset was created successfully with the Urban Data Obervatory\n\n\nTo verify, that the asset was created in Organicity Central Site, you must use the \nAsset Discovery Service\n.\nYou can simply do an HTTP GET on the \nlocation\n header returnd by the creation:\n\n\nGET http://discovery.organicity.eu/v0/assets/urn:oc:entity:experimenters:cf2c1723-3369-4123-8b32-49abe71c0e57:57e127c010590cb31ca82aa4:1\n\n\n\n\nPush as an Participant\n\n\nTo push an asset as an participant, the participant must be part of you experiment. A participant can be invited\nwith the \nExperimenter Portal\n. If a participant logs in to your application,\nthe \nparticipant\n role will be assigned. The pushing itself works as abobe.\n\n\nHINTS\n:\n\n In the Asset ID, you keep the \nExperimenterId\n!\n\n A participant can just create or read assets. Update and delete is not supported for participants.\n\n\nDelete and update assets\n\n\nSee How to \nDelete or Update an asset\n.\n\n\nDemo\n\n\nPush a new asset\n\n\nAn XMLHTTPRequest-based example can be found here: https://organicityeu.github.io/demo/pushAsset.html\n\n\nTODO in this documentation\n\n\n\n\nPublic/Private", 
            "title": "How To Push An Asset To The Experimenter Site"
        }, 
        {
            "location": "/HowToPushAnAssetToTheExperimenterSite/#tutorial-how-to-push-an-assets-to-the-organicity-experimenter-site", 
            "text": "Precondition :   To be able to push an asset to the Organicity Experimenter Site (OC-Exp. Site), you need the  experimenter  role. This will be assigned to you by the Organicity team.", 
            "title": "Tutorial: How to push an Assets to the Organicity Experimenter Site"
        }, 
        {
            "location": "/HowToPushAnAssetToTheExperimenterSite/#create-an-experiment-and-an-application", 
            "text": "First of all, you must create an experiment within the  Experimenter Portal . Please log in and click on  [NEW EXPERIMENT]  and follow the instructions. Make sure, the current date is between the the start date and end date.  After you created an experiment, you must create an application. Please select the experiment and click on  [APPS] . After you created the application, please select that application. On top, you will find three IDs, for example:   Experimenter ID :  cf2c1723-3369-4123-8b32-49abe71c0e57  Experiment ID :  57e127c010590cb31ca82aa4  Application ID :  57e1285a10590cb31ca82aa7   In the next steps, we need that IDs.  Go back to the  [EXPERIMENTS]  and start the experiment by clicking on  STOPPED  in the state column. The state is  running  afterwards.", 
            "title": "Create an Experiment and an Application"
        }, 
        {
            "location": "/HowToPushAnAssetToTheExperimenterSite/#push-a-new-asset", 
            "text": "The Asset endpoint is located under  https://exp.orion.organicity.eu/v2/entities .", 
            "title": "Push a new asset"
        }, 
        {
            "location": "/HowToPushAnAssetToTheExperimenterSite/#http-headers", 
            "text": "To create a new asset, please do an HTTP POST on https://exp.orion.organicity.eu/v2/entities with the following HTTP headers:  Authorization: Bearer  AccessToken \nX-Organicity-Application:  ApplicationID \nX-Organicity-Experiment:  ExperimentID \nContent-Type: application/json\nAccept: application/json Asset in JSON   Here, you must use an  Access Token  which is  issued for you .  For the above IDs it looks like this:  POST https://exp.orion.organicity.eu/v2/entities\n\nAuthorization: Bearer  AccessToken \nContent-Type: application/json\nAccept: application/json\nX-Organicity-Application: 57e1285a10590cb31ca82aa7\nX-Organicity-Experiment: 57e127c010590cb31ca82aa4 Asset in JSON", 
            "title": "HTTP headers"
        }, 
        {
            "location": "/HowToPushAnAssetToTheExperimenterSite/#http-body", 
            "text": "The HTTP body is an asset in JSON format  as described here . Important for the creation is the correct Asset ID. An Asset ID has the form:  urn:oc:entity:experimenters: ExperimenterId : ExperimentId : AssetId   The  ExperimenterId  and  ExpeirmentID  are the one from above. The  assetID  is application specifc. Thus, you decide how they look like. In our example, we wil just use an  1  as the Asset ID. In our example, it looks as follows:  urn:oc:entity:experimenters:cf2c1723-3369-4123-8b32-49abe71c0e57:57e127c010590cb31ca82aa4:1  A simple valid asset could be:  {\n     id :  urn:oc:entity:experimenters:cf2c1723-3369-4123-8b32-49abe71c0e57:57e127c010590cb31ca82aa4:1 ,\n     type :  urn:oc:entityType:demo ,\n   TimeInstant : {\n     type :  urn:oc:attributeType:ISO8601 ,\n     value :  2016-10-04T13:45:00.000Z \n  }\n}", 
            "title": "HTTP body"
        }, 
        {
            "location": "/HowToPushAnAssetToTheExperimenterSite/#wiring-everything-together", 
            "text": "Next, we wire everthing together: The HTTP headers and the asset:  POST https://exp.orion.organicity.eu/v2/entities\n\nAuthorization: Bearer  AccessToken \nContent-Type: application/json\nAccept: application/json\nX-Organicity-Application: 57e1285a10590cb31ca82aa7\nX-Organicity-Experiment: 57e127c010590cb31ca82aa4\n\n{\n     id :  urn:oc:entity:experimenters:cf2c1723-3369-4123-8b32-49abe71c0e57:57e127c010590cb31ca82aa4:1 ,\n     type :  urn:oc:entityType:demo ,\n   TimeInstant : {\n     type :  urn:oc:attributeType:ISO8601 ,\n     value :  2016-10-04T13:45:00.000Z \n  }\n}  The response is a  201 Created , which includes a  location  header:  Status Code: 201 Created\n...\nContent-Length: 0\nContent-Type: text/html; charset=utf-8\nDate: Tue, 20 Sep 2016 12:37:07 GMT\n...\nLocation: /v2/entities/urn:oc:entity:experimenters:cf2c1723-3369-4123-8b32-49abe71c0e57:57e127c010590cb31ca82aa4:1?type=urn:oc:entityType:demo\n...", 
            "title": "Wiring everything together"
        }, 
        {
            "location": "/HowToPushAnAssetToTheExperimenterSite/#validate-that-the-asset-was-created-successfully-with-the-urban-data-obervatory", 
            "text": "To verify, that the asset was created in Organicity Central Site, you must use the  Asset Discovery Service .\nYou can simply do an HTTP GET on the  location  header returnd by the creation:  GET http://discovery.organicity.eu/v0/assets/urn:oc:entity:experimenters:cf2c1723-3369-4123-8b32-49abe71c0e57:57e127c010590cb31ca82aa4:1", 
            "title": "Validate, that the asset was created successfully with the Urban Data Obervatory"
        }, 
        {
            "location": "/HowToPushAnAssetToTheExperimenterSite/#push-as-an-participant", 
            "text": "To push an asset as an participant, the participant must be part of you experiment. A participant can be invited\nwith the  Experimenter Portal . If a participant logs in to your application,\nthe  participant  role will be assigned. The pushing itself works as abobe.  HINTS :  In the Asset ID, you keep the  ExperimenterId !  A participant can just create or read assets. Update and delete is not supported for participants.", 
            "title": "Push as an Participant"
        }, 
        {
            "location": "/HowToPushAnAssetToTheExperimenterSite/#delete-and-update-assets", 
            "text": "See How to  Delete or Update an asset .", 
            "title": "Delete and update assets"
        }, 
        {
            "location": "/HowToPushAnAssetToTheExperimenterSite/#demo", 
            "text": "", 
            "title": "Demo"
        }, 
        {
            "location": "/HowToPushAnAssetToTheExperimenterSite/#push-a-new-asset_1", 
            "text": "An XMLHTTPRequest-based example can be found here: https://organicityeu.github.io/demo/pushAsset.html", 
            "title": "Push a new asset"
        }, 
        {
            "location": "/HowToPushAnAssetToTheExperimenterSite/#todo-in-this-documentation", 
            "text": "Public/Private", 
            "title": "TODO in this documentation"
        }, 
        {
            "location": "/HowToPushAnAssetToTheProviderSite/", 
            "text": "Tutorial: How to push an Assets to the Organicity Provider Site\n\n\nTODO", 
            "title": "How To Push An Asset To The Provider Site"
        }, 
        {
            "location": "/HowToPushAnAssetToTheProviderSite/#tutorial-how-to-push-an-assets-to-the-organicity-provider-site", 
            "text": "TODO", 
            "title": "Tutorial: How to push an Assets to the Organicity Provider Site"
        }, 
        {
            "location": "/HowToRefreshToken/", 
            "text": "Tutorial: How to Refresh Tokens\n\n\nGoal of this tutorial\n:\n\n\n\n\nRefresh the token of a user for your own application with \nOrganicity Accounts\n (Offline Tokens).\n\n\n\n\nPreconditions\n:\n\n\n\n\nYou created an experimen within the \nOrganicity Experimenter Portal\n.\n\n\nThe Experimenter Portal provides you a \nclient_id\n and a \nclient_secret\n, both is needed in this tutorial.\n\n\nAdditionally, you're experiment needs the role \noffline_access\n to get Refresh Tokens. This will be assigned to your experiment by the Organicity team.\n\n\n\n\nAuthentication in Organicity is activity-centere: Users acquire \nAccess Tokens\n to perform an action with them in the next minutes. Access Tokens invalidate after 5 minutes, and have to be renewed with Refresh Tokens.\n\n\nWhile this is good for security, it is unusable for long-term applications that run without supervision, like environmentally deployed sensor nodes.\nAs these nodes still need to contact Organicity, for example to post measured data, they need a way to authenticate. This is facilitated by Refresh Tokens.\n\n\nPlease note\n: In order to generate Offline Tokens, a user needs to have the required role \noffline_access\n. Usually, every user gets this role when they sign up.\n\n\nAcquire Refresh Tokens\n\n\nTo acquire Refresh Tokens, you just need to append the additional query parameter \nscope=offline_access\n to your Authorization Endpoint.\n\n\nAuthorization Code Grant\n\n\nThe flow is the same as \ndescribed here\n, just with the additional query parameter \nscope=offline_access\n.\n\n\nThe full authorization URL looks as follows:\n\n\nhttps://accounts.organicity.eu/realms/organicity/protocol/openid-connect/auth?client_id=\nCLIENT_ID\nresponse_type=code\nredirect_uri=\nREDIRECT_URI\nscope=offline_access\n\n\n\n\nAs in the regular grant, it returns an \nAuthorization Code\n which must be converted into an Access Token.\n\n\nIf successful, the server returns a JSON, which contains the following attributes:\n\n\n\n\ntoken_type\n: This is usually \nBearer\n\n\naccess_token\n: this is the \nAccess Token\n in JSON\n\n\nexpires_in\n: a number in seconds, how long the Access Token is valid\n\n\nrefresh_token\n: this is the \nRefresh Token\n\n\ntyp\n: The type is \u00e0lways \nOffline\n\n\nrefresh_expires_in\n: this is usually \n0\n, because the Refresh Token never exipres\n\n\n\n\nAn example:\n\n\n{\n    \naccess_token\n: \nACCESS_TOKEN\n,\n    \ntoken_type\n: \nbearer\n,\n    \nexpires_in\n: 300,\n    \nrefresh_token\n: \nREFRESH_TOKEN\n,\n    \ntyp\n: Offline\n,\n    \nrefresh_expires_in\n: 0\n}\n\n\n\n\nImplicit Grant\n\n\nThis grant cannot return a refresh token, because the application cannot keep the \nclient_secret\n confidential (see below).\n\n\nClient Credential Grant\n\n\nThis grant cannot return a refresh token, because this grant directly returns the Access Token.\n\n\nRefresh Token Grant\n\n\nTo use a the \nRefresh Token Grant\n, you perform a simple HTTPS call, which will return a new suitable Access Token.\n\n\nPOST /realms/organicity/protocol/openid-connect/token HTTP/1.1\nHost: accounts.organicity.eu\nAuthorization: Basic \nBASE64_ENCODE(client_id:client_secret)\n\nContent-Type: application/x-www-form-urlencoded\n\ngrant_type=refresh_token\nrefresh_token=\nREFRESH_TOKEN\n\n\n\n\n\nPlease note, that the same \nclient_id\n and \nclient_secret\n is needed to refresh the token.\n\n\nThe server verifies your credentials and the refresh token.\nIf successful, the server returns a JSON record as described above.\n\n\nPlease note\n\n\n\n\nRefresh Tokens are valid indefinitely, thus Refresh Tokens will remain valid from call to call, so each renewal can be performed with \nthe same initial Refresh Token\n! This means, there is no reason to store the refresh Token from the response. Thus, Offline-Tokens can be used by embedded devices like IoT devices.\n\n\nThis is normal \nAccess Token\n, which can be used a Bearer Token for all Organicity APIs\n\n\nThe \nAccess Token is valid for 5 Minutes\n, thus a refresh is needed after 5 minutes.\n\n\nAn Access Token needs to be refreshed at least \nevery 30 days\n, as otherwise the Refresh Token will invalidate, and a new Refresh Token needs to be generated.\n\n\n\n\nCode Sample\n\n\nNext we will describe a way, how you get Offline Tokens with the node.js tool \naccounts-demo-passport\n.\n\n\nTo get the initial Refresh Token, please install the tool as described in the README. Change the file \nserver/auth/oauth2.js\n by adding your \nclient_id\n and \nclient_secret\n and run the application. The application runs on port 3000 by default. Set the environment variable PORT to another if needed (e.g., \nPORT=4000\n). Make sure, that you configure the following callback URL in the \nExperimenter Portal\n:\n\n\n\n\nhttp://localhost:3000/auth/oauth2/callback\n\n\n\n\nAfterwards, open the application within your browser:\n\n\n\n\nhttp://localhost:3000\n\n\n\n\nPlease login with your username and password (or social login) and open the profile page. There you find two tokens: an Access Token and a Refresh Token.", 
            "title": "How To Refresh Token"
        }, 
        {
            "location": "/HowToRefreshToken/#tutorial-how-to-refresh-tokens", 
            "text": "Goal of this tutorial :   Refresh the token of a user for your own application with  Organicity Accounts  (Offline Tokens).   Preconditions :   You created an experimen within the  Organicity Experimenter Portal .  The Experimenter Portal provides you a  client_id  and a  client_secret , both is needed in this tutorial.  Additionally, you're experiment needs the role  offline_access  to get Refresh Tokens. This will be assigned to your experiment by the Organicity team.   Authentication in Organicity is activity-centere: Users acquire  Access Tokens  to perform an action with them in the next minutes. Access Tokens invalidate after 5 minutes, and have to be renewed with Refresh Tokens.  While this is good for security, it is unusable for long-term applications that run without supervision, like environmentally deployed sensor nodes.\nAs these nodes still need to contact Organicity, for example to post measured data, they need a way to authenticate. This is facilitated by Refresh Tokens.  Please note : In order to generate Offline Tokens, a user needs to have the required role  offline_access . Usually, every user gets this role when they sign up.", 
            "title": "Tutorial: How to Refresh Tokens"
        }, 
        {
            "location": "/HowToRefreshToken/#acquire-refresh-tokens", 
            "text": "To acquire Refresh Tokens, you just need to append the additional query parameter  scope=offline_access  to your Authorization Endpoint.", 
            "title": "Acquire Refresh Tokens"
        }, 
        {
            "location": "/HowToRefreshToken/#authorization-code-grant", 
            "text": "The flow is the same as  described here , just with the additional query parameter  scope=offline_access .  The full authorization URL looks as follows:  https://accounts.organicity.eu/realms/organicity/protocol/openid-connect/auth?client_id= CLIENT_ID response_type=code redirect_uri= REDIRECT_URI scope=offline_access  As in the regular grant, it returns an  Authorization Code  which must be converted into an Access Token.  If successful, the server returns a JSON, which contains the following attributes:   token_type : This is usually  Bearer  access_token : this is the  Access Token  in JSON  expires_in : a number in seconds, how long the Access Token is valid  refresh_token : this is the  Refresh Token  typ : The type is \u00e0lways  Offline  refresh_expires_in : this is usually  0 , because the Refresh Token never exipres   An example:  {\n     access_token :  ACCESS_TOKEN ,\n     token_type :  bearer ,\n     expires_in : 300,\n     refresh_token :  REFRESH_TOKEN ,\n     typ : Offline ,\n     refresh_expires_in : 0\n}", 
            "title": "Authorization Code Grant"
        }, 
        {
            "location": "/HowToRefreshToken/#implicit-grant", 
            "text": "This grant cannot return a refresh token, because the application cannot keep the  client_secret  confidential (see below).", 
            "title": "Implicit Grant"
        }, 
        {
            "location": "/HowToRefreshToken/#client-credential-grant", 
            "text": "This grant cannot return a refresh token, because this grant directly returns the Access Token.", 
            "title": "Client Credential Grant"
        }, 
        {
            "location": "/HowToRefreshToken/#refresh-token-grant", 
            "text": "To use a the  Refresh Token Grant , you perform a simple HTTPS call, which will return a new suitable Access Token.  POST /realms/organicity/protocol/openid-connect/token HTTP/1.1\nHost: accounts.organicity.eu\nAuthorization: Basic  BASE64_ENCODE(client_id:client_secret) \nContent-Type: application/x-www-form-urlencoded\n\ngrant_type=refresh_token refresh_token= REFRESH_TOKEN   Please note, that the same  client_id  and  client_secret  is needed to refresh the token.  The server verifies your credentials and the refresh token.\nIf successful, the server returns a JSON record as described above.", 
            "title": "Refresh Token Grant"
        }, 
        {
            "location": "/HowToRefreshToken/#please-note", 
            "text": "Refresh Tokens are valid indefinitely, thus Refresh Tokens will remain valid from call to call, so each renewal can be performed with  the same initial Refresh Token ! This means, there is no reason to store the refresh Token from the response. Thus, Offline-Tokens can be used by embedded devices like IoT devices.  This is normal  Access Token , which can be used a Bearer Token for all Organicity APIs  The  Access Token is valid for 5 Minutes , thus a refresh is needed after 5 minutes.  An Access Token needs to be refreshed at least  every 30 days , as otherwise the Refresh Token will invalidate, and a new Refresh Token needs to be generated.", 
            "title": "Please note"
        }, 
        {
            "location": "/HowToRefreshToken/#code-sample", 
            "text": "Next we will describe a way, how you get Offline Tokens with the node.js tool  accounts-demo-passport .  To get the initial Refresh Token, please install the tool as described in the README. Change the file  server/auth/oauth2.js  by adding your  client_id  and  client_secret  and run the application. The application runs on port 3000 by default. Set the environment variable PORT to another if needed (e.g.,  PORT=4000 ). Make sure, that you configure the following callback URL in the  Experimenter Portal :   http://localhost:3000/auth/oauth2/callback   Afterwards, open the application within your browser:   http://localhost:3000   Please login with your username and password (or social login) and open the profile page. There you find two tokens: an Access Token and a Refresh Token.", 
            "title": "Code Sample"
        }, 
        {
            "location": "/HowToUpdateDeteleAnAsset/", 
            "text": "Tutorial: How to update or delete an Assets to the Organicity Experimenter Site\n\n\nPrecondition\n:\n\n\n\n\nTo be able to update/delete an asset to the Organicity Experimenter Site (OC-Exp. Site), you need the \nexperimenter\n role. This will be assigned to you by the Organicity team.\n\n\nYou should know \nhow to push an Asset to the Organicity Platform\n.\n\n\n\n\nUpdate an asset\n\n\nThe update of an asset works similar to the creation (with some minor changes):\n\n\n\n\nTo update a new asset, please do an HTTP POST on \nhttps://exp.orion.organicity.eu/v2/entities/\nAssetID\n/attrs\n with the\n\nsame HTTP headers\n as in the creation step:\n\n\nAuthorization: Bearer \nAccessToken\n\nX-Organicity-Application: \nApplicationID\n\nX-Organicity-Experiment: \nExperimentID\n\nContent-Type: application/json\nAccept: application/json\n\n\nAsset in JSON\n\n\n\n\n\nHint\n: Be aware of the \n/attrs\n while updating an asset!\n\n\nAsset ID\n\n\nImportant for the update is, that the \nsame Asset ID\n is used as during the creation.\n\n\nHTTP body\n\n\nThe HTTP body is an asset in JSON format \nas described here\n. To update an asset, you're not allowed to use the JSON attributes\n\nid\n and \ntype\n.\n\n\nA simple valid asset for an update could be:\n\n\n{\n  \nTimeInstant\n: {\n    \ntype\n: \nurn:oc:attributeType:ISO8601\n,\n    \nvalue\n: \n2016-10-04T13:45:00.000Z\n\n  }\n}\n\n\n\n\nWiring everything together\n\n\nNext, we wire everthing together: The HTTP headers and the asset:\n\n\nPOST https://exp.orion.organicity.eu/v2/entities/urn:oc:entity:experimenters:cf2c1723-3369-4123-8b32-49abe71c0e57:57e127c010590cb31ca82aa4:1/attrs\n\nAuthorization: Bearer \nAccessToken\n\nContent-Type: application/json\nAccept: application/json\nX-Organicity-Application: 57e1285a10590cb31ca82aa7\nX-Organicity-Experiment: 57e127c010590cb31ca82aa4\n\n{\n  \nTimeInstant\n: {\n    \ntype\n: \nurn:oc:attributeType:ISO8601\n,\n    \nvalue\n: \n2016-10-04T13:45:00.000Z\n\n  }\n}\n\n\n\n\nIf the asset was created before, you get a \n404 Not Found\n which tells you, that the asset does not exixts. Please make sure, that you \npushed the Asset to the Organicity Platform\n.\n\n\nIf the asset was created before, and everything else is correct, e.g, HTTP headers, asset format, etc., then the response is a \n204 No Content\n, which tells you that asset was updated:\n\n\nStatus Code: 204 No Content\n...\nContent-Length: 0\nContent-Type: text/html; charset=utf-8\nDate: Tue, 20 Sep 2016 12:37:07 GMT\n...\n\n\n\n\nValidate, that the asset was updated successfully with the Urban Data Obervatory\n\n\nTo verify, that the asset was updated in Organicity Central Site, you must use the \nAsset Discovery Service\n.\nYou can simply do an HTTP GET on the \nlocation\n header returnd by the creation:\n\n\nGET http://discovery.organicity.eu/v0/assets/urn:oc:entity:experimenters:cf2c1723-3369-4123-8b32-49abe71c0e57:57e127c010590cb31ca82aa4:1\n\n\n\n\nHint\n: This only works, if the privacy level of your asset is public.\n\n\nDelete an asset\n\n\nTo delete the asset, you must do an HTTP \nDELETE\n to the OC-Exp. Site. You must add the \nAuthorization\n,\n\nX-Organicity-Application\n and \nX-Organicity-Experiment\n headers as well:\n\n\nDELETE https://exp.orion.organicity.eu/v2/entities/urn:oc:entity:experimenters:cf2c1723-3369-4123-8b32-49abe71c0e57:57e127c010590cb31ca82aa4:1?type=urn:oc:entityType:demo\n\nAuthorization: Bearer \nAccessToken\n\nAccept: application/json\nX-Organicity-Application: 57e1285a10590cb31ca82aa7\nX-Organicity-Experiment: 57e127c010590cb31ca82aa4\n\n\n\n\nThe response is a \n204 No Content\n, which tells you that asset was deleted:\n\n\n```shell\nStatus Code: 204 No Content\n...\nContent-Length: 0\nContent-Type: text/html; charset=utf-8\nDate: Tue, 20 Sep 2016 12:37:07 GMT\n...\n\n\nUpdate/Delete as an Participant\n\n\nThis is not supported.", 
            "title": "How To Update Detele An Asset"
        }, 
        {
            "location": "/HowToUpdateDeteleAnAsset/#tutorial-how-to-update-or-delete-an-assets-to-the-organicity-experimenter-site", 
            "text": "Precondition :   To be able to update/delete an asset to the Organicity Experimenter Site (OC-Exp. Site), you need the  experimenter  role. This will be assigned to you by the Organicity team.  You should know  how to push an Asset to the Organicity Platform .", 
            "title": "Tutorial: How to update or delete an Assets to the Organicity Experimenter Site"
        }, 
        {
            "location": "/HowToUpdateDeteleAnAsset/#update-an-asset", 
            "text": "The update of an asset works similar to the creation (with some minor changes):", 
            "title": "Update an asset"
        }, 
        {
            "location": "/HowToUpdateDeteleAnAsset/#asset-id", 
            "text": "Important for the update is, that the  same Asset ID  is used as during the creation.", 
            "title": "Asset ID"
        }, 
        {
            "location": "/HowToUpdateDeteleAnAsset/#http-body", 
            "text": "The HTTP body is an asset in JSON format  as described here . To update an asset, you're not allowed to use the JSON attributes id  and  type .  A simple valid asset for an update could be:  {\n   TimeInstant : {\n     type :  urn:oc:attributeType:ISO8601 ,\n     value :  2016-10-04T13:45:00.000Z \n  }\n}", 
            "title": "HTTP body"
        }, 
        {
            "location": "/HowToUpdateDeteleAnAsset/#wiring-everything-together", 
            "text": "Next, we wire everthing together: The HTTP headers and the asset:  POST https://exp.orion.organicity.eu/v2/entities/urn:oc:entity:experimenters:cf2c1723-3369-4123-8b32-49abe71c0e57:57e127c010590cb31ca82aa4:1/attrs\n\nAuthorization: Bearer  AccessToken \nContent-Type: application/json\nAccept: application/json\nX-Organicity-Application: 57e1285a10590cb31ca82aa7\nX-Organicity-Experiment: 57e127c010590cb31ca82aa4\n\n{\n   TimeInstant : {\n     type :  urn:oc:attributeType:ISO8601 ,\n     value :  2016-10-04T13:45:00.000Z \n  }\n}  If the asset was created before, you get a  404 Not Found  which tells you, that the asset does not exixts. Please make sure, that you  pushed the Asset to the Organicity Platform .  If the asset was created before, and everything else is correct, e.g, HTTP headers, asset format, etc., then the response is a  204 No Content , which tells you that asset was updated:  Status Code: 204 No Content\n...\nContent-Length: 0\nContent-Type: text/html; charset=utf-8\nDate: Tue, 20 Sep 2016 12:37:07 GMT\n...", 
            "title": "Wiring everything together"
        }, 
        {
            "location": "/HowToUpdateDeteleAnAsset/#validate-that-the-asset-was-updated-successfully-with-the-urban-data-obervatory", 
            "text": "To verify, that the asset was updated in Organicity Central Site, you must use the  Asset Discovery Service .\nYou can simply do an HTTP GET on the  location  header returnd by the creation:  GET http://discovery.organicity.eu/v0/assets/urn:oc:entity:experimenters:cf2c1723-3369-4123-8b32-49abe71c0e57:57e127c010590cb31ca82aa4:1  Hint : This only works, if the privacy level of your asset is public.", 
            "title": "Validate, that the asset was updated successfully with the Urban Data Obervatory"
        }, 
        {
            "location": "/HowToUpdateDeteleAnAsset/#delete-an-asset", 
            "text": "To delete the asset, you must do an HTTP  DELETE  to the OC-Exp. Site. You must add the  Authorization , X-Organicity-Application  and  X-Organicity-Experiment  headers as well:  DELETE https://exp.orion.organicity.eu/v2/entities/urn:oc:entity:experimenters:cf2c1723-3369-4123-8b32-49abe71c0e57:57e127c010590cb31ca82aa4:1?type=urn:oc:entityType:demo\n\nAuthorization: Bearer  AccessToken \nAccept: application/json\nX-Organicity-Application: 57e1285a10590cb31ca82aa7\nX-Organicity-Experiment: 57e127c010590cb31ca82aa4  The response is a  204 No Content , which tells you that asset was deleted:  ```shell\nStatus Code: 204 No Content\n...\nContent-Length: 0\nContent-Type: text/html; charset=utf-8\nDate: Tue, 20 Sep 2016 12:37:07 GMT\n...", 
            "title": "Delete an asset"
        }, 
        {
            "location": "/HowToUpdateDeteleAnAsset/#updatedelete-as-an-participant", 
            "text": "This is not supported.", 
            "title": "Update/Delete as an Participant"
        }
    ]
}